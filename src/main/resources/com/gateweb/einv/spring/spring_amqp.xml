<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
		http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--配置connection-factory， 連接 rabbit server 参数（ip/domain, vhost, user, pass） -->
    <!-- <rabbit:connection-factory id="connectionFactory"/> -->
    
	<task:executor id="taskExecutor" pool-size="4-256" queue-capacity="128" />
	<bean id="jsonMessageConverter"  
        class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"></bean>
     
	<bean id="rabbitListenerContainerFactory" class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="transactionManager" ref="transactionManager" />  
        <property name="concurrentConsumers" value="1" />  
        <property name="maxConcurrentConsumers" value="10" />  
        <property name="messageConverter" ref="jsonMessageConverter" />  
        <property name="taskExecutor" ref="taskExecutor" />  
        <property name="channelTransacted" value="true" />  
       <!--  <property name="adviceChain">  
            <array>  
                <ref bean="retryInterceptor" />  
            </array>  
        </property>   -->
	</bean>  
     
	<rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}" username="test" password="test123" 
    	executor="taskExecutor" />
    
  <!--  <bean id="connectionFactory"
      class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
	   <constructor-arg value="localhost"/>
	    <property name="username" value="test"/>
	    <property name="password" value="test123"/>
	    <property name="channelCacheSize" value="50"/>
	</bean> -->
	
	<!-- 建立管理機制，如果沒有exchange, queue，自動建立exchange, queue -->
    <rabbit:admin connection-factory="connectionFactory"/>

	<!-- 產生queue -->
    <rabbit:queue name="userSearchLikeQuery" durable="true" auto-delete="false" exclusive="false"  />
    
    <rabbit:queue name="ackQuery" durable="true" auto-delete="false" exclusive="false"  />
    
    <rabbit:queue name="invoicePriorityQueue" durable="true" auto-delete="false" exclusive="false" >
	    <rabbit:queue-arguments>
	        <entry key="x-max-priority">
	            <value type="java.lang.Integer">50</value> <!-- MUST specifically define java.lang.Integer to get it to work. Larger numbers indicate higher priority-->
	        </entry>
	    </rabbit:queue-arguments>
	</rabbit:queue>
    
    <!-- consumer -->
    <bean id="consumer" class="com.gateweb.einv.amqp.Consumer"/>
    <bean id="aconsumer" class="com.gateweb.einv.amqp.AckConsumer"/>
    <bean id="pconsumer" class="com.gateweb.einv.amqp.PriorityConsumer"/>

	<rabbit:listener-container connection-factory="connectionFactory" >
        <rabbit:listener  ref="consumer" queue-names="userSearchLikeQuery" />
    </rabbit:listener-container>
    
     <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" >
        <rabbit:listener ref="aconsumer" queue-names="ackQuery" />
    </rabbit:listener-container>
    
    <rabbit:listener-container connection-factory="connectionFactory" >
        <rabbit:listener ref="pconsumer" queue-names="invoicePriorityQueue" />
    </rabbit:listener-container>
    
    <!-- producer -->
    
    <!-- 設定direct exchange，绑定queue -->
    <rabbit:direct-exchange name="testexchange"  durable="true" auto-delete="false" >
	    <rabbit:bindings>
	      <rabbit:binding queue="userSearchLikeQuery" key="queueTestKey"></rabbit:binding>
	    </rabbit:bindings>
	</rabbit:direct-exchange>
	
	<rabbit:direct-exchange name="ackexchange"  durable="true" auto-delete="false" >
	    <rabbit:bindings>
	      <rabbit:binding queue="ackQuery" key="ackKey"></rabbit:binding>
	    </rabbit:bindings>
	</rabbit:direct-exchange>
	
	<rabbit:direct-exchange name="priorityexchange"  durable="true" auto-delete="false" >
	    <rabbit:bindings>
	      <rabbit:binding queue="invoicePriorityQueue" key="priorityKey"></rabbit:binding>
	    </rabbit:bindings>
	</rabbit:direct-exchange>

	<!--使用 rabbit template 傳送接收數據，目前先用傳送, default is testexchange -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" 
		exchange="testexchange" message-converter="jsonMessageConverter" />
    
	<bean id="bconsumer" class="com.gateweb.einv.amqp.BackConsumer"/>
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" >
        <rabbit:listener ref="bconsumer" queue-names="testback" />
    </rabbit:listener-container>
    
    <rabbit:queue id="testback" durable="true" auto-delete="false" exclusive="false" name="testback" />
	<rabbit:direct-exchange name="testexchangeback" durable="true" auto-delete="false" id="testexchangeback" >
        <rabbit:bindings>
            <rabbit:binding queue="testback" key="testback_key" />
        </rabbit:bindings>
    </rabbit:direct-exchange>
  

</beans>