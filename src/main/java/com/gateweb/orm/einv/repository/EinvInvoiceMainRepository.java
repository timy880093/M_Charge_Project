/*
 * $Header: $
 * This java source file is generated by pkliu on Thu Aug 03 11:22:57 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.orm.einv.repository;

import com.gateweb.orm.einv.entity.InvoiceMain;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.math.BigInteger;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.Set;

@Repository("einvInvoiceMainRepository")
public interface EinvInvoiceMainRepository extends JpaRepository<InvoiceMain, Long> {

    /**
     * 查詢該年月日期區間有開立發票的公司統編 用於重新產生invoiceAmountSummaryReport用
     *
     * @param invoiceDate
     * @return
     */
    @Query(value = "SELECT DISTINCT seller " +
            "FROM invoice_main im " +
            "WHERE invoice_date LIKE :invoiceDate and c_year_month = :yearMonth ", nativeQuery = true)
    Set<String> findByInvoiceDateLikeAndYearMonth(@Param("invoiceDate") String invoiceDate, @Param("yearMonth") String yearMonth);

    @Query(value = "SELECT * from invoice_main im WHERE c_year_month = :yearMonth limit 100 ", nativeQuery = true)
    public List<InvoiceMain> findTop100ByCYearMonth(String yearMonth);


    @Query(value = "SELECT min(CONCAT(invoice_date,' ',invoice_time)) FROM invoice_main im " +
            " WHERE im.seller = :businessNo " +
            " AND c_year_month >= :yearMonth " +
            " AND im.c_invoice_status = '2' " +
            " AND im.create_date < now() - interval '7 days';", nativeQuery = true)
    String findFirstInvoiceDateByBusinessNoAndYearMonthAfter(
            @Param("businessNo") String businessNo,
            @Param("yearMonth") String yearMonth
    );

    @Deprecated
    @Query(value = "SELECT min(CONCAT(invoice_date,' ',invoice_time)) FROM invoice_main im " +
            " WHERE im.seller = :businessNo " +
            " AND c_year_month = :yearMonth " +
            " AND im.c_invoice_status = '2' " +
            " AND im.create_date < now() - interval '7 days';", nativeQuery = true)
    String findFirstInvoiceDateByBusinessNoAndYearMonthEq(
            @Param("businessNo") String businessNo,
            @Param("yearMonth") String yearMonth
    );

    /**
     * 竟然不能用Integer只能用BigInteger來接，太詭異惹，不知道為什麼
     * 注意：between 是兩邊都包含
     *
     * @param from
     * @param to
     * @param cYearMonth
     * @param seller
     * @return
     */
    @Query(value = "SELECT count(invoice_id) AS count " +
            "FROM invoice_main " +
            "WHERE create_date BETWEEN :from AND :to " +
            "  AND c_year_month = :cYearMonth " +
            "  AND seller = :seller " +
            "  AND source IS NULL " +
            "GROUP BY seller;", nativeQuery = true)
    Optional<BigInteger> findUsageCountByUploadDate(
            @Param("from") LocalDateTime from
            , @Param("to") LocalDateTime to
            , @Param("cYearMonth") String cYearMonth
            , @Param("seller") String seller
    );

    /**
     * 為了查出哪一個上傳日期的張數等價於特定數量
     * 前提條件：
     * 1.每張發票的上傳日期皆為不同(localDateTime)
     * <p>
     * 我們轉化該題目為
     * 指定年月發票的上傳日期中，第「可使用張數」數量的日期的排序結果的上傳日期
     * 與指定年月發票的張數是等價的
     */
    @Query(value = " select max(create_date) from ( " +
            " select create_date from invoice_main " +
            " where seller = :seller and c_year_month = :yearMonth " +
            " order by create_date limit :num " +
            " ) temp1 ", nativeQuery = true)
    Optional<Timestamp> findTopLocalDateTimeBySellerAndYearMonth(
            @Param("seller") String seller
            , @Param("yearMonth") String yearMonth
            , @Param("num") Integer num
    );
}

	