/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity;


import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.9"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "new_grade", schema = "public", indexes = {
        @Index(name = "new_grade_pkey", unique = true, columnList = "grade_id ASC")
})
public class RootGradeFetchView implements Serializable {

    private static final long serialVersionUID = -872250748;

    private Long gradeId;
    private Boolean enabled;
    private String name;
    private List<NewGrade> children;

    public RootGradeFetchView() {
    }

    public RootGradeFetchView(Long gradeId, Boolean enabled, String name, List<NewGrade> children) {
        this.gradeId = gradeId;
        this.enabled = enabled;
        this.name = name;
        this.children = children;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "grade_id", unique = true, nullable = false, precision = 64)
    public Long getGradeId() {
        return this.gradeId;
    }

    public void setGradeId(Long gradeId) {
        this.gradeId = gradeId;
    }

    @Column(name = "enabled")
    public Boolean getEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    @Column(name = "name", length = 25)
    @Size(max = 25)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch = FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "root_id", referencedColumnName = "grade_id")
    @BatchSize(size = 10)
    public List<NewGrade> getChildren() {
        return children;
    }

    public void setChildren(List<NewGrade> children) {
        this.children = children;
    }

    @Override
    public String toString() {
        return "RootGradeFetchView{" +
                "gradeId=" + gradeId +
                ", enabled=" + enabled +
                ", name='" + name + '\'' +
                ", children=" + children +
                '}';
    }
}
