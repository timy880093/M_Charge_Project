/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity;


import com.gateweb.charge.enumeration.ChargeBaseType;
import com.gateweb.charge.enumeration.ChargePlan;
import com.gateweb.charge.enumeration.CycleType;
import com.gateweb.charge.enumeration.PaidPlan;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "charge_rule", schema = "public", uniqueConstraints = {
        @UniqueConstraint(name = "charge_rule_pkey", columnNames = {"charge_rule_id"})
})
public class ChargeRule implements Serializable {

    private static final long serialVersionUID = -968181264;

    private Long chargeRuleId;
    private String name;
    private Boolean enabled;
    private PaidPlan paidPlan;
    private ChargePlan chargePlan;
    private Long productCategoryId;
    private Long gradeId;
    private ChargeBaseType chargeBaseType;
    private CycleType chargeCycleType;
    private CycleType calculateCycleType;
    private BigDecimal maximumCharge;
    private Boolean chargeByRemainingCount;
    private Boolean circulation;
    private Boolean accumulation;
    private Long creatorId;
    private LocalDateTime createDate;
    private Long modifierId;
    private LocalDateTime modifyDate;

    public ChargeRule() {
    }

    public ChargeRule(Long chargeRuleId, String name, Boolean enabled, PaidPlan paidPlan, ChargePlan chargePlan, Long productCategoryId, Long gradeId, ChargeBaseType chargeBaseType, CycleType chargeCycleType, CycleType calculateCycleType, BigDecimal maximumCharge, Boolean chargeByRemainingCount, Boolean circulation, Boolean accumulation, Long creatorId, LocalDateTime createDate, Long modifierId, LocalDateTime modifyDate) {
        this.chargeRuleId = chargeRuleId;
        this.name = name;
        this.enabled = enabled;
        this.paidPlan = paidPlan;
        this.chargePlan = chargePlan;
        this.productCategoryId = productCategoryId;
        this.gradeId = gradeId;
        this.chargeBaseType = chargeBaseType;
        this.chargeCycleType = chargeCycleType;
        this.calculateCycleType = calculateCycleType;
        this.maximumCharge = maximumCharge;
        this.chargeByRemainingCount = chargeByRemainingCount;
        this.circulation = circulation;
        this.accumulation = accumulation;
        this.creatorId = creatorId;
        this.createDate = createDate;
        this.modifierId = modifierId;
        this.modifyDate = modifyDate;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "charge_rule_id", nullable = false, precision = 64)
    public Long getChargeRuleId() {
        return chargeRuleId;
    }

    public void setChargeRuleId(Long chargeRuleId) {
        this.chargeRuleId = chargeRuleId;
    }

    @Column(name = "name", length = 30)
    @Size(max = 30)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "enabled")
    public Boolean getEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    @Column(name = "paid_plan")
    @Enumerated(EnumType.STRING)
    public PaidPlan getPaidPlan() {
        return paidPlan;
    }

    public void setPaidPlan(PaidPlan paidPlan) {
        this.paidPlan = paidPlan;
    }

    @Column(name = "charge_plan")
    @Enumerated(EnumType.STRING)
    public ChargePlan getChargePlan() {
        return chargePlan;
    }

    public void setChargePlan(ChargePlan chargePlan) {
        this.chargePlan = chargePlan;
    }

    @Column(name = "product_category_id", precision = 64)
    public Long getProductCategoryId() {
        return this.productCategoryId;
    }

    public void setProductCategoryId(Long productCategoryId) {
        this.productCategoryId = productCategoryId;
    }

    @Column(name = "grade_id", precision = 64)
    public Long getGradeId() {
        return this.gradeId;
    }

    public void setGradeId(Long gradeId) {
        this.gradeId = gradeId;
    }

    @Column(name = "charge_base_type")
    @Enumerated(EnumType.STRING)
    public ChargeBaseType getChargeBaseType() {
        return chargeBaseType;
    }

    public void setChargeBaseType(ChargeBaseType chargeBaseType) {
        this.chargeBaseType = chargeBaseType;
    }

    @Column(name = "charge_cycle_type", precision = 64)
    @Enumerated(EnumType.STRING)
    public CycleType getChargeCycleType() {
        return chargeCycleType;
    }

    public void setChargeCycleType(CycleType chargeCycleType) {
        this.chargeCycleType = chargeCycleType;
    }

    @Column(name = "calculate_cycle_type", precision = 64)
    @Enumerated(EnumType.STRING)
    public CycleType getCalculateCycleType() {
        return calculateCycleType;
    }

    public void setCalculateCycleType(CycleType calculateCycleType) {
        this.calculateCycleType = calculateCycleType;
    }

    @Column(name = "maximum_charge", precision = 23, scale = 4)
    public BigDecimal getMaximumCharge() {
        return this.maximumCharge;
    }

    public void setMaximumCharge(BigDecimal maximumCharge) {
        this.maximumCharge = maximumCharge;
    }

    @Column(name = "charge_by_remaining_count")
    public Boolean getChargeByRemainingCount() {
        return chargeByRemainingCount;
    }

    public void setChargeByRemainingCount(Boolean chargeByRemainingCount) {
        this.chargeByRemainingCount = chargeByRemainingCount;
    }

    @Column(name = "circulation")
    public Boolean getCirculation() {
        return this.circulation;
    }

    public void setCirculation(Boolean circulation) {
        this.circulation = circulation;
    }

    @Column(name = "accumulation")
    public Boolean getAccumulation() {
        return this.accumulation;
    }

    public void setAccumulation(Boolean accumulation) {
        this.accumulation = accumulation;
    }

    @Column(name = "creator_id", precision = 64)
    public Long getCreatorId() {
        return this.creatorId;
    }

    public void setCreatorId(Long creatorId) {
        this.creatorId = creatorId;
    }

    @CreationTimestamp
    @Column(name = "create_date")
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    @Column(name = "modifier_id", precision = 64)
    public Long getModifierId() {
        return this.modifierId;
    }

    public void setModifierId(Long modifierId) {
        this.modifierId = modifierId;
    }

    @UpdateTimestamp
    @Column(name = "modify_date")
    public LocalDateTime getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(LocalDateTime modifyDate) {
        this.modifyDate = modifyDate;
    }

    @Override
    public String toString() {
        return "ChargeRule{" +
                "chargeRuleId=" + chargeRuleId +
                ", name='" + name + '\'' +
                ", enabled=" + enabled +
                ", paidPlan=" + paidPlan +
                ", chargePlan=" + chargePlan +
                ", productCategoryId=" + productCategoryId +
                ", gradeId=" + gradeId +
                ", chargeBaseType=" + chargeBaseType +
                ", chargeCycleType=" + chargeCycleType +
                ", calculateCycleType=" + calculateCycleType +
                ", maximumCharge=" + maximumCharge +
                ", chargeByRemainingCount=" + chargeByRemainingCount +
                ", circulation=" + circulation +
                ", accumulation=" + accumulation +
                ", creatorId=" + creatorId +
                ", createDate=" + createDate +
                ", modifierId=" + modifierId +
                ", modifyDate=" + modifyDate +
                '}';
    }
}
