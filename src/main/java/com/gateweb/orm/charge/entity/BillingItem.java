/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity;


import com.gateweb.charge.enumeration.BillingItemType;
import com.gateweb.charge.enumeration.ChargePlan;
import com.gateweb.charge.enumeration.PaidPlan;

import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "billing_item", schema = "public", uniqueConstraints = {
        @UniqueConstraint(name = "billing_item_pkey", columnNames = {"billing_item_id"})
})
public class BillingItem implements Serializable {

    private static final long serialVersionUID = 349311556;

    private Long billingItemId;
    private Long companyId;
    private Long deductId;
    private Long productCategoryId;
    private Long productPurchaseId;
    private Long contractId;
    private Long packageRefId;
    private LocalDateTime expectedOutDate;
    private LocalDateTime calculateFromDate;
    private LocalDateTime calculateToDate;
    private Integer count;
    private BillingItemType billingItemType;
    private PaidPlan paidPlan;
    private ChargePlan chargePlan;
    private Long billId;
    private BigDecimal taxRate;
    private BigDecimal taxAmount;
    private BigDecimal taxExcludedAmount;
    private BigDecimal taxIncludedAmount;
    private Boolean isMemo;
    private LocalDateTime createDate;
    private String remark;
    private Long prevInvoiceRemainingId;

    public BillingItem() {
    }

    public BillingItem(BillingItem value) {
        this.billingItemId = value.billingItemId;
        this.companyId = value.companyId;
        this.deductId = value.deductId;
        this.productCategoryId = value.productCategoryId;
        this.productPurchaseId = value.productPurchaseId;
        this.contractId = value.contractId;
        this.packageRefId = value.packageRefId;
        this.expectedOutDate = value.expectedOutDate;
        this.calculateFromDate = value.calculateFromDate;
        this.calculateToDate = value.calculateToDate;
        this.count = value.count;
        this.billingItemType = value.billingItemType;
        this.paidPlan = value.paidPlan;
        this.chargePlan = value.chargePlan;
        this.billId = value.billId;
        this.taxRate = value.taxRate;
        this.taxAmount = value.taxAmount;
        this.taxExcludedAmount = value.taxExcludedAmount;
        this.taxIncludedAmount = value.taxIncludedAmount;
        this.isMemo = value.isMemo;
        this.createDate = value.createDate;
        this.remark = value.remark;
        this.prevInvoiceRemainingId = value.prevInvoiceRemainingId;
    }

    public BillingItem(
            Long billingItemId,
            Long companyId,
            Long deductId,
            Long productCategoryId,
            Long productPurchaseId,
            Long contractId,
            Long packageRefId,
            LocalDateTime expectedOutDate,
            LocalDateTime calculateFromDate,
            LocalDateTime calculateToDate,
            Integer count,
            BillingItemType billingItemType,
            PaidPlan paidPlan,
            ChargePlan chargePlan,
            Long billId,
            BigDecimal taxRate,
            BigDecimal taxAmount,
            BigDecimal taxExcludedAmount,
            BigDecimal taxIncludedAmount,
            Boolean isMemo,
            LocalDateTime createDate,
            String remark,
            Long prevInvoiceRemainingId
    ) {
        this.billingItemId = billingItemId;
        this.companyId = companyId;
        this.deductId = deductId;
        this.productCategoryId = productCategoryId;
        this.productPurchaseId = productPurchaseId;
        this.contractId = contractId;
        this.packageRefId = packageRefId;
        this.expectedOutDate = expectedOutDate;
        this.calculateFromDate = calculateFromDate;
        this.calculateToDate = calculateToDate;
        this.count = count;
        this.billingItemType = billingItemType;
        this.paidPlan = paidPlan;
        this.chargePlan = chargePlan;
        this.billId = billId;
        this.taxRate = taxRate;
        this.taxAmount = taxAmount;
        this.taxExcludedAmount = taxExcludedAmount;
        this.taxIncludedAmount = taxIncludedAmount;
        this.isMemo = isMemo;
        this.createDate = createDate;
        this.remark = remark;
        this.prevInvoiceRemainingId = prevInvoiceRemainingId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "billing_item_id", nullable = false, precision = 64)
    public Long getBillingItemId() {
        return this.billingItemId;
    }

    public void setBillingItemId(Long billingItemId) {
        this.billingItemId = billingItemId;
    }

    @Column(name = "company_id", precision = 64)
    public Long getCompanyId() {
        return this.companyId;
    }

    public void setCompanyId(Long companyId) {
        this.companyId = companyId;
    }

    @Column(name = "deduct_id", precision = 64)
    public Long getDeductId() {
        return this.deductId;
    }

    public void setDeductId(Long deductId) {
        this.deductId = deductId;
    }

    @Column(name = "product_category_id", precision = 64)
    public Long getProductCategoryId() {
        return this.productCategoryId;
    }

    public void setProductCategoryId(Long productCategoryId) {
        this.productCategoryId = productCategoryId;
    }

    @Column(name = "product_purchase_id", precision = 64)
    public Long getProductPurchaseId() {
        return this.productPurchaseId;
    }

    public void setProductPurchaseId(Long productPurchaseId) {
        this.productPurchaseId = productPurchaseId;
    }

    @Column(name = "contract_id", precision = 64)
    public Long getContractId() {
        return this.contractId;
    }

    public void setContractId(Long contractId) {
        this.contractId = contractId;
    }

    @Column(name = "package_ref_id", precision = 64)
    public Long getPackageRefId() {
        return this.packageRefId;
    }

    public void setPackageRefId(Long packageRefId) {
        this.packageRefId = packageRefId;
    }

    @Column(name = "expected_out_date")
    public LocalDateTime getExpectedOutDate() {
        return this.expectedOutDate;
    }

    public void setExpectedOutDate(LocalDateTime expectedOutDate) {
        this.expectedOutDate = expectedOutDate;
    }

    @Column(name = "calculate_from_date")
    public LocalDateTime getCalculateFromDate() {
        return this.calculateFromDate;
    }

    public void setCalculateFromDate(LocalDateTime calculateFromDate) {
        this.calculateFromDate = calculateFromDate;
    }

    @Column(name = "calculate_to_date")
    public LocalDateTime getCalculateToDate() {
        return this.calculateToDate;
    }

    public void setCalculateToDate(LocalDateTime calculateToDate) {
        this.calculateToDate = calculateToDate;
    }

    @Column(name = "count", precision = 32)
    public Integer getCount() {
        return this.count;
    }

    public void setCount(Integer count) {
        this.count = count;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "billing_item_type")
    public BillingItemType getBillingItemType() {
        return this.billingItemType;
    }

    public void setBillingItemType(BillingItemType billingItemType) {
        this.billingItemType = billingItemType;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "paid_plan")
    public PaidPlan getPaidPlan() {
        return this.paidPlan;
    }

    public void setPaidPlan(PaidPlan paidPlan) {
        this.paidPlan = paidPlan;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "charge_plan")
    public ChargePlan getChargePlan() {
        return this.chargePlan;
    }

    public void setChargePlan(ChargePlan chargePlan) {
        this.chargePlan = chargePlan;
    }

    @Column(name = "bill_id", precision = 64)
    public Long getBillId() {
        return this.billId;
    }

    public void setBillId(Long billId) {
        this.billId = billId;
    }

    @Column(name = "tax_rate", precision = 8, scale = 4)
    public BigDecimal getTaxRate() {
        return this.taxRate;
    }

    public void setTaxRate(BigDecimal taxRate) {
        this.taxRate = taxRate;
    }

    @Column(name = "tax_amount", precision = 23, scale = 4)
    public BigDecimal getTaxAmount() {
        return this.taxAmount;
    }

    public void setTaxAmount(BigDecimal taxAmount) {
        this.taxAmount = taxAmount;
    }

    @Column(name = "tax_excluded_amount", precision = 23, scale = 4)
    public BigDecimal getTaxExcludedAmount() {
        return this.taxExcludedAmount;
    }

    public void setTaxExcludedAmount(BigDecimal taxExcludedAmount) {
        this.taxExcludedAmount = taxExcludedAmount;
    }

    @Column(name = "tax_included_amount", precision = 23, scale = 4)
    public BigDecimal getTaxIncludedAmount() {
        return this.taxIncludedAmount;
    }

    public void setTaxIncludedAmount(BigDecimal taxIncludedAmount) {
        this.taxIncludedAmount = taxIncludedAmount;
    }

    @Column(name = "is_memo")
    public Boolean getIsMemo() {
        return this.isMemo;
    }

    public void setIsMemo(Boolean isMemo) {
        this.isMemo = isMemo;
    }

    @Column(name = "create_date")
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    @Column(name = "remark", length = 40)
    @Size(max = 40)
    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    @Column(name = "prev_invoice_remaining_id", precision = 64)
    public Long getPrevInvoiceRemainingId() {
        return this.prevInvoiceRemainingId;
    }

    public void setPrevInvoiceRemainingId(Long prevInvoiceRemainingId) {
        this.prevInvoiceRemainingId = prevInvoiceRemainingId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BillingItem (");

        sb.append(billingItemId);
        sb.append(", ").append(companyId);
        sb.append(", ").append(deductId);
        sb.append(", ").append(productCategoryId);
        sb.append(", ").append(productPurchaseId);
        sb.append(", ").append(contractId);
        sb.append(", ").append(packageRefId);
        sb.append(", ").append(expectedOutDate);
        sb.append(", ").append(calculateFromDate);
        sb.append(", ").append(calculateToDate);
        sb.append(", ").append(count);
        sb.append(", ").append(billingItemType);
        sb.append(", ").append(paidPlan);
        sb.append(", ").append(chargePlan);
        sb.append(", ").append(billId);
        sb.append(", ").append(taxRate);
        sb.append(", ").append(taxAmount);
        sb.append(", ").append(taxExcludedAmount);
        sb.append(", ").append(taxIncludedAmount);
        sb.append(", ").append(isMemo);
        sb.append(", ").append(createDate);
        sb.append(", ").append(remark);
        sb.append(", ").append(prevInvoiceRemainingId);

        sb.append(")");
        return sb.toString();
    }
}
