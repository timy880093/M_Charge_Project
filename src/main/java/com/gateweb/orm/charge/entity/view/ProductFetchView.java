/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity.view;

import com.gateweb.charge.enumeration.ProductStatus;
import com.gateweb.charge.enumeration.ProductType;
import com.gateweb.orm.hibernateExtension.PostgreSQLEnumType;
import com.gateweb.orm.charge.entity.ProductCategory;
import com.gateweb.orm.charge.entity.ProductDiscount;
import com.gateweb.orm.charge.entity.ProductPricing;
import org.hibernate.annotations.Immutable;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.9" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "product", schema = "public", indexes = {
        @Index(name = "product_pkey", unique = true, columnList = "product_id ASC") })
@TypeDef(name = "pgsql_enum", typeClass = PostgreSQLEnumType.class)
@Immutable
public class ProductFetchView implements Serializable {

    private static final long serialVersionUID = -499348926;

    private Long productId;
    private String productName;
    private ProductCategory productCategory;
    private ProductType productType;
    private ProductStatus productStatus;
    private ProductPricing productPricing;
    private ProductDiscount productDiscount;
    private Long creatorId;
    private Timestamp createDate;
    private Long modifierId;
    private Timestamp modifyDate;

    public ProductFetchView() {
    }

    public ProductFetchView(Long productId, String productName, ProductCategory productCategory, ProductType productType, ProductStatus productStatus, ProductPricing productPricing, ProductDiscount productDiscount, Long creatorId, Timestamp createDate, Long modifierId, Timestamp modifyDate) {
        this.productId = productId;
        this.productName = productName;
        this.productCategory = productCategory;
        this.productType = productType;
        this.productStatus = productStatus;
        this.productPricing = productPricing;
        this.productDiscount = productDiscount;
        this.creatorId = creatorId;
        this.createDate = createDate;
        this.modifierId = modifierId;
        this.modifyDate = modifyDate;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "product_id", unique = true, nullable = false, precision = 64)
    public Long getProductId() {
        return this.productId;
    }

    public void setProductId(Long productId) {
        this.productId = productId;
    }

    @Column(name = "product_name", length = 40)
    @Size(max = 40)
    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "product_type")
    @Type(type = "pgsql_enum")
    public ProductType getProductType() {
        return this.productType;
    }

    public void setProductType(ProductType productType) {
        this.productType = productType;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "product_status")
    @Type(type = "pgsql_enum")
    public ProductStatus getProductStatus() {
        return this.productStatus;
    }

    public void setProductStatus(ProductStatus productStatus) {
        this.productStatus = productStatus;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "product_pricing_id")
    public ProductPricing getProductPricing() {
        return this.productPricing;
    }

    public void setProductPricing(ProductPricing productPricing) {
        this.productPricing = productPricing;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "product_discount_id")
    public ProductDiscount getProductDiscount() {
        return this.productDiscount;
    }

    public void setProductDiscount(ProductDiscount productDiscount) {
        this.productDiscount = productDiscount;
    }

    @Column(name = "creator_id", precision = 64)
    public Long getCreatorId() {
        return this.creatorId;
    }

    public void setCreatorId(Long creatorId) {
        this.creatorId = creatorId;
    }

    @Column(name = "create_date")
    public Timestamp getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
    }

    @Column(name = "modifier_id", precision = 64)
    public Long getModifierId() {
        return this.modifierId;
    }

    public void setModifierId(Long modifierId) {
        this.modifierId = modifierId;
    }

    @Column(name = "modify_date")
    public Timestamp getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(Timestamp modifyDate) {
        this.modifyDate = modifyDate;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "product_category_id")
    public ProductCategory getProductCategory() {
        return productCategory;
    }

    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }

    @Override
    public String toString() {
        return "ProductFetchView{" +
                "productId=" + productId +
                ", productName='" + productName + '\'' +
                ", productCategory=" + productCategory +
                ", productType=" + productType +
                ", productStatus=" + productStatus +
                ", productPricing=" + productPricing +
                ", productDiscount=" + productDiscount +
                ", creatorId=" + creatorId +
                ", createDate=" + createDate +
                ", modifierId=" + modifierId +
                ", modifyDate=" + modifyDate +
                '}';
    }
}
