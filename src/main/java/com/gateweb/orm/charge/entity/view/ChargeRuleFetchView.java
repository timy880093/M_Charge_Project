/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity.view;


import com.gateweb.charge.enumeration.ChargeBaseType;
import com.gateweb.charge.enumeration.ChargePlan;
import com.gateweb.charge.enumeration.CycleType;
import com.gateweb.charge.enumeration.PaidPlan;
import com.gateweb.orm.charge.entity.RootGradeFetchView;
import com.gateweb.orm.charge.entity.ProductCategory;
import jdk.nashorn.internal.ir.annotations.Immutable;
import org.hibernate.annotations.Type;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.9"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "charge_rule", schema = "public", indexes = {
        @Index(name = "charge_rule_pkey", unique = true, columnList = "charge_rule_id ASC")
})
@Immutable
public class ChargeRuleFetchView implements Serializable {

    private static final long serialVersionUID = -351821721;

    private Long chargeRuleId;
    private String name;
    private Boolean enabled;
    private Integer creatorId;
    private Timestamp createDate;
    private Integer modifierId;
    private Timestamp modifyDate;
    private ChargePlan chargePlan;
    private PaidPlan paidPlan;
    private ProductCategory productCategory;
    private RootGradeFetchView rootGrade;
    private CycleType calculateCycleType;
    private CycleType chargeCycleType;
    private ChargeBaseType chargeBaseType;
    private Boolean circulation;
    private Boolean accumulation;
    private Boolean chargeByRemainingCount;

    public ChargeRuleFetchView() {
    }

    public ChargeRuleFetchView(Long chargeRuleId, String name, Boolean enabled, Integer creatorId, Timestamp createDate, Integer modifierId, Timestamp modifyDate, ChargePlan chargePlan, PaidPlan paidPlan, ProductCategory productCategory, RootGradeFetchView rootGrade, CycleType calculateCycleType, CycleType chargeCycleType, ChargeBaseType chargeBaseType, Boolean circulation, Boolean accumulation, Boolean chargeByRemainingCount) {
        this.chargeRuleId = chargeRuleId;
        this.name = name;
        this.enabled = enabled;
        this.creatorId = creatorId;
        this.createDate = createDate;
        this.modifierId = modifierId;
        this.modifyDate = modifyDate;
        this.chargePlan = chargePlan;
        this.paidPlan = paidPlan;
        this.productCategory = productCategory;
        this.rootGrade = rootGrade;
        this.calculateCycleType = calculateCycleType;
        this.chargeCycleType = chargeCycleType;
        this.chargeBaseType = chargeBaseType;
        this.circulation = circulation;
        this.accumulation = accumulation;
        this.chargeByRemainingCount = chargeByRemainingCount;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "charge_rule_id", unique = true, nullable = false, precision = 64)
    public Long getChargeRuleId() {
        return chargeRuleId;
    }

    public void setChargeRuleId(Long chargeRuleId) {
        this.chargeRuleId = chargeRuleId;
    }

    @Column(name = "name", nullable = false, length = 25)
    @NotNull
    @Size(max = 25)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "enabled", nullable = false)
    @NotNull
    public Boolean getEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    @Column(name = "creator_id", nullable = false, precision = 32)
    @NotNull
    public Integer getCreatorId() {
        return this.creatorId;
    }

    public void setCreatorId(Integer creatorId) {
        this.creatorId = creatorId;
    }

    @Column(name = "create_date", nullable = false)
    @NotNull
    public Timestamp getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
    }

    @Column(name = "modifier_id", precision = 32)
    public Integer getModifierId() {
        return this.modifierId;
    }

    public void setModifierId(Integer modifierId) {
        this.modifierId = modifierId;
    }

    @Column(name = "modify_date")
    public Timestamp getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(Timestamp modifyDate) {
        this.modifyDate = modifyDate;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "product_category_id")
    public ProductCategory getProductCategory() {
        return productCategory;
    }

    public void setProductCategory(ProductCategory productCategory) {
        this.productCategory = productCategory;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "charge_plan")
    @Type(type = "pgsql_enum")
    public ChargePlan getChargePlan() {
        return chargePlan;
    }

    public void setChargePlan(ChargePlan chargePlan) {
        this.chargePlan = chargePlan;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "paid_plan")
    @Type(type = "pgsql_enum")
    public PaidPlan getPaidPlan() {
        return paidPlan;
    }

    public void setPaidPlan(PaidPlan paidPlan) {
        this.paidPlan = paidPlan;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "grade_id")
    public RootGradeFetchView getRootGrade() {
        return rootGrade;
    }

    public void setRootGrade(RootGradeFetchView rootGrade) {
        this.rootGrade = rootGrade;
    }


    @Enumerated(EnumType.STRING)
    @Column(name = "calculate_cycle_type")
    public CycleType getCalculateCycleType() {
        return calculateCycleType;
    }

    public void setCalculateCycleType(CycleType calculateCycleType) {
        this.calculateCycleType = calculateCycleType;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "charge_cycle_type")
    public CycleType getChargeCycleType() {
        return chargeCycleType;
    }

    public void setChargeCycleType(CycleType chargeCycleType) {
        this.chargeCycleType = chargeCycleType;
    }

    @Column(name = "charge_base_type")
    @Enumerated(EnumType.STRING)
    public ChargeBaseType getChargeBaseType() {
        return chargeBaseType;
    }

    public void setChargeBaseType(ChargeBaseType chargeBaseType) {
        this.chargeBaseType = chargeBaseType;
    }

    @Column(name = "circulation")
    public Boolean getCirculation() {
        return this.circulation;
    }

    public void setCirculation(Boolean circulation) {
        this.circulation = circulation;
    }

    @Column(name = "accumulation")
    public Boolean getAccumulation() {
        return this.accumulation;
    }

    public void setAccumulation(Boolean accumulation) {
        this.accumulation = accumulation;
    }

    @Column(name = "charge_by_remaining_count")
    public Boolean getChargeByRemainingCount() {
        return chargeByRemainingCount;
    }

    public void setChargeByRemainingCount(Boolean chargeByRemainingCount) {
        this.chargeByRemainingCount = chargeByRemainingCount;
    }

    @Override
    public String toString() {
        return "ChargeRuleFetchView{" +
                "chargeRuleId=" + chargeRuleId +
                ", name='" + name + '\'' +
                ", enabled=" + enabled +
                ", creatorId=" + creatorId +
                ", createDate=" + createDate +
                ", modifierId=" + modifierId +
                ", modifyDate=" + modifyDate +
                ", chargePlan=" + chargePlan +
                ", paidPlan=" + paidPlan +
                ", productCategory=" + productCategory +
                ", rootGrade=" + rootGrade +
                ", calculateCycleType=" + calculateCycleType +
                ", chargeCycleType=" + chargeCycleType +
                ", chargeBaseType=" + chargeBaseType +
                ", circulation=" + circulation +
                ", accumulation=" + accumulation +
                ", chargeByRemainingCount=" + chargeByRemainingCount +
                '}';
    }
}
