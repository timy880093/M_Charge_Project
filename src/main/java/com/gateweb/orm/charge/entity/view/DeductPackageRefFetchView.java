/*
 * This file is generated by jOOQ.
 */
package com.gateweb.orm.charge.entity.view;


import com.gateweb.charge.enumeration.ChargePlan;
import com.gateweb.charge.enumeration.PaidPlan;
import com.gateweb.orm.hibernateExtension.PostgreSQLEnumType;
import com.gateweb.orm.charge.entity.Contract;
import jdk.nashorn.internal.ir.annotations.Immutable;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;

import javax.annotation.Generated;
import javax.persistence.*;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.9"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "package_ref", schema = "public", indexes = {
        @Index(name = "package_ref_pkey", unique = true, columnList = "package_ref_id ASC")
})
@TypeDef(
        name = "pgsql_enum",
        typeClass = PostgreSQLEnumType.class
)
@Immutable
public class DeductPackageRefFetchView implements Serializable {

    private static final long serialVersionUID = -196121216;

    private Long packageRefId;
    private ProductFetchView product;
    private ChargePlan chargePlan;
    private PaidPlan paidPlan;
    private ChargeRuleFetchView chargeRule;
    private Long fromPackageId;
    private Contract fromContract;

    public DeductPackageRefFetchView() {
    }

    public DeductPackageRefFetchView(Long packageRefId, ProductFetchView product, ChargePlan chargePlan, PaidPlan paidPlan, ChargeRuleFetchView chargeRule, Long fromPackageId, Contract fromContract) {
        this.packageRefId = packageRefId;
        this.product = product;
        this.chargePlan = chargePlan;
        this.paidPlan = paidPlan;
        this.chargeRule = chargeRule;
        this.fromPackageId = fromPackageId;
        this.fromContract = fromContract;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "package_ref_id", unique = true, nullable = false, precision = 64)
    public Long getPackageRefId() {
        return packageRefId;
    }

    public void setPackageRefId(Long packageRefId) {
        this.packageRefId = packageRefId;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "to_charge_rule_id")
    public ChargeRuleFetchView getChargeRule() {
        return chargeRule;
    }

    public void setChargeRule(ChargeRuleFetchView chargeRule) {
        this.chargeRule = chargeRule;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "to_product_id")
    public ProductFetchView getProduct() {
        return product;
    }

    public void setProduct(ProductFetchView product) {
        this.product = product;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "charge_plan", length = 30)
    @Type(type = "pgsql_enum")
    public ChargePlan getChargePlan() {
        return chargePlan;
    }

    public void setChargePlan(ChargePlan chargePlan) {
        this.chargePlan = chargePlan;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "paid_plan", length = 30)
    @Type(type = "pgsql_enum")
    public PaidPlan getPaidPlan() {
        return paidPlan;
    }

    public void setPaidPlan(PaidPlan paidPlan) {
        this.paidPlan = paidPlan;
    }

    @Column(name = "from_package_id", precision = 64)
    public Long getFromPackageId() {
        return fromPackageId;
    }

    public void setFromPackageId(Long fromPackageId) {
        this.fromPackageId = fromPackageId;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "from_contract_id")
    public Contract getFromContract() {
        return fromContract;
    }

    public void setFromContract(Contract fromContract) {
        this.fromContract = fromContract;
    }

    @Override
    public String toString() {
        return "DeductPackageRefFetchView{" +
                "packageRefId=" + packageRefId +
                ", product=" + product +
                ", chargePlan=" + chargePlan +
                ", paidPlan=" + paidPlan +
                ", chargeRule=" + chargeRule +
                ", fromPackageId=" + fromPackageId +
                ", fromContract=" + fromContract +
                '}';
    }
}
