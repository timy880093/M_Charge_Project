/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.dao.impl; 
import com.gateweb.charge.dao.*; 
import com.gateweb.charge.model.*;    
import com.gateweb.charge.*;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import java.util.Collection;
import javax.persistence.Query;
import java.util.List;
import java.util.ArrayList;
import javax.persistence.*;
import com.gateweb.db.dao.exception.DaoSystemException;
import com.gateweb.jpa.dao.JpaGenericDaoImpl;
import org.springframework.stereotype.Repository;
/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of InvoiceMain
 */
@Repository("invoiceMain")
public class JpaInvoiceMainDaoImpl extends JpaGenericDaoImpl<InvoiceMainEntity,                     java.lang.Long                                                            >  implements InvoiceMainDao{

	/**
	 *
	 */
	public JpaInvoiceMainDaoImpl(){
	}

	/**
	 *
	 */ 
	protected final Logger logger = LogManager.getLogger(getClass());

    /**
     * Delete a record in Database.
	 * @param invoiceId   PK 
    */
	public void delete(
																																						 java.lang.Long invoiceId 
																																																																																																																							) {
		logger.debug("JpaInvoiceMainDaoImpl delete  begin "
			+"id="+invoiceId
		);	
		try {
			Object data = entityManager.find(InvoiceMainEntity.class
			, invoiceId
			);
			entityManager.remove(data);
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} catch (IllegalArgumentException iae){
			//	RuntimeException
			iae.printStackTrace();
			throw new DaoSystemException("JPA10002-"+iae.getMessage(),iae);
		} catch (TransactionRequiredException tre){
			//	PersistenceException	
			tre.printStackTrace();
			throw new DaoSystemException("JPA10004-"+tre.getMessage(),tre);	
		} 
    }  
   
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> getSome(int pageNo, int noRowsPerPage)
		{
		List<InvoiceMainEntity> results = new ArrayList();
		Query q;
		try {
			q = entityManager.createQuery("select obj from InvoiceMainEntity obj ");
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} catch (IllegalArgumentException iae){
			//	RuntimeException
			iae.printStackTrace();
			throw new DaoSystemException("JPA10002-"+iae.getMessage(),iae);
		}
		try {
			if (pageNo > 0 && noRowsPerPage > 0) {
				q.setFirstResult(noRowsPerPage * (pageNo - 1) + 1).setMaxResults(
					noRowsPerPage);
				results = q.getResultList();
			}
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		}
		return results;
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchByProperty(String propertyName,
			final Object value, final int... rowStartIdxAndCount) {
		final String queryString = "select model from InvoiceMainEntity model where model."
					+ propertyName + "= :propertyValue";
		logger.debug("JpaInvoiceMainDaoImpl findByProperty   queryString :   "+queryString);
		try {
			Query query = entityManager.createQuery(queryString);
			query.setParameter("propertyValue", value);
			if (rowStartIdxAndCount != null && rowStartIdxAndCount.length > 0) {
				int rowStartIdx = Math.max(0, rowStartIdxAndCount[0]);
				if (rowStartIdx > 0) {
					query.setFirstResult(rowStartIdx);
				}

				if (rowStartIdxAndCount.length > 1) {
					int rowCount = Math.max(0, rowStartIdxAndCount[1]);
					if (rowCount > 0) {
						query.setMaxResults(rowCount);
					}
				}
			}
			return query.getResultList();
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} catch (IllegalArgumentException iae){
			//	RuntimeException
			iae.printStackTrace();
			throw new DaoSystemException("JPA10002-"+iae.getMessage(),iae);
		}

	}   	
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchBy(InvoiceMainEntity data) {
		StringBuffer sb = new StringBuffer("select obj from InvoiceMainEntity obj where 1=1 ");

		if ( data.getSeller() != null ) {
			sb.append(" AND obj.seller = :seller "); //java.lang.String
		}
		if ( data.getTaxAmount() != null ) {
			sb.append(" AND obj.taxAmount = :taxAmount "); //java.math.BigDecimal
		}
		if ( data.getDiscountAmount() != null ) {
			sb.append(" AND obj.discountAmount = :discountAmount "); //java.math.BigDecimal
		}
		if ( data.getMainRemark() != null ) {
			sb.append(" AND obj.mainRemark = :mainRemark "); //java.lang.String
		}
		if ( data.getBuyerName() != null ) {
			sb.append(" AND obj.buyerName = :buyerName "); //java.lang.String
		}
		if ( data.getOriginalCurrencyAmount() != null ) {
			sb.append(" AND obj.originalCurrencyAmount = :originalCurrencyAmount "); //java.math.BigDecimal
		}
		if ( data.getTaxRate() != null ) {
			sb.append(" AND obj.taxRate = :taxRate "); //java.lang.Float
		}
		if ( data.getRelateNumber() != null ) {
			sb.append(" AND obj.relateNumber = :relateNumber "); //java.lang.String
		}
		if ( data.getCarrierId2() != null ) {
			sb.append(" AND obj.carrierId2 = :carrierId2 "); //java.lang.String
		}
		if ( data.getCarrierId1() != null ) {
			sb.append(" AND obj.carrierId1 = :carrierId1 "); //java.lang.String
		}
		if ( data.getNpoban() != null ) {
			sb.append(" AND obj.npoban = :npoban "); //java.lang.String
		}
		if ( data.getBuyerRoleRemark() != null ) {
			sb.append(" AND obj.buyerRoleRemark = :buyerRoleRemark "); //java.lang.String
		}
		if ( data.getAllowanceCount() != null ) {
			sb.append(" AND obj.allowanceCount = :allowanceCount "); //java.lang.Integer
		}
		if ( data.getCheckNumber() != null ) {
			sb.append(" AND obj.checkNumber = :checkNumber "); //java.lang.String
		}
		if ( data.getCarrierType() != null ) {
			sb.append(" AND obj.carrierType = :carrierType "); //java.lang.String
		}
		if ( data.getSellerName() != null ) {
			sb.append(" AND obj.sellerName = :sellerName "); //java.lang.String
		}
		if ( data.getFreeTaxSalesAmount() != null ) {
			sb.append(" AND obj.freeTaxSalesAmount = :freeTaxSalesAmount "); //java.math.BigDecimal
		}
		if ( data.getcPrinterId() != null ) {
			sb.append(" AND obj.cPrinterId = :cPrinterId "); //java.lang.Integer
		}
		if ( data.getInvoiceId() != null ) {
			sb.append(" AND obj.invoiceId = :invoiceId "); //java.lang.Long
		}
		if ( data.getSellerFacsimileNumber() != null ) {
			sb.append(" AND obj.sellerFacsimileNumber = :sellerFacsimileNumber "); //java.lang.String
		}
		if ( data.getDonateMark() != null ) {
			sb.append(" AND obj.donateMark = :donateMark "); //java.lang.String
		}
		if ( data.getcKey() != null ) {
			sb.append(" AND obj.cKey = :cKey "); //java.lang.String
		}
		if ( data.getCreateDate() != null ) {
			sb.append(" AND obj.createDate = :createDate "); //java.sql.Timestamp
		}
		if ( data.getInvoiceNumber() != null ) {
			sb.append(" AND obj.invoiceNumber = :invoiceNumber "); //java.lang.String
		}
		if ( data.getBondedAreaConfirm() != null ) {
			sb.append(" AND obj.bondedAreaConfirm = :bondedAreaConfirm "); //java.lang.String
		}
		if ( data.getcMemberNumber() != null ) {
			sb.append(" AND obj.cMemberNumber = :cMemberNumber "); //java.lang.String
		}
		if ( data.getExchangeRate() != null ) {
			sb.append(" AND obj.exchangeRate = :exchangeRate "); //java.lang.Float
		}
		if ( data.getSellerRoleRemark() != null ) {
			sb.append(" AND obj.sellerRoleRemark = :sellerRoleRemark "); //java.lang.String
		}
		if ( data.getBuyerEmailAddress() != null ) {
			sb.append(" AND obj.buyerEmailAddress = :buyerEmailAddress "); //java.lang.String
		}
		if ( data.getSyncPrintDate() != null ) {
			sb.append(" AND obj.syncPrintDate = :syncPrintDate "); //java.sql.Timestamp
		}
		if ( data.getcEmail() != null ) {
			sb.append(" AND obj.cEmail = :cEmail "); //java.lang.String
		}
		if ( data.getcPhoneCode() != null ) {
			sb.append(" AND obj.cPhoneCode = :cPhoneCode "); //java.lang.String
		}
		if ( data.getSalesAmount() != null ) {
			sb.append(" AND obj.salesAmount = :salesAmount "); //java.math.BigDecimal
		}
		if ( data.getcYearMonth() != null ) {
			sb.append(" AND obj.cYearMonth = :cYearMonth "); //java.lang.String
		}
		if ( data.getBuyerFacsimileNumber() != null ) {
			sb.append(" AND obj.buyerFacsimileNumber = :buyerFacsimileNumber "); //java.lang.String
		}
		if ( data.getMigType() != null ) {
			sb.append(" AND obj.migType = :migType "); //java.lang.String
		}
		if ( data.getSyncCompanyKey() != null ) {
			sb.append(" AND obj.syncCompanyKey = :syncCompanyKey "); //java.lang.String
		}
		if ( data.getBuyer() != null ) {
			sb.append(" AND obj.buyer = :buyer "); //java.lang.String
		}
		if ( data.getBuyerRemark() != null ) {
			sb.append(" AND obj.buyerRemark = :buyerRemark "); //java.lang.String
		}
		if ( data.getcPosRemark2() != null ) {
			sb.append(" AND obj.cPosRemark2 = :cPosRemark2 "); //java.lang.String
		}
		if ( data.getcPosRemark1() != null ) {
			sb.append(" AND obj.cPosRemark1 = :cPosRemark1 "); //java.lang.String
		}
		if ( data.getTaxType() != null ) {
			sb.append(" AND obj.taxType = :taxType "); //java.lang.String
		}
		if ( data.getTotalAmount() != null ) {
			sb.append(" AND obj.totalAmount = :totalAmount "); //java.math.BigDecimal
		}
		if ( data.getRandomNumber() != null ) {
			sb.append(" AND obj.randomNumber = :randomNumber "); //java.lang.String
		}
		if ( data.getCreatorId() != null ) {
			sb.append(" AND obj.creatorId = :creatorId "); //java.lang.Integer
		}
		if ( data.getCustomsClearanceMark() != null ) {
			sb.append(" AND obj.customsClearanceMark = :customsClearanceMark "); //java.lang.String
		}
		if ( data.getSellerEmailAddress() != null ) {
			sb.append(" AND obj.sellerEmailAddress = :sellerEmailAddress "); //java.lang.String
		}
		if ( data.getSyncPrintMark() != null ) {
			sb.append(" AND obj.syncPrintMark is :syncPrintMark "); //java.lang.Boolean
		}
		if ( data.getcNaturalPerson() != null ) {
			sb.append(" AND obj.cNaturalPerson = :cNaturalPerson "); //java.lang.String
		}
		if ( data.getBuyerPersonInCharge() != null ) {
			sb.append(" AND obj.buyerPersonInCharge = :buyerPersonInCharge "); //java.lang.String
		}
		if ( data.getcPrinterNo() != null ) {
			sb.append(" AND obj.cPrinterNo = :cPrinterNo "); //java.lang.String
		}
		if ( data.getInvoiceTime() != null ) {
			sb.append(" AND obj.invoiceTime = :invoiceTime "); //java.lang.String
		}
		if ( data.getZeroTaxSalesAmount() != null ) {
			sb.append(" AND obj.zeroTaxSalesAmount = :zeroTaxSalesAmount "); //java.math.BigDecimal
		}
		if ( data.getcPosRemark3() != null ) {
			sb.append(" AND obj.cPosRemark3 = :cPosRemark3 "); //java.lang.String
		}
		if ( data.getSyncPrintUser() != null ) {
			sb.append(" AND obj.syncPrintUser = :syncPrintUser "); //java.lang.Integer
		}
		if ( data.getBuyerTelephoneNumber() != null ) {
			sb.append(" AND obj.buyerTelephoneNumber = :buyerTelephoneNumber "); //java.lang.String
		}
		if ( data.getcPosRemark4() != null ) {
			sb.append(" AND obj.cPosRemark4 = :cPosRemark4 "); //java.lang.String
		}
		if ( data.getBuyerCustomerNumber() != null ) {
			sb.append(" AND obj.buyerCustomerNumber = :buyerCustomerNumber "); //java.lang.String
		}
		if ( data.getInvoiceDate() != null ) {
			sb.append(" AND obj.invoiceDate = :invoiceDate "); //java.lang.String
		}
		if ( data.getSellerTelephoneNumber() != null ) {
			sb.append(" AND obj.sellerTelephoneNumber = :sellerTelephoneNumber "); //java.lang.String
		}
		if ( data.getInvoiceType() != null ) {
			sb.append(" AND obj.invoiceType = :invoiceType "); //java.lang.String
		}
		if ( data.getCurrency() != null ) {
			sb.append(" AND obj.currency = :currency "); //java.lang.String
		}
		if ( data.getPrintMark() != null ) {
			sb.append(" AND obj.printMark = :printMark "); //java.lang.String
		}
		if ( data.getSellerPersonInCharge() != null ) {
			sb.append(" AND obj.sellerPersonInCharge = :sellerPersonInCharge "); //java.lang.String
		}
		if ( data.getGroupMark() != null ) {
			sb.append(" AND obj.groupMark = :groupMark "); //java.lang.String
		}
		if ( data.getBuyerAddress() != null ) {
			sb.append(" AND obj.buyerAddress = :buyerAddress "); //java.lang.String
		}
		if ( data.getAssignId() != null ) {
			sb.append(" AND obj.assignId = :assignId "); //java.lang.Integer
		}
		if ( data.getB2bFlag() != null ) {
			sb.append(" AND obj.b2bFlag = :b2bFlag "); //java.lang.String
		}
		if ( data.getSellerAddress() != null ) {
			sb.append(" AND obj.sellerAddress = :sellerAddress "); //java.lang.String
		}
		if ( data.getConfirmStatus() != null ) {
			sb.append(" AND obj.confirmStatus = :confirmStatus "); //java.lang.Integer
		}
		if ( data.getcInvoiceStatus() != null ) {
			sb.append(" AND obj.cInvoiceStatus = :cInvoiceStatus "); //java.lang.Integer
		}
		if ( data.getAcceptStatus() != null ) {
			sb.append(" AND obj.acceptStatus = :acceptStatus "); //java.lang.Integer
		}
		if ( data.getcMemberType() != null ) {
			sb.append(" AND obj.cMemberType = :cMemberType "); //java.lang.String
		}
		if ( data.getModifierId() != null ) {
			sb.append(" AND obj.modifierId = :modifierId "); //java.lang.Integer
		}
		if ( data.getCategory() != null ) {
			sb.append(" AND obj.category = :category "); //java.lang.String
		}
		if ( data.getModifyDate() != null ) {
			sb.append(" AND obj.modifyDate = :modifyDate "); //java.sql.Timestamp
		}
		if ( data.getSellerCustomerNumber() != null ) {
			sb.append(" AND obj.sellerCustomerNumber = :sellerCustomerNumber "); //java.lang.String
		}
		if ( data.getUploadStatus() != null ) {
			sb.append(" AND obj.uploadStatus = :uploadStatus "); //java.lang.String
		}
		Query q;
		List<InvoiceMainEntity> results;
		try {
			logger.debug("JpaInvoiceMainDaoImpl searchBy  query : "+sb.toString());
			q = entityManager.createQuery(sb.toString());
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} catch (IllegalArgumentException iae){
			//	RuntimeException
			iae.printStackTrace();
			throw new DaoSystemException("JPA10002-"+iae.getMessage(),iae);
		}
		if ( data.getSeller() != null ) {
			q.setParameter("seller", data.getSeller());
		}
		if ( data.getTaxAmount() != null ) {
			q.setParameter("taxAmount", data.getTaxAmount());
		}
		if ( data.getDiscountAmount() != null ) {
			q.setParameter("discountAmount", data.getDiscountAmount());
		}
		if ( data.getMainRemark() != null ) {
			q.setParameter("mainRemark", data.getMainRemark());
		}
		if ( data.getBuyerName() != null ) {
			q.setParameter("buyerName", data.getBuyerName());
		}
		if ( data.getOriginalCurrencyAmount() != null ) {
			q.setParameter("originalCurrencyAmount", data.getOriginalCurrencyAmount());
		}
		if ( data.getTaxRate() != null ) {
			q.setParameter("taxRate", data.getTaxRate());
		}
		if ( data.getRelateNumber() != null ) {
			q.setParameter("relateNumber", data.getRelateNumber());
		}
		if ( data.getCarrierId2() != null ) {
			q.setParameter("carrierId2", data.getCarrierId2());
		}
		if ( data.getCarrierId1() != null ) {
			q.setParameter("carrierId1", data.getCarrierId1());
		}
		if ( data.getNpoban() != null ) {
			q.setParameter("npoban", data.getNpoban());
		}
		if ( data.getBuyerRoleRemark() != null ) {
			q.setParameter("buyerRoleRemark", data.getBuyerRoleRemark());
		}
		if ( data.getAllowanceCount() != null ) {
			q.setParameter("allowanceCount", data.getAllowanceCount());
		}
		if ( data.getCheckNumber() != null ) {
			q.setParameter("checkNumber", data.getCheckNumber());
		}
		if ( data.getCarrierType() != null ) {
			q.setParameter("carrierType", data.getCarrierType());
		}
		if ( data.getSellerName() != null ) {
			q.setParameter("sellerName", data.getSellerName());
		}
		if ( data.getFreeTaxSalesAmount() != null ) {
			q.setParameter("freeTaxSalesAmount", data.getFreeTaxSalesAmount());
		}
		if ( data.getcPrinterId() != null ) {
			q.setParameter("cPrinterId", data.getcPrinterId());
		}
		if ( data.getInvoiceId() != null ) {
			q.setParameter("invoiceId", data.getInvoiceId());
		}
		if ( data.getSellerFacsimileNumber() != null ) {
			q.setParameter("sellerFacsimileNumber", data.getSellerFacsimileNumber());
		}
		if ( data.getDonateMark() != null ) {
			q.setParameter("donateMark", data.getDonateMark());
		}
		if ( data.getcKey() != null ) {
			q.setParameter("cKey", data.getcKey());
		}
		if ( data.getCreateDate() != null ) {
			q.setParameter("createDate", data.getCreateDate());
		}
		if ( data.getInvoiceNumber() != null ) {
			q.setParameter("invoiceNumber", data.getInvoiceNumber());
		}
		if ( data.getBondedAreaConfirm() != null ) {
			q.setParameter("bondedAreaConfirm", data.getBondedAreaConfirm());
		}
		if ( data.getcMemberNumber() != null ) {
			q.setParameter("cMemberNumber", data.getcMemberNumber());
		}
		if ( data.getExchangeRate() != null ) {
			q.setParameter("exchangeRate", data.getExchangeRate());
		}
		if ( data.getSellerRoleRemark() != null ) {
			q.setParameter("sellerRoleRemark", data.getSellerRoleRemark());
		}
		if ( data.getBuyerEmailAddress() != null ) {
			q.setParameter("buyerEmailAddress", data.getBuyerEmailAddress());
		}
		if ( data.getSyncPrintDate() != null ) {
			q.setParameter("syncPrintDate", data.getSyncPrintDate());
		}
		if ( data.getcEmail() != null ) {
			q.setParameter("cEmail", data.getcEmail());
		}
		if ( data.getcPhoneCode() != null ) {
			q.setParameter("cPhoneCode", data.getcPhoneCode());
		}
		if ( data.getSalesAmount() != null ) {
			q.setParameter("salesAmount", data.getSalesAmount());
		}
		if ( data.getcYearMonth() != null ) {
			q.setParameter("cYearMonth", data.getcYearMonth());
		}
		if ( data.getBuyerFacsimileNumber() != null ) {
			q.setParameter("buyerFacsimileNumber", data.getBuyerFacsimileNumber());
		}
		if ( data.getMigType() != null ) {
			q.setParameter("migType", data.getMigType());
		}
		if ( data.getSyncCompanyKey() != null ) {
			q.setParameter("syncCompanyKey", data.getSyncCompanyKey());
		}
		if ( data.getBuyer() != null ) {
			q.setParameter("buyer", data.getBuyer());
		}
		if ( data.getBuyerRemark() != null ) {
			q.setParameter("buyerRemark", data.getBuyerRemark());
		}
		if ( data.getcPosRemark2() != null ) {
			q.setParameter("cPosRemark2", data.getcPosRemark2());
		}
		if ( data.getcPosRemark1() != null ) {
			q.setParameter("cPosRemark1", data.getcPosRemark1());
		}
		if ( data.getTaxType() != null ) {
			q.setParameter("taxType", data.getTaxType());
		}
		if ( data.getTotalAmount() != null ) {
			q.setParameter("totalAmount", data.getTotalAmount());
		}
		if ( data.getRandomNumber() != null ) {
			q.setParameter("randomNumber", data.getRandomNumber());
		}
		if ( data.getCreatorId() != null ) {
			q.setParameter("creatorId", data.getCreatorId());
		}
		if ( data.getCustomsClearanceMark() != null ) {
			q.setParameter("customsClearanceMark", data.getCustomsClearanceMark());
		}
		if ( data.getSellerEmailAddress() != null ) {
			q.setParameter("sellerEmailAddress", data.getSellerEmailAddress());
		}
		if ( data.getSyncPrintMark() != null ) {
			q.setParameter("syncPrintMark", data.getSyncPrintMark());
		}
		if ( data.getcNaturalPerson() != null ) {
			q.setParameter("cNaturalPerson", data.getcNaturalPerson());
		}
		if ( data.getBuyerPersonInCharge() != null ) {
			q.setParameter("buyerPersonInCharge", data.getBuyerPersonInCharge());
		}
		if ( data.getcPrinterNo() != null ) {
			q.setParameter("cPrinterNo", data.getcPrinterNo());
		}
		if ( data.getInvoiceTime() != null ) {
			q.setParameter("invoiceTime", data.getInvoiceTime());
		}
		if ( data.getZeroTaxSalesAmount() != null ) {
			q.setParameter("zeroTaxSalesAmount", data.getZeroTaxSalesAmount());
		}
		if ( data.getcPosRemark3() != null ) {
			q.setParameter("cPosRemark3", data.getcPosRemark3());
		}
		if ( data.getSyncPrintUser() != null ) {
			q.setParameter("syncPrintUser", data.getSyncPrintUser());
		}
		if ( data.getBuyerTelephoneNumber() != null ) {
			q.setParameter("buyerTelephoneNumber", data.getBuyerTelephoneNumber());
		}
		if ( data.getcPosRemark4() != null ) {
			q.setParameter("cPosRemark4", data.getcPosRemark4());
		}
		if ( data.getBuyerCustomerNumber() != null ) {
			q.setParameter("buyerCustomerNumber", data.getBuyerCustomerNumber());
		}
		if ( data.getInvoiceDate() != null ) {
			q.setParameter("invoiceDate", data.getInvoiceDate());
		}
		if ( data.getSellerTelephoneNumber() != null ) {
			q.setParameter("sellerTelephoneNumber", data.getSellerTelephoneNumber());
		}
		if ( data.getInvoiceType() != null ) {
			q.setParameter("invoiceType", data.getInvoiceType());
		}
		if ( data.getCurrency() != null ) {
			q.setParameter("currency", data.getCurrency());
		}
		if ( data.getPrintMark() != null ) {
			q.setParameter("printMark", data.getPrintMark());
		}
		if ( data.getSellerPersonInCharge() != null ) {
			q.setParameter("sellerPersonInCharge", data.getSellerPersonInCharge());
		}
		if ( data.getGroupMark() != null ) {
			q.setParameter("groupMark", data.getGroupMark());
		}
		if ( data.getBuyerAddress() != null ) {
			q.setParameter("buyerAddress", data.getBuyerAddress());
		}
		if ( data.getAssignId() != null ) {
			q.setParameter("assignId", data.getAssignId());
		}
		if ( data.getB2bFlag() != null ) {
			q.setParameter("b2bFlag", data.getB2bFlag());
		}
		if ( data.getSellerAddress() != null ) {
			q.setParameter("sellerAddress", data.getSellerAddress());
		}
		if ( data.getConfirmStatus() != null ) {
			q.setParameter("confirmStatus", data.getConfirmStatus());
		}
		if ( data.getcInvoiceStatus() != null ) {
			q.setParameter("cInvoiceStatus", data.getcInvoiceStatus());
		}
		if ( data.getAcceptStatus() != null ) {
			q.setParameter("acceptStatus", data.getAcceptStatus());
		}
		if ( data.getcMemberType() != null ) {
			q.setParameter("cMemberType", data.getcMemberType());
		}
		if ( data.getModifierId() != null ) {
			q.setParameter("modifierId", data.getModifierId());
		}
		if ( data.getCategory() != null ) {
			q.setParameter("category", data.getCategory());
		}
		if ( data.getModifyDate() != null ) {
			q.setParameter("modifyDate", data.getModifyDate());
		}
		if ( data.getSellerCustomerNumber() != null ) {
			q.setParameter("sellerCustomerNumber", data.getSellerCustomerNumber());
		}
		if ( data.getUploadStatus() != null ) {
			q.setParameter("uploadStatus", data.getUploadStatus());
		}
		try {
			results = q.getResultList();
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} 
		return results; 
	}

	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchLike(InvoiceMainEntity data) {
		StringBuffer sb = new StringBuffer("select obj from InvoiceMainEntity obj where 1=1 ");
		if ( data.getSeller() != null && !"".equals(data.getSeller())) {
			sb.append(" AND obj.seller Like :seller "); //java.lang.String
		}
		if ( data.getTaxAmount() != null ) {
			sb.append(" AND obj.taxAmount >= :taxAmount "); // java.math.BigDecimal
		}
		if ( data.getDiscountAmount() != null ) {
			sb.append(" AND obj.discountAmount >= :discountAmount "); // java.math.BigDecimal
		}
		if ( data.getMainRemark() != null && !"".equals(data.getMainRemark())) {
			sb.append(" AND obj.mainRemark Like :mainRemark "); //java.lang.String
		}
		if ( data.getBuyerName() != null && !"".equals(data.getBuyerName())) {
			sb.append(" AND obj.buyerName Like :buyerName "); //java.lang.String
		}
		if ( data.getOriginalCurrencyAmount() != null ) {
			sb.append(" AND obj.originalCurrencyAmount >= :originalCurrencyAmount "); // java.math.BigDecimal
		}
		if ( data.getTaxRate() != null ) {
			sb.append(" AND obj.taxRate >= :taxRate "); // java.lang.Float
		}
		if ( data.getRelateNumber() != null && !"".equals(data.getRelateNumber())) {
			sb.append(" AND obj.relateNumber Like :relateNumber "); //java.lang.String
		}
		if ( data.getCarrierId2() != null && !"".equals(data.getCarrierId2())) {
			sb.append(" AND obj.carrierId2 Like :carrierId2 "); //java.lang.String
		}
		if ( data.getCarrierId1() != null && !"".equals(data.getCarrierId1())) {
			sb.append(" AND obj.carrierId1 Like :carrierId1 "); //java.lang.String
		}
		if ( data.getNpoban() != null && !"".equals(data.getNpoban())) {
			sb.append(" AND obj.npoban Like :npoban "); //java.lang.String
		}
		if ( data.getBuyerRoleRemark() != null && !"".equals(data.getBuyerRoleRemark())) {
			sb.append(" AND obj.buyerRoleRemark Like :buyerRoleRemark "); //java.lang.String
		}
		if ( data.getAllowanceCount() != null && !"".equals(data.getAllowanceCount())) {
			sb.append(" AND obj.allowanceCount Like :allowanceCount "); //java.lang.Integer
		}
		if ( data.getCheckNumber() != null && !"".equals(data.getCheckNumber())) {
			sb.append(" AND obj.checkNumber Like :checkNumber "); //java.lang.String
		}
		if ( data.getCarrierType() != null && !"".equals(data.getCarrierType())) {
			sb.append(" AND obj.carrierType Like :carrierType "); //java.lang.String
		}
		if ( data.getSellerName() != null && !"".equals(data.getSellerName())) {
			sb.append(" AND obj.sellerName Like :sellerName "); //java.lang.String
		}
		if ( data.getFreeTaxSalesAmount() != null ) {
			sb.append(" AND obj.freeTaxSalesAmount >= :freeTaxSalesAmount "); // java.math.BigDecimal
		}
		if ( data.getcPrinterId() != null && !"".equals(data.getcPrinterId())) {
			sb.append(" AND obj.cPrinterId Like :cPrinterId "); //java.lang.Integer
		}
		if ( data.getInvoiceId() != null ) {
			sb.append(" AND obj.invoiceId >= :invoiceId "); // java.lang.Long
		}
		if ( data.getSellerFacsimileNumber() != null && !"".equals(data.getSellerFacsimileNumber())) {
			sb.append(" AND obj.sellerFacsimileNumber Like :sellerFacsimileNumber "); //java.lang.String
		}
		if ( data.getDonateMark() != null && !"".equals(data.getDonateMark())) {
			sb.append(" AND obj.donateMark Like :donateMark "); //java.lang.String
		}
		if ( data.getcKey() != null && !"".equals(data.getcKey())) {
			sb.append(" AND obj.cKey Like :cKey "); //java.lang.String
		}
		if ( data.getCreateDate() != null && !"".equals(data.getCreateDate())) {
			sb.append(" AND obj.createDate Like :createDate "); //java.sql.Timestamp
		}
		if ( data.getInvoiceNumber() != null && !"".equals(data.getInvoiceNumber())) {
			sb.append(" AND obj.invoiceNumber Like :invoiceNumber "); //java.lang.String
		}
		if ( data.getBondedAreaConfirm() != null && !"".equals(data.getBondedAreaConfirm())) {
			sb.append(" AND obj.bondedAreaConfirm Like :bondedAreaConfirm "); //java.lang.String
		}
		if ( data.getcMemberNumber() != null && !"".equals(data.getcMemberNumber())) {
			sb.append(" AND obj.cMemberNumber Like :cMemberNumber "); //java.lang.String
		}
		if ( data.getExchangeRate() != null ) {
			sb.append(" AND obj.exchangeRate >= :exchangeRate "); // java.lang.Float
		}
		if ( data.getSellerRoleRemark() != null && !"".equals(data.getSellerRoleRemark())) {
			sb.append(" AND obj.sellerRoleRemark Like :sellerRoleRemark "); //java.lang.String
		}
		if ( data.getBuyerEmailAddress() != null && !"".equals(data.getBuyerEmailAddress())) {
			sb.append(" AND obj.buyerEmailAddress Like :buyerEmailAddress "); //java.lang.String
		}
		if ( data.getSyncPrintDate() != null && !"".equals(data.getSyncPrintDate())) {
			sb.append(" AND obj.syncPrintDate Like :syncPrintDate "); //java.sql.Timestamp
		}
		if ( data.getcEmail() != null && !"".equals(data.getcEmail())) {
			sb.append(" AND obj.cEmail Like :cEmail "); //java.lang.String
		}
		if ( data.getcPhoneCode() != null && !"".equals(data.getcPhoneCode())) {
			sb.append(" AND obj.cPhoneCode Like :cPhoneCode "); //java.lang.String
		}
		if ( data.getSalesAmount() != null ) {
			sb.append(" AND obj.salesAmount >= :salesAmount "); // java.math.BigDecimal
		}
		if ( data.getcYearMonth() != null && !"".equals(data.getcYearMonth())) {
			sb.append(" AND obj.cYearMonth Like :cYearMonth "); //java.lang.String
		}
		if ( data.getBuyerFacsimileNumber() != null && !"".equals(data.getBuyerFacsimileNumber())) {
			sb.append(" AND obj.buyerFacsimileNumber Like :buyerFacsimileNumber "); //java.lang.String
		}
		if ( data.getMigType() != null && !"".equals(data.getMigType())) {
			sb.append(" AND obj.migType Like :migType "); //java.lang.String
		}
		if ( data.getSyncCompanyKey() != null && !"".equals(data.getSyncCompanyKey())) {
			sb.append(" AND obj.syncCompanyKey Like :syncCompanyKey "); //java.lang.String
		}
		if ( data.getBuyer() != null && !"".equals(data.getBuyer())) {
			sb.append(" AND obj.buyer Like :buyer "); //java.lang.String
		}
		if ( data.getBuyerRemark() != null && !"".equals(data.getBuyerRemark())) {
			sb.append(" AND obj.buyerRemark Like :buyerRemark "); //java.lang.String
		}
		if ( data.getcPosRemark2() != null && !"".equals(data.getcPosRemark2())) {
			sb.append(" AND obj.cPosRemark2 Like :cPosRemark2 "); //java.lang.String
		}
		if ( data.getcPosRemark1() != null && !"".equals(data.getcPosRemark1())) {
			sb.append(" AND obj.cPosRemark1 Like :cPosRemark1 "); //java.lang.String
		}
		if ( data.getTaxType() != null && !"".equals(data.getTaxType())) {
			sb.append(" AND obj.taxType Like :taxType "); //java.lang.String
		}
		if ( data.getTotalAmount() != null ) {
			sb.append(" AND obj.totalAmount >= :totalAmount "); // java.math.BigDecimal
		}
		if ( data.getRandomNumber() != null && !"".equals(data.getRandomNumber())) {
			sb.append(" AND obj.randomNumber Like :randomNumber "); //java.lang.String
		}
		if ( data.getCreatorId() != null && !"".equals(data.getCreatorId())) {
			sb.append(" AND obj.creatorId Like :creatorId "); //java.lang.Integer
		}
		if ( data.getCustomsClearanceMark() != null && !"".equals(data.getCustomsClearanceMark())) {
			sb.append(" AND obj.customsClearanceMark Like :customsClearanceMark "); //java.lang.String
		}
		if ( data.getSellerEmailAddress() != null && !"".equals(data.getSellerEmailAddress())) {
			sb.append(" AND obj.sellerEmailAddress Like :sellerEmailAddress "); //java.lang.String
		}
		if ( data.getSyncPrintMark() != null ) {
			sb.append(" AND obj.syncPrintMark is :syncPrintMark "); //java.lang.Boolean
		}
		if ( data.getcNaturalPerson() != null && !"".equals(data.getcNaturalPerson())) {
			sb.append(" AND obj.cNaturalPerson Like :cNaturalPerson "); //java.lang.String
		}
		if ( data.getBuyerPersonInCharge() != null && !"".equals(data.getBuyerPersonInCharge())) {
			sb.append(" AND obj.buyerPersonInCharge Like :buyerPersonInCharge "); //java.lang.String
		}
		if ( data.getcPrinterNo() != null && !"".equals(data.getcPrinterNo())) {
			sb.append(" AND obj.cPrinterNo Like :cPrinterNo "); //java.lang.String
		}
		if ( data.getInvoiceTime() != null && !"".equals(data.getInvoiceTime())) {
			sb.append(" AND obj.invoiceTime Like :invoiceTime "); //java.lang.String
		}
		if ( data.getZeroTaxSalesAmount() != null ) {
			sb.append(" AND obj.zeroTaxSalesAmount >= :zeroTaxSalesAmount "); // java.math.BigDecimal
		}
		if ( data.getcPosRemark3() != null && !"".equals(data.getcPosRemark3())) {
			sb.append(" AND obj.cPosRemark3 Like :cPosRemark3 "); //java.lang.String
		}
		if ( data.getSyncPrintUser() != null && !"".equals(data.getSyncPrintUser())) {
			sb.append(" AND obj.syncPrintUser Like :syncPrintUser "); //java.lang.Integer
		}
		if ( data.getBuyerTelephoneNumber() != null && !"".equals(data.getBuyerTelephoneNumber())) {
			sb.append(" AND obj.buyerTelephoneNumber Like :buyerTelephoneNumber "); //java.lang.String
		}
		if ( data.getcPosRemark4() != null && !"".equals(data.getcPosRemark4())) {
			sb.append(" AND obj.cPosRemark4 Like :cPosRemark4 "); //java.lang.String
		}
		if ( data.getBuyerCustomerNumber() != null && !"".equals(data.getBuyerCustomerNumber())) {
			sb.append(" AND obj.buyerCustomerNumber Like :buyerCustomerNumber "); //java.lang.String
		}
		if ( data.getInvoiceDate() != null && !"".equals(data.getInvoiceDate())) {
			sb.append(" AND obj.invoiceDate Like :invoiceDate "); //java.lang.String
		}
		if ( data.getSellerTelephoneNumber() != null && !"".equals(data.getSellerTelephoneNumber())) {
			sb.append(" AND obj.sellerTelephoneNumber Like :sellerTelephoneNumber "); //java.lang.String
		}
		if ( data.getInvoiceType() != null && !"".equals(data.getInvoiceType())) {
			sb.append(" AND obj.invoiceType Like :invoiceType "); //java.lang.String
		}
		if ( data.getCurrency() != null && !"".equals(data.getCurrency())) {
			sb.append(" AND obj.currency Like :currency "); //java.lang.String
		}
		if ( data.getPrintMark() != null && !"".equals(data.getPrintMark())) {
			sb.append(" AND obj.printMark Like :printMark "); //java.lang.String
		}
		if ( data.getSellerPersonInCharge() != null && !"".equals(data.getSellerPersonInCharge())) {
			sb.append(" AND obj.sellerPersonInCharge Like :sellerPersonInCharge "); //java.lang.String
		}
		if ( data.getGroupMark() != null && !"".equals(data.getGroupMark())) {
			sb.append(" AND obj.groupMark Like :groupMark "); //java.lang.String
		}
		if ( data.getBuyerAddress() != null && !"".equals(data.getBuyerAddress())) {
			sb.append(" AND obj.buyerAddress Like :buyerAddress "); //java.lang.String
		}
		if ( data.getAssignId() != null && !"".equals(data.getAssignId())) {
			sb.append(" AND obj.assignId Like :assignId "); //java.lang.Integer
		}
		if ( data.getB2bFlag() != null && !"".equals(data.getB2bFlag())) {
			sb.append(" AND obj.b2bFlag Like :b2bFlag "); //java.lang.String
		}
		if ( data.getSellerAddress() != null && !"".equals(data.getSellerAddress())) {
			sb.append(" AND obj.sellerAddress Like :sellerAddress "); //java.lang.String
		}
		if ( data.getConfirmStatus() != null && !"".equals(data.getConfirmStatus())) {
			sb.append(" AND obj.confirmStatus Like :confirmStatus "); //java.lang.Integer
		}
		if ( data.getcInvoiceStatus() != null && !"".equals(data.getcInvoiceStatus())) {
			sb.append(" AND obj.cInvoiceStatus Like :cInvoiceStatus "); //java.lang.Integer
		}
		if ( data.getAcceptStatus() != null && !"".equals(data.getAcceptStatus())) {
			sb.append(" AND obj.acceptStatus Like :acceptStatus "); //java.lang.Integer
		}
		if ( data.getcMemberType() != null && !"".equals(data.getcMemberType())) {
			sb.append(" AND obj.cMemberType Like :cMemberType "); //java.lang.String
		}
		if ( data.getModifierId() != null && !"".equals(data.getModifierId())) {
			sb.append(" AND obj.modifierId Like :modifierId "); //java.lang.Integer
		}
		if ( data.getCategory() != null && !"".equals(data.getCategory())) {
			sb.append(" AND obj.category Like :category "); //java.lang.String
		}
		if ( data.getModifyDate() != null && !"".equals(data.getModifyDate())) {
			sb.append(" AND obj.modifyDate Like :modifyDate "); //java.sql.Timestamp
		}
		if ( data.getSellerCustomerNumber() != null && !"".equals(data.getSellerCustomerNumber())) {
			sb.append(" AND obj.sellerCustomerNumber Like :sellerCustomerNumber "); //java.lang.String
		}
		if ( data.getUploadStatus() != null && !"".equals(data.getUploadStatus())) {
			sb.append(" AND obj.uploadStatus Like :uploadStatus "); //java.lang.String
		}
		Query q;
		List<InvoiceMainEntity> results;
		try {
			logger.debug("JpaInvoiceMainDaoImpl searchLike  query : "+sb.toString());
			q = entityManager.createQuery(sb.toString());
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		} catch (IllegalArgumentException iae){
			//	RuntimeException
			iae.printStackTrace();
			throw new DaoSystemException("JPA10002-"+iae.getMessage(),iae);
		}
		if ( data.getSeller() != null && !"".equals(data.getSeller()) ) {
			q.setParameter("seller", data.getSeller()+"%");
		}
		if ( data.getTaxAmount() != null ) {
			q.setParameter("taxAmount", data.getTaxAmount());
		}  	
		if ( data.getDiscountAmount() != null ) {
			q.setParameter("discountAmount", data.getDiscountAmount());
		}  	
		if ( data.getMainRemark() != null && !"".equals(data.getMainRemark()) ) {
			q.setParameter("mainRemark", data.getMainRemark()+"%");
		}
		if ( data.getBuyerName() != null && !"".equals(data.getBuyerName()) ) {
			q.setParameter("buyerName", data.getBuyerName()+"%");
		}
		if ( data.getOriginalCurrencyAmount() != null ) {
			q.setParameter("originalCurrencyAmount", data.getOriginalCurrencyAmount());
		}  	
		if ( data.getTaxRate() != null && !"".equals(data.getTaxRate()) ) {
			q.setParameter("taxRate", data.getTaxRate()+"%");
		}
		if ( data.getRelateNumber() != null && !"".equals(data.getRelateNumber()) ) {
			q.setParameter("relateNumber", data.getRelateNumber()+"%");
		}
		if ( data.getCarrierId2() != null && !"".equals(data.getCarrierId2()) ) {
			q.setParameter("carrierId2", data.getCarrierId2()+"%");
		}
		if ( data.getCarrierId1() != null && !"".equals(data.getCarrierId1()) ) {
			q.setParameter("carrierId1", data.getCarrierId1()+"%");
		}
		if ( data.getNpoban() != null && !"".equals(data.getNpoban()) ) {
			q.setParameter("npoban", data.getNpoban()+"%");
		}
		if ( data.getBuyerRoleRemark() != null && !"".equals(data.getBuyerRoleRemark()) ) {
			q.setParameter("buyerRoleRemark", data.getBuyerRoleRemark()+"%");
		}
		if ( data.getAllowanceCount() != null && !"".equals(data.getAllowanceCount()) ) {
			q.setParameter("allowanceCount", data.getAllowanceCount()+"%");
		}
		if ( data.getCheckNumber() != null && !"".equals(data.getCheckNumber()) ) {
			q.setParameter("checkNumber", data.getCheckNumber()+"%");
		}
		if ( data.getCarrierType() != null && !"".equals(data.getCarrierType()) ) {
			q.setParameter("carrierType", data.getCarrierType()+"%");
		}
		if ( data.getSellerName() != null && !"".equals(data.getSellerName()) ) {
			q.setParameter("sellerName", data.getSellerName()+"%");
		}
		if ( data.getFreeTaxSalesAmount() != null ) {
			q.setParameter("freeTaxSalesAmount", data.getFreeTaxSalesAmount());
		}  	
		if ( data.getcPrinterId() != null && !"".equals(data.getcPrinterId()) ) {
			q.setParameter("cPrinterId", data.getcPrinterId()+"%");
		}
		if ( data.getInvoiceId() != null ) {
			q.setParameter("invoiceId", data.getInvoiceId());
		}  	
		if ( data.getSellerFacsimileNumber() != null && !"".equals(data.getSellerFacsimileNumber()) ) {
			q.setParameter("sellerFacsimileNumber", data.getSellerFacsimileNumber()+"%");
		}
		if ( data.getDonateMark() != null && !"".equals(data.getDonateMark()) ) {
			q.setParameter("donateMark", data.getDonateMark()+"%");
		}
		if ( data.getcKey() != null && !"".equals(data.getcKey()) ) {
			q.setParameter("cKey", data.getcKey()+"%");
		}
		if ( data.getCreateDate() != null && !"".equals(data.getCreateDate()) ) {
			q.setParameter("createDate", data.getCreateDate()+"%");
		}
		if ( data.getInvoiceNumber() != null && !"".equals(data.getInvoiceNumber()) ) {
			q.setParameter("invoiceNumber", data.getInvoiceNumber()+"%");
		}
		if ( data.getBondedAreaConfirm() != null && !"".equals(data.getBondedAreaConfirm()) ) {
			q.setParameter("bondedAreaConfirm", data.getBondedAreaConfirm()+"%");
		}
		if ( data.getcMemberNumber() != null && !"".equals(data.getcMemberNumber()) ) {
			q.setParameter("cMemberNumber", data.getcMemberNumber()+"%");
		}
		if ( data.getExchangeRate() != null && !"".equals(data.getExchangeRate()) ) {
			q.setParameter("exchangeRate", data.getExchangeRate()+"%");
		}
		if ( data.getSellerRoleRemark() != null && !"".equals(data.getSellerRoleRemark()) ) {
			q.setParameter("sellerRoleRemark", data.getSellerRoleRemark()+"%");
		}
		if ( data.getBuyerEmailAddress() != null && !"".equals(data.getBuyerEmailAddress()) ) {
			q.setParameter("buyerEmailAddress", data.getBuyerEmailAddress()+"%");
		}
		if ( data.getSyncPrintDate() != null && !"".equals(data.getSyncPrintDate()) ) {
			q.setParameter("syncPrintDate", data.getSyncPrintDate()+"%");
		}
		if ( data.getcEmail() != null && !"".equals(data.getcEmail()) ) {
			q.setParameter("cEmail", data.getcEmail()+"%");
		}
		if ( data.getcPhoneCode() != null && !"".equals(data.getcPhoneCode()) ) {
			q.setParameter("cPhoneCode", data.getcPhoneCode()+"%");
		}
		if ( data.getSalesAmount() != null ) {
			q.setParameter("salesAmount", data.getSalesAmount());
		}  	
		if ( data.getcYearMonth() != null && !"".equals(data.getcYearMonth()) ) {
			q.setParameter("cYearMonth", data.getcYearMonth()+"%");
		}
		if ( data.getBuyerFacsimileNumber() != null && !"".equals(data.getBuyerFacsimileNumber()) ) {
			q.setParameter("buyerFacsimileNumber", data.getBuyerFacsimileNumber()+"%");
		}
		if ( data.getMigType() != null && !"".equals(data.getMigType()) ) {
			q.setParameter("migType", data.getMigType()+"%");
		}
		if ( data.getSyncCompanyKey() != null && !"".equals(data.getSyncCompanyKey()) ) {
			q.setParameter("syncCompanyKey", data.getSyncCompanyKey()+"%");
		}
		if ( data.getBuyer() != null && !"".equals(data.getBuyer()) ) {
			q.setParameter("buyer", data.getBuyer()+"%");
		}
		if ( data.getBuyerRemark() != null && !"".equals(data.getBuyerRemark()) ) {
			q.setParameter("buyerRemark", data.getBuyerRemark()+"%");
		}
		if ( data.getcPosRemark2() != null && !"".equals(data.getcPosRemark2()) ) {
			q.setParameter("cPosRemark2", data.getcPosRemark2()+"%");
		}
		if ( data.getcPosRemark1() != null && !"".equals(data.getcPosRemark1()) ) {
			q.setParameter("cPosRemark1", data.getcPosRemark1()+"%");
		}
		if ( data.getTaxType() != null && !"".equals(data.getTaxType()) ) {
			q.setParameter("taxType", data.getTaxType()+"%");
		}
		if ( data.getTotalAmount() != null ) {
			q.setParameter("totalAmount", data.getTotalAmount());
		}  	
		if ( data.getRandomNumber() != null && !"".equals(data.getRandomNumber()) ) {
			q.setParameter("randomNumber", data.getRandomNumber()+"%");
		}
		if ( data.getCreatorId() != null && !"".equals(data.getCreatorId()) ) {
			q.setParameter("creatorId", data.getCreatorId()+"%");
		}
		if ( data.getCustomsClearanceMark() != null && !"".equals(data.getCustomsClearanceMark()) ) {
			q.setParameter("customsClearanceMark", data.getCustomsClearanceMark()+"%");
		}
		if ( data.getSellerEmailAddress() != null && !"".equals(data.getSellerEmailAddress()) ) {
			q.setParameter("sellerEmailAddress", data.getSellerEmailAddress()+"%");
		}
		if ( data.getSyncPrintMark() != null ) {
			q.setParameter("syncPrintMark", data.getSyncPrintMark());
		}  	
		if ( data.getcNaturalPerson() != null && !"".equals(data.getcNaturalPerson()) ) {
			q.setParameter("cNaturalPerson", data.getcNaturalPerson()+"%");
		}
		if ( data.getBuyerPersonInCharge() != null && !"".equals(data.getBuyerPersonInCharge()) ) {
			q.setParameter("buyerPersonInCharge", data.getBuyerPersonInCharge()+"%");
		}
		if ( data.getcPrinterNo() != null && !"".equals(data.getcPrinterNo()) ) {
			q.setParameter("cPrinterNo", data.getcPrinterNo()+"%");
		}
		if ( data.getInvoiceTime() != null && !"".equals(data.getInvoiceTime()) ) {
			q.setParameter("invoiceTime", data.getInvoiceTime()+"%");
		}
		if ( data.getZeroTaxSalesAmount() != null ) {
			q.setParameter("zeroTaxSalesAmount", data.getZeroTaxSalesAmount());
		}  	
		if ( data.getcPosRemark3() != null && !"".equals(data.getcPosRemark3()) ) {
			q.setParameter("cPosRemark3", data.getcPosRemark3()+"%");
		}
		if ( data.getSyncPrintUser() != null && !"".equals(data.getSyncPrintUser()) ) {
			q.setParameter("syncPrintUser", data.getSyncPrintUser()+"%");
		}
		if ( data.getBuyerTelephoneNumber() != null && !"".equals(data.getBuyerTelephoneNumber()) ) {
			q.setParameter("buyerTelephoneNumber", data.getBuyerTelephoneNumber()+"%");
		}
		if ( data.getcPosRemark4() != null && !"".equals(data.getcPosRemark4()) ) {
			q.setParameter("cPosRemark4", data.getcPosRemark4()+"%");
		}
		if ( data.getBuyerCustomerNumber() != null && !"".equals(data.getBuyerCustomerNumber()) ) {
			q.setParameter("buyerCustomerNumber", data.getBuyerCustomerNumber()+"%");
		}
		if ( data.getInvoiceDate() != null && !"".equals(data.getInvoiceDate()) ) {
			q.setParameter("invoiceDate", data.getInvoiceDate()+"%");
		}
		if ( data.getSellerTelephoneNumber() != null && !"".equals(data.getSellerTelephoneNumber()) ) {
			q.setParameter("sellerTelephoneNumber", data.getSellerTelephoneNumber()+"%");
		}
		if ( data.getInvoiceType() != null && !"".equals(data.getInvoiceType()) ) {
			q.setParameter("invoiceType", data.getInvoiceType()+"%");
		}
		if ( data.getCurrency() != null && !"".equals(data.getCurrency()) ) {
			q.setParameter("currency", data.getCurrency()+"%");
		}
		if ( data.getPrintMark() != null && !"".equals(data.getPrintMark()) ) {
			q.setParameter("printMark", data.getPrintMark()+"%");
		}
		if ( data.getSellerPersonInCharge() != null && !"".equals(data.getSellerPersonInCharge()) ) {
			q.setParameter("sellerPersonInCharge", data.getSellerPersonInCharge()+"%");
		}
		if ( data.getGroupMark() != null && !"".equals(data.getGroupMark()) ) {
			q.setParameter("groupMark", data.getGroupMark()+"%");
		}
		if ( data.getBuyerAddress() != null && !"".equals(data.getBuyerAddress()) ) {
			q.setParameter("buyerAddress", data.getBuyerAddress()+"%");
		}
		if ( data.getAssignId() != null && !"".equals(data.getAssignId()) ) {
			q.setParameter("assignId", data.getAssignId()+"%");
		}
		if ( data.getB2bFlag() != null && !"".equals(data.getB2bFlag()) ) {
			q.setParameter("b2bFlag", data.getB2bFlag()+"%");
		}
		if ( data.getSellerAddress() != null && !"".equals(data.getSellerAddress()) ) {
			q.setParameter("sellerAddress", data.getSellerAddress()+"%");
		}
		if ( data.getConfirmStatus() != null && !"".equals(data.getConfirmStatus()) ) {
			q.setParameter("confirmStatus", data.getConfirmStatus()+"%");
		}
		if ( data.getcInvoiceStatus() != null && !"".equals(data.getcInvoiceStatus()) ) {
			q.setParameter("cInvoiceStatus", data.getcInvoiceStatus()+"%");
		}
		if ( data.getAcceptStatus() != null && !"".equals(data.getAcceptStatus()) ) {
			q.setParameter("acceptStatus", data.getAcceptStatus()+"%");
		}
		if ( data.getcMemberType() != null && !"".equals(data.getcMemberType()) ) {
			q.setParameter("cMemberType", data.getcMemberType()+"%");
		}
		if ( data.getModifierId() != null && !"".equals(data.getModifierId()) ) {
			q.setParameter("modifierId", data.getModifierId()+"%");
		}
		if ( data.getCategory() != null && !"".equals(data.getCategory()) ) {
			q.setParameter("category", data.getCategory()+"%");
		}
		if ( data.getModifyDate() != null && !"".equals(data.getModifyDate()) ) {
			q.setParameter("modifyDate", data.getModifyDate()+"%");
		}
		if ( data.getSellerCustomerNumber() != null && !"".equals(data.getSellerCustomerNumber()) ) {
			q.setParameter("sellerCustomerNumber", data.getSellerCustomerNumber()+"%");
		}
		if ( data.getUploadStatus() != null && !"".equals(data.getUploadStatus()) ) {
			q.setParameter("uploadStatus", data.getUploadStatus()+"%");
		}
		try {
			results = q.getResultList();
		} catch (IllegalStateException ise){
			//	RuntimeException
			ise.printStackTrace();
			throw new DaoSystemException("JPA10001-"+ise.getMessage(),ise);
		}
		
		return results;
	}	
	
}
