/*
 * This file is generated by jOOQ.
 */
package com.gateweb.charge.model;


import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "charge_reference", schema = "public", indexes = {
    @Index(name = "charge_reference_id_constraint", unique = true, columnList = "reference_id ASC"),
    @Index(name = "charge_reference_pkey", unique = true, columnList = "reference_id ASC")
})
public class ChargeReference implements Serializable {

    private static final long serialVersionUID = -1652863477;

    private Long      referenceId;
    private Long      targetId;
    private String    type;
    private Long      creator;
    private Timestamp createDate;
    private Long      modifier;
    private Timestamp modifyDate;

    public ChargeReference() {}

    public ChargeReference(ChargeReference value) {
        this.referenceId = value.referenceId;
        this.targetId = value.targetId;
        this.type = value.type;
        this.creator = value.creator;
        this.createDate = value.createDate;
        this.modifier = value.modifier;
        this.modifyDate = value.modifyDate;
    }

    public ChargeReference(
        Long      referenceId,
        Long      targetId,
        String    type,
        Long      creator,
        Timestamp createDate,
        Long      modifier,
        Timestamp modifyDate
    ) {
        this.referenceId = referenceId;
        this.targetId = targetId;
        this.type = type;
        this.creator = creator;
        this.createDate = createDate;
        this.modifier = modifier;
        this.modifyDate = modifyDate;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "reference_id", unique = true, nullable = false, precision = 64)
    public Long getReferenceId() {
        return this.referenceId;
    }

    public void setReferenceId(Long referenceId) {
        this.referenceId = referenceId;
    }

    @Column(name = "target_id", nullable = false, precision = 64)
    @NotNull
    public Long getTargetId() {
        return this.targetId;
    }

    public void setTargetId(Long targetId) {
        this.targetId = targetId;
    }

    @Column(name = "type", nullable = false, length = 25)
    @NotNull
    @Size(max = 25)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "creator", nullable = false, precision = 64)
    @NotNull
    public Long getCreator() {
        return this.creator;
    }

    public void setCreator(Long creator) {
        this.creator = creator;
    }

    @Column(name = "create_date", nullable = false)
    @NotNull
    public Timestamp getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
    }

    @Column(name = "modifier", precision = 64)
    public Long getModifier() {
        return this.modifier;
    }

    public void setModifier(Long modifier) {
        this.modifier = modifier;
    }

    @Column(name = "modify_date")
    public Timestamp getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(Timestamp modifyDate) {
        this.modifyDate = modifyDate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChargeReference (");

        sb.append(referenceId);
        sb.append(", ").append(targetId);
        sb.append(", ").append(type);
        sb.append(", ").append(creator);
        sb.append(", ").append(createDate);
        sb.append(", ").append(modifier);
        sb.append(", ").append(modifyDate);

        sb.append(")");
        return sb.toString();
    }
}
