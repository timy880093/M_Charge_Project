/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.model;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.ManyToOne;
import javax.persistence.JoinColumn;
import static javax.persistence.GenerationType.IDENTITY;
import static javax.persistence.GenerationType.AUTO;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;


/**
 *
 * @author pkliu
 *
 */
@Entity
@Table(name = "invoice_type")
public class InvoiceTypeEntity implements Serializable {

//long serialVersionUID jdk tool: serialver.exe 

	/**
	 * type_format
	 */
	@Column(name = "type_format")
	protected java.lang.String typeFormat;
	
	/**
	 * description
	 */
	@Column(name = "description")
	protected java.lang.String description;
	
	/**
	 * invoice_number
	 */
	@Column(name = "invoice_number")
	protected java.lang.Integer invoiceNumber;
	
    /**
     * type_code java.lang.String , PK     * @GeneratedValue(strategy = GenerationType.AUTO)
     */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "type_code", unique = true, nullable = false)
	protected java.lang.String typeCode;
	
	/**
	 * out_format
	 */
	@Column(name = "out_format")
	protected java.lang.String outFormat;
	



    
	/**
	 * 002
	 * @return java.lang.String typeFormat
	 */
	public java.lang.String getTypeFormat() {
		return this.typeFormat;
	}
	
	/** 0001
	 * @param data Set the typeFormat
	 */	
	public void setTypeFormat(java.lang.String data) {
		this.typeFormat = data;
	}	
	/**
	 * 002
	 * @return java.lang.String description
	 */
	public java.lang.String getDescription() {
		return this.description;
	}
	
	/** 0001
	 * @param data Set the description
	 */	
	public void setDescription(java.lang.String data) {
		this.description = data;
	}	
	/**
	 * 002
	 * @return java.lang.Integer invoiceNumber
	 */
	public java.lang.Integer getInvoiceNumber() {
		return this.invoiceNumber;
	}
	
	/** 0001
	 * @param data Set the invoiceNumber
	 */	
	public void setInvoiceNumber(java.lang.Integer data) {
		this.invoiceNumber = data;
	}	
	/**
	 * 002
	 * @return java.lang.String typeCode
	 */
	public java.lang.String getTypeCode() {
		return this.typeCode;
	}
	
	/** 0001
	 * @param data Set the typeCode
	 */	
	public void setTypeCode(java.lang.String data) {
		this.typeCode = data;    //zzz
	}	
	/**
	 * 002
	 * @return java.lang.String outFormat
	 */
	public java.lang.String getOutFormat() {
		return this.outFormat;
	}
	
	/** 0001
	 * @param data Set the outFormat
	 */	
	public void setOutFormat(java.lang.String data) {
		this.outFormat = data;
	}	



	/**
	 *
	 */
	public InvoiceTypeEntity(){
	}

	/**
	 * full constructor 
	 * @param typeFormat 
	 * @param description 
	 * @param invoiceNumber 
	 * @param typeCode 
	 * @param outFormat 
	 */
	public InvoiceTypeEntity (
		 java.lang.String typeFormat 
		, java.lang.String description 
		, java.lang.Integer invoiceNumber 
		, java.lang.String typeCode 
		, java.lang.String outFormat 
        ) {
		this.setTypeFormat(typeFormat);
		this.setDescription(description);
		this.setInvoiceNumber(invoiceNumber);
		this.setTypeCode(typeCode);
		this.setOutFormat(outFormat);
    }

	
	@Override
	public int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

	@Override
	public String toString() {
		 //return ToStringBuilder.reflectionToString(this , ToStringStyle.MULTI_LINE_STYLE);  
		 return new ToStringBuilder(this)
		.append("typeFormat", this.typeFormat)
		.append("description", this.description)
		.append("invoiceNumber", this.invoiceNumber)
		.append("typeCode", this.typeCode)
		.append("outFormat", this.outFormat)
		.toString();
	}	 

	/*
    @Override
	public boolean equals(Object object) {
		if (object == null || !(object instanceof InvoiceTypeEntity))
			return false;
		EqualsBuilder builder = new EqualsBuilder();
		builder.append(this.id, ((InvoiceTypeEntity) object).id);
		return builder.isEquals();
	}*/
	
	/**
	 * Indicates whether some other object is "equal to" this one.
	 * @return true is equal, false is not equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;

		if (obj == null || !(obj instanceof InvoiceTypeEntity))
			return false;

		InvoiceTypeEntity key = (InvoiceTypeEntity) obj;
		if (this.typeCode != key.typeCode ) 
        	return false;

		return true;
    }

}