/*
 * $Header: $
 * This java source file is generated by pkliu on Thu Aug 03 11:22:57 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.charge.model.Company;
import com.gateweb.charge.model.QCompany;
import com.gateweb.charge.repository.Company2Repository;
import com.gateweb.charge.repository.Company2RepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of Company
 */
//@Repository("company2RepositoryCustom")
public class Company2RepositoryImpl implements Company2RepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	Company2Repository company2Repository;
	
	public Company2RepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<Company> searchWithVo(Company vo) {
		log.debug("CompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QCompany company = QCompany.company;

		if ( vo.getCompanyType() != null ) {
			builder.and(company.companyType.eq(vo.getCompanyType())); //java.lang.Long
		}	
		if ( vo.getCodeName() != null && !"".equals(vo.getCodeName())) {
			builder.and(company.codeName.equalsIgnoreCase(vo.getCodeName())); //java.lang.String
		}
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(company.companyAddress.equalsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getEmail2() != null && !"".equals(vo.getEmail2())) {
			builder.and(company.email2.equalsIgnoreCase(vo.getEmail2())); //java.lang.String
		}
		if ( vo.getEmail1() != null && !"".equals(vo.getEmail1())) {
			builder.and(company.email1.equalsIgnoreCase(vo.getEmail1())); //java.lang.String
		}
		if ( vo.getTaxNo() != null && !"".equals(vo.getTaxNo())) {
			builder.and(company.taxNo.equalsIgnoreCase(vo.getTaxNo())); //java.lang.String
		}
		if ( vo.getContactPhone1() != null && !"".equals(vo.getContactPhone1())) {
			builder.and(company.contactPhone1.equalsIgnoreCase(vo.getContactPhone1())); //java.lang.String
		}
		if ( vo.getContactPhone2() != null && !"".equals(vo.getContactPhone2())) {
			builder.and(company.contactPhone2.equalsIgnoreCase(vo.getContactPhone2())); //java.lang.String
		}
		if ( vo.getBottomBanner() != null && !"".equals(vo.getBottomBanner())) {
			builder.and(company.bottomBanner.equalsIgnoreCase(vo.getBottomBanner())); //java.lang.String
		}
		if ( vo.getVerifyStatus() != null ) {
			builder.and(company.verifyStatus.eq(vo.getVerifyStatus())); //java.lang.Long
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(company.fax.equalsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(company.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(company.companyId.eq(vo.getCompanyId())); //java.lang.Long
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(company.businessNo.equalsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCompanyKey() != null && !"".equals(vo.getCompanyKey())) {
			builder.and(company.companyKey.equalsIgnoreCase(vo.getCompanyKey())); //java.lang.String
		}
		if ( vo.getMailingAddress() != null && !"".equals(vo.getMailingAddress())) {
			builder.and(company.mailingAddress.equalsIgnoreCase(vo.getMailingAddress())); //java.lang.String
		}
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(company.phone.equalsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getParentId() != null ) {
			builder.and(company.parentId.eq(vo.getParentId())); //java.lang.Long
		}	
		if ( vo.getName() != null && !"".equals(vo.getName())) {
			builder.and(company.name.equalsIgnoreCase(vo.getName())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(company.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(company.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getTaxOffice() != null && !"".equals(vo.getTaxOffice())) {
			builder.and(company.taxOffice.equalsIgnoreCase(vo.getTaxOffice())); //java.lang.String
		}
		if ( vo.getTopBanner() != null && !"".equals(vo.getTopBanner())) {
			builder.and(company.topBanner.equalsIgnoreCase(vo.getTopBanner())); //java.lang.String
		}
		if ( vo.getTransferType() != null ) {
			builder.and(company.transferType.eq(vo.getTransferType())); //java.lang.Long
		}	
		if ( vo.getContact1() != null && !"".equals(vo.getContact1())) {
			builder.and(company.contact1.equalsIgnoreCase(vo.getContact1())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(company.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getContact2() != null && !"".equals(vo.getContact2())) {
			builder.and(company.contact2.equalsIgnoreCase(vo.getContact2())); //java.lang.String
		}
		if ( vo.getCityId() != null ) {
			builder.and(company.cityId.eq(vo.getCityId())); //java.lang.Long
		}	
		log.debug("CompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(company2Repository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<Company> searchWithVo(Company vo, Pageable pageable) {
		log.debug("CompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QCompany company = QCompany.company;

		if ( vo.getCompanyType() != null ) {
			builder.and(company.companyType.eq(vo.getCompanyType())); //java.lang.Long
		}	
		if ( vo.getCodeName() != null && !"".equals(vo.getCodeName())) {
			builder.and(company.codeName.equalsIgnoreCase(vo.getCodeName())); //java.lang.String
		}
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(company.companyAddress.equalsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getEmail2() != null && !"".equals(vo.getEmail2())) {
			builder.and(company.email2.equalsIgnoreCase(vo.getEmail2())); //java.lang.String
		}
		if ( vo.getEmail1() != null && !"".equals(vo.getEmail1())) {
			builder.and(company.email1.equalsIgnoreCase(vo.getEmail1())); //java.lang.String
		}
		if ( vo.getTaxNo() != null && !"".equals(vo.getTaxNo())) {
			builder.and(company.taxNo.equalsIgnoreCase(vo.getTaxNo())); //java.lang.String
		}
		if ( vo.getContactPhone1() != null && !"".equals(vo.getContactPhone1())) {
			builder.and(company.contactPhone1.equalsIgnoreCase(vo.getContactPhone1())); //java.lang.String
		}
		if ( vo.getContactPhone2() != null && !"".equals(vo.getContactPhone2())) {
			builder.and(company.contactPhone2.equalsIgnoreCase(vo.getContactPhone2())); //java.lang.String
		}
		if ( vo.getBottomBanner() != null && !"".equals(vo.getBottomBanner())) {
			builder.and(company.bottomBanner.equalsIgnoreCase(vo.getBottomBanner())); //java.lang.String
		}
		if ( vo.getVerifyStatus() != null ) {
			builder.and(company.verifyStatus.eq(vo.getVerifyStatus())); //java.lang.Long
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(company.fax.equalsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(company.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(company.companyId.eq(vo.getCompanyId())); //java.lang.Long
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(company.businessNo.equalsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCompanyKey() != null && !"".equals(vo.getCompanyKey())) {
			builder.and(company.companyKey.equalsIgnoreCase(vo.getCompanyKey())); //java.lang.String
		}
		if ( vo.getMailingAddress() != null && !"".equals(vo.getMailingAddress())) {
			builder.and(company.mailingAddress.equalsIgnoreCase(vo.getMailingAddress())); //java.lang.String
		}
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(company.phone.equalsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getParentId() != null ) {
			builder.and(company.parentId.eq(vo.getParentId())); //java.lang.Long
		}	
		if ( vo.getName() != null && !"".equals(vo.getName())) {
			builder.and(company.name.equalsIgnoreCase(vo.getName())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(company.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(company.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getTaxOffice() != null && !"".equals(vo.getTaxOffice())) {
			builder.and(company.taxOffice.equalsIgnoreCase(vo.getTaxOffice())); //java.lang.String
		}
		if ( vo.getTopBanner() != null && !"".equals(vo.getTopBanner())) {
			builder.and(company.topBanner.equalsIgnoreCase(vo.getTopBanner())); //java.lang.String
		}
		if ( vo.getTransferType() != null ) {
			builder.and(company.transferType.eq(vo.getTransferType())); //java.lang.Long
		}	
		if ( vo.getContact1() != null && !"".equals(vo.getContact1())) {
			builder.and(company.contact1.equalsIgnoreCase(vo.getContact1())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(company.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getContact2() != null && !"".equals(vo.getContact2())) {
			builder.and(company.contact2.equalsIgnoreCase(vo.getContact2())); //java.lang.String
		}
		if ( vo.getCityId() != null ) {
			builder.and(company.cityId.eq(vo.getCityId())); //java.lang.Long
		}	
		log.debug("CompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(company2Repository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<Company> searchWithVo(Company vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<Company> searchLikeVo(Company vo) {
		log.debug("CompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QCompany company = QCompany.company;

		if ( vo.getCompanyType() != null ) {
			builder.and(company.companyType.eq(vo.getCompanyType())); //java.lang.Long
		}	
		if ( vo.getCodeName() != null && !"".equals(vo.getCodeName())) {
			builder.and(company.codeName.containsIgnoreCase(vo.getCodeName())); //java.lang.String
		}
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(company.companyAddress.containsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getEmail2() != null && !"".equals(vo.getEmail2())) {
			builder.and(company.email2.containsIgnoreCase(vo.getEmail2())); //java.lang.String
		}
		if ( vo.getEmail1() != null && !"".equals(vo.getEmail1())) {
			builder.and(company.email1.containsIgnoreCase(vo.getEmail1())); //java.lang.String
		}
		if ( vo.getTaxNo() != null && !"".equals(vo.getTaxNo())) {
			builder.and(company.taxNo.containsIgnoreCase(vo.getTaxNo())); //java.lang.String
		}
		if ( vo.getContactPhone1() != null && !"".equals(vo.getContactPhone1())) {
			builder.and(company.contactPhone1.containsIgnoreCase(vo.getContactPhone1())); //java.lang.String
		}
		if ( vo.getContactPhone2() != null && !"".equals(vo.getContactPhone2())) {
			builder.and(company.contactPhone2.containsIgnoreCase(vo.getContactPhone2())); //java.lang.String
		}
		if ( vo.getBottomBanner() != null && !"".equals(vo.getBottomBanner())) {
			builder.and(company.bottomBanner.containsIgnoreCase(vo.getBottomBanner())); //java.lang.String
		}
		if ( vo.getVerifyStatus() != null ) {
			builder.and(company.verifyStatus.eq(vo.getVerifyStatus())); //java.lang.Long
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(company.fax.containsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(company.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(company.companyId.eq(vo.getCompanyId())); //java.lang.Long
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(company.businessNo.containsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCompanyKey() != null && !"".equals(vo.getCompanyKey())) {
			builder.and(company.companyKey.containsIgnoreCase(vo.getCompanyKey())); //java.lang.String
		}
		if ( vo.getMailingAddress() != null && !"".equals(vo.getMailingAddress())) {
			builder.and(company.mailingAddress.containsIgnoreCase(vo.getMailingAddress())); //java.lang.String
		}
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(company.phone.containsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getParentId() != null ) {
			builder.and(company.parentId.eq(vo.getParentId())); //java.lang.Long
		}	
		if ( vo.getName() != null && !"".equals(vo.getName())) {
			builder.and(company.name.containsIgnoreCase(vo.getName())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(company.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(company.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getTaxOffice() != null && !"".equals(vo.getTaxOffice())) {
			builder.and(company.taxOffice.containsIgnoreCase(vo.getTaxOffice())); //java.lang.String
		}
		if ( vo.getTopBanner() != null && !"".equals(vo.getTopBanner())) {
			builder.and(company.topBanner.containsIgnoreCase(vo.getTopBanner())); //java.lang.String
		}
		if ( vo.getTransferType() != null ) {
			builder.and(company.transferType.eq(vo.getTransferType())); //java.lang.Long
		}	
		if ( vo.getContact1() != null && !"".equals(vo.getContact1())) {
			builder.and(company.contact1.containsIgnoreCase(vo.getContact1())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(company.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getContact2() != null && !"".equals(vo.getContact2())) {
			builder.and(company.contact2.containsIgnoreCase(vo.getContact2())); //java.lang.String
		}
		if ( vo.getCityId() != null ) {
			builder.and(company.cityId.eq(vo.getCityId())); //java.lang.Long
		}	
		log.debug("CompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(company2Repository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<Company> searchLikeVo(Company vo, Pageable pageable) {
		log.debug("CompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QCompany company = QCompany.company;

		if ( vo.getCompanyType() != null ) {
			builder.and(company.companyType.eq(vo.getCompanyType())); //java.lang.Long
		}	
		if ( vo.getCodeName() != null && !"".equals(vo.getCodeName())) {
			builder.and(company.codeName.containsIgnoreCase(vo.getCodeName())); //java.lang.String
		}
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(company.companyAddress.containsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getEmail2() != null && !"".equals(vo.getEmail2())) {
			builder.and(company.email2.containsIgnoreCase(vo.getEmail2())); //java.lang.String
		}
		if ( vo.getEmail1() != null && !"".equals(vo.getEmail1())) {
			builder.and(company.email1.containsIgnoreCase(vo.getEmail1())); //java.lang.String
		}
		if ( vo.getTaxNo() != null && !"".equals(vo.getTaxNo())) {
			builder.and(company.taxNo.containsIgnoreCase(vo.getTaxNo())); //java.lang.String
		}
		if ( vo.getContactPhone1() != null && !"".equals(vo.getContactPhone1())) {
			builder.and(company.contactPhone1.containsIgnoreCase(vo.getContactPhone1())); //java.lang.String
		}
		if ( vo.getContactPhone2() != null && !"".equals(vo.getContactPhone2())) {
			builder.and(company.contactPhone2.containsIgnoreCase(vo.getContactPhone2())); //java.lang.String
		}
		if ( vo.getBottomBanner() != null && !"".equals(vo.getBottomBanner())) {
			builder.and(company.bottomBanner.containsIgnoreCase(vo.getBottomBanner())); //java.lang.String
		}
		if ( vo.getVerifyStatus() != null ) {
			builder.and(company.verifyStatus.eq(vo.getVerifyStatus())); //java.lang.Long
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(company.fax.containsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(company.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(company.companyId.eq(vo.getCompanyId())); //java.lang.Long
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(company.businessNo.containsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCompanyKey() != null && !"".equals(vo.getCompanyKey())) {
			builder.and(company.companyKey.containsIgnoreCase(vo.getCompanyKey())); //java.lang.String
		}
		if ( vo.getMailingAddress() != null && !"".equals(vo.getMailingAddress())) {
			builder.and(company.mailingAddress.containsIgnoreCase(vo.getMailingAddress())); //java.lang.String
		}
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(company.phone.containsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getParentId() != null ) {
			builder.and(company.parentId.eq(vo.getParentId())); //java.lang.Long
		}	
		if ( vo.getName() != null && !"".equals(vo.getName())) {
			builder.and(company.name.containsIgnoreCase(vo.getName())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(company.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(company.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getTaxOffice() != null && !"".equals(vo.getTaxOffice())) {
			builder.and(company.taxOffice.containsIgnoreCase(vo.getTaxOffice())); //java.lang.String
		}
		if ( vo.getTopBanner() != null && !"".equals(vo.getTopBanner())) {
			builder.and(company.topBanner.containsIgnoreCase(vo.getTopBanner())); //java.lang.String
		}
		if ( vo.getTransferType() != null ) {
			builder.and(company.transferType.eq(vo.getTransferType())); //java.lang.Long
		}	
		if ( vo.getContact1() != null && !"".equals(vo.getContact1())) {
			builder.and(company.contact1.containsIgnoreCase(vo.getContact1())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(company.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getContact2() != null && !"".equals(vo.getContact2())) {
			builder.and(company.contact2.containsIgnoreCase(vo.getContact2())); //java.lang.String
		}
		if ( vo.getCityId() != null ) {
			builder.and(company.cityId.eq(vo.getCityId())); //java.lang.Long
		}	
		log.debug("CompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(company2Repository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<Company> searchLikeVo(Company vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
