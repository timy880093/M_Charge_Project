/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:15 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.charge.model.QWarrantyEntity;
import com.gateweb.charge.model.WarrantyEntity;
import com.gateweb.charge.repository.WarrantyRepository;
import com.gateweb.charge.repository.WarrantyRepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of Warranty
 */
//@Repository("warrantyRepositoryCustom")
public class WarrantyRepositoryImpl implements WarrantyRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Logger logger = LogManager.getLogger(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	WarrantyRepository warrantyRepository;
	
	public WarrantyRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchWithVo(WarrantyEntity vo) {
		logger.debug("WarrantyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QWarrantyEntity warrantyEntity = QWarrantyEntity.warrantyEntity;

		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(warrantyEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getNote() != null && !"".equals(vo.getNote())) {
			builder.and(warrantyEntity.note.equalsIgnoreCase(vo.getNote())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(warrantyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(warrantyEntity.companyId.eq(vo.getCompanyId())); //java.lang.Integer
		}	
		if ( vo.getWarrantyNo() != null && !"".equals(vo.getWarrantyNo())) {
			builder.and(warrantyEntity.warrantyNo.equalsIgnoreCase(vo.getWarrantyNo())); //java.lang.String
		}
		if ( vo.getWarrantyId() != null ) {
			builder.and(warrantyEntity.warrantyId.eq(vo.getWarrantyId())); //java.lang.Integer
		}	
		if ( vo.getExtend() != null ) {
			builder.and(warrantyEntity.extend.eq(vo.getExtend())); //java.lang.Boolean
		}	
		if ( vo.getOnlyShip() != null ) {
			builder.and(warrantyEntity.onlyShip.eq(vo.getOnlyShip())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(warrantyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(warrantyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getModel() != null && !"".equals(vo.getModel())) {
			builder.and(warrantyEntity.model.equalsIgnoreCase(vo.getModel())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(warrantyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(warrantyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(warrantyEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		if ( vo.getStatus() != null ) {
			builder.and(warrantyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("WarrantyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(warrantyRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchWithVo(WarrantyEntity vo, Pageable pageable) {
		logger.debug("WarrantyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QWarrantyEntity warrantyEntity = QWarrantyEntity.warrantyEntity;

		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(warrantyEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getNote() != null && !"".equals(vo.getNote())) {
			builder.and(warrantyEntity.note.equalsIgnoreCase(vo.getNote())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(warrantyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(warrantyEntity.companyId.eq(vo.getCompanyId())); //java.lang.Integer
		}	
		if ( vo.getWarrantyNo() != null && !"".equals(vo.getWarrantyNo())) {
			builder.and(warrantyEntity.warrantyNo.equalsIgnoreCase(vo.getWarrantyNo())); //java.lang.String
		}
		if ( vo.getWarrantyId() != null ) {
			builder.and(warrantyEntity.warrantyId.eq(vo.getWarrantyId())); //java.lang.Integer
		}	
		if ( vo.getExtend() != null ) {
			builder.and(warrantyEntity.extend.eq(vo.getExtend())); //java.lang.Boolean
		}	
		if ( vo.getOnlyShip() != null ) {
			builder.and(warrantyEntity.onlyShip.eq(vo.getOnlyShip())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(warrantyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(warrantyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getModel() != null && !"".equals(vo.getModel())) {
			builder.and(warrantyEntity.model.equalsIgnoreCase(vo.getModel())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(warrantyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(warrantyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(warrantyEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		if ( vo.getStatus() != null ) {
			builder.and(warrantyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("WarrantyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(warrantyRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchWithVo(WarrantyEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchLikeVo(WarrantyEntity vo) {
		logger.debug("WarrantyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QWarrantyEntity warrantyEntity = QWarrantyEntity.warrantyEntity;

		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(warrantyEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getNote() != null && !"".equals(vo.getNote())) {
			builder.and(warrantyEntity.note.containsIgnoreCase(vo.getNote())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(warrantyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(warrantyEntity.companyId.eq(vo.getCompanyId())); //java.lang.Integer
		}	
		if ( vo.getWarrantyNo() != null && !"".equals(vo.getWarrantyNo())) {
			builder.and(warrantyEntity.warrantyNo.containsIgnoreCase(vo.getWarrantyNo())); //java.lang.String
		}
		if ( vo.getWarrantyId() != null ) {
			builder.and(warrantyEntity.warrantyId.eq(vo.getWarrantyId())); //java.lang.Integer
		}	
		if ( vo.getExtend() != null ) {
			builder.and(warrantyEntity.extend.eq(vo.getExtend())); //java.lang.Boolean
		}	
		if ( vo.getOnlyShip() != null ) {
			builder.and(warrantyEntity.onlyShip.eq(vo.getOnlyShip())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(warrantyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(warrantyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getModel() != null && !"".equals(vo.getModel())) {
			builder.and(warrantyEntity.model.containsIgnoreCase(vo.getModel())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(warrantyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(warrantyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(warrantyEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		if ( vo.getStatus() != null ) {
			builder.and(warrantyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("WarrantyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(warrantyRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchLikeVo(WarrantyEntity vo, Pageable pageable) {
		logger.debug("WarrantyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QWarrantyEntity warrantyEntity = QWarrantyEntity.warrantyEntity;

		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(warrantyEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getNote() != null && !"".equals(vo.getNote())) {
			builder.and(warrantyEntity.note.containsIgnoreCase(vo.getNote())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(warrantyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getCompanyId() != null ) {
			builder.and(warrantyEntity.companyId.eq(vo.getCompanyId())); //java.lang.Integer
		}	
		if ( vo.getWarrantyNo() != null && !"".equals(vo.getWarrantyNo())) {
			builder.and(warrantyEntity.warrantyNo.containsIgnoreCase(vo.getWarrantyNo())); //java.lang.String
		}
		if ( vo.getWarrantyId() != null ) {
			builder.and(warrantyEntity.warrantyId.eq(vo.getWarrantyId())); //java.lang.Integer
		}	
		if ( vo.getExtend() != null ) {
			builder.and(warrantyEntity.extend.eq(vo.getExtend())); //java.lang.Boolean
		}	
		if ( vo.getOnlyShip() != null ) {
			builder.and(warrantyEntity.onlyShip.eq(vo.getOnlyShip())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(warrantyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(warrantyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getModel() != null && !"".equals(vo.getModel())) {
			builder.and(warrantyEntity.model.containsIgnoreCase(vo.getModel())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(warrantyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(warrantyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(warrantyEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		if ( vo.getStatus() != null ) {
			builder.and(warrantyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("WarrantyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(warrantyRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<WarrantyEntity> searchLikeVo(WarrantyEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
