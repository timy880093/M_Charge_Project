/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
import com.gateweb.charge.repository.*; 
import com.gateweb.charge.model.*;    
import com.gateweb.charge.*;

import com.meshinnovation.db.dao.exception.DaoSystemException;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import java.util.Collection;
import javax.persistence.Query;
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;
import java.util.ArrayList;
import javax.persistence.*;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaQuery;
import org.springframework.stereotype.Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of DealerCompany
 */
//@Repository("dealerCompanyRepositoryCustom")
public class DealerCompanyRepositoryImpl implements DealerCompanyRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Logger logger = LogManager.getLogger(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	DealerCompanyRepository dealerCompanyRepository;
	
	public DealerCompanyRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchWithVo(DealerCompanyEntity vo) {
		logger.debug("DealerCompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QDealerCompanyEntity dealerCompanyEntity = QDealerCompanyEntity.dealerCompanyEntity;

		if ( vo.getDealerCompanyName() != null && !"".equals(vo.getDealerCompanyName())) {
			builder.and(dealerCompanyEntity.dealerCompanyName.equalsIgnoreCase(vo.getDealerCompanyName())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(dealerCompanyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(dealerCompanyEntity.businessNo.equalsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCollectMoney() != null ) {
			builder.and(dealerCompanyEntity.collectMoney.eq(vo.getCollectMoney())); //java.math.BigDecimal
		}	
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(dealerCompanyEntity.companyAddress.equalsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getMainAmount() != null ) {
			builder.and(dealerCompanyEntity.mainAmount.eq(vo.getMainAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainPercent() != null ) {
			builder.and(dealerCompanyEntity.mainPercent.eq(vo.getMainPercent())); //java.math.BigDecimal
		}	
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(dealerCompanyEntity.phone.equalsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(dealerCompanyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(dealerCompanyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(dealerCompanyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(dealerCompanyEntity.fax.equalsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(dealerCompanyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getAdditionPercent() != null ) {
			builder.and(dealerCompanyEntity.additionPercent.eq(vo.getAdditionPercent())); //java.math.BigDecimal
		}	
		if ( vo.getCommissionType() != null && !"".equals(vo.getCommissionType())) {
			builder.and(dealerCompanyEntity.commissionType.equalsIgnoreCase(vo.getCommissionType())); //java.lang.String
		}
		if ( vo.getEmail() != null && !"".equals(vo.getEmail())) {
			builder.and(dealerCompanyEntity.email.equalsIgnoreCase(vo.getEmail())); //java.lang.String
		}
		if ( vo.getStatus() != null ) {
			builder.and(dealerCompanyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("DealerCompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(dealerCompanyRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchWithVo(DealerCompanyEntity vo, Pageable pageable) {
		logger.debug("DealerCompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QDealerCompanyEntity dealerCompanyEntity = QDealerCompanyEntity.dealerCompanyEntity;

		if ( vo.getDealerCompanyName() != null && !"".equals(vo.getDealerCompanyName())) {
			builder.and(dealerCompanyEntity.dealerCompanyName.equalsIgnoreCase(vo.getDealerCompanyName())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(dealerCompanyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(dealerCompanyEntity.businessNo.equalsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCollectMoney() != null ) {
			builder.and(dealerCompanyEntity.collectMoney.eq(vo.getCollectMoney())); //java.math.BigDecimal
		}	
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(dealerCompanyEntity.companyAddress.equalsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getMainAmount() != null ) {
			builder.and(dealerCompanyEntity.mainAmount.eq(vo.getMainAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainPercent() != null ) {
			builder.and(dealerCompanyEntity.mainPercent.eq(vo.getMainPercent())); //java.math.BigDecimal
		}	
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(dealerCompanyEntity.phone.equalsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(dealerCompanyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(dealerCompanyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(dealerCompanyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(dealerCompanyEntity.fax.equalsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(dealerCompanyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getAdditionPercent() != null ) {
			builder.and(dealerCompanyEntity.additionPercent.eq(vo.getAdditionPercent())); //java.math.BigDecimal
		}	
		if ( vo.getCommissionType() != null && !"".equals(vo.getCommissionType())) {
			builder.and(dealerCompanyEntity.commissionType.equalsIgnoreCase(vo.getCommissionType())); //java.lang.String
		}
		if ( vo.getEmail() != null && !"".equals(vo.getEmail())) {
			builder.and(dealerCompanyEntity.email.equalsIgnoreCase(vo.getEmail())); //java.lang.String
		}
		if ( vo.getStatus() != null ) {
			builder.and(dealerCompanyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("DealerCompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(dealerCompanyRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchWithVo(DealerCompanyEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchLikeVo(DealerCompanyEntity vo) {
		logger.debug("DealerCompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QDealerCompanyEntity dealerCompanyEntity = QDealerCompanyEntity.dealerCompanyEntity;

		if ( vo.getDealerCompanyName() != null && !"".equals(vo.getDealerCompanyName())) {
			builder.and(dealerCompanyEntity.dealerCompanyName.containsIgnoreCase(vo.getDealerCompanyName())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(dealerCompanyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(dealerCompanyEntity.businessNo.containsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCollectMoney() != null ) {
			builder.and(dealerCompanyEntity.collectMoney.eq(vo.getCollectMoney())); //java.math.BigDecimal
		}	
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(dealerCompanyEntity.companyAddress.containsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getMainAmount() != null ) {
			builder.and(dealerCompanyEntity.mainAmount.eq(vo.getMainAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainPercent() != null ) {
			builder.and(dealerCompanyEntity.mainPercent.eq(vo.getMainPercent())); //java.math.BigDecimal
		}	
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(dealerCompanyEntity.phone.containsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(dealerCompanyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(dealerCompanyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(dealerCompanyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(dealerCompanyEntity.fax.containsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(dealerCompanyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getAdditionPercent() != null ) {
			builder.and(dealerCompanyEntity.additionPercent.eq(vo.getAdditionPercent())); //java.math.BigDecimal
		}	
		if ( vo.getCommissionType() != null && !"".equals(vo.getCommissionType())) {
			builder.and(dealerCompanyEntity.commissionType.containsIgnoreCase(vo.getCommissionType())); //java.lang.String
		}
		if ( vo.getEmail() != null && !"".equals(vo.getEmail())) {
			builder.and(dealerCompanyEntity.email.containsIgnoreCase(vo.getEmail())); //java.lang.String
		}
		if ( vo.getStatus() != null ) {
			builder.and(dealerCompanyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("DealerCompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(dealerCompanyRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchLikeVo(DealerCompanyEntity vo, Pageable pageable) {
		logger.debug("DealerCompanyRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QDealerCompanyEntity dealerCompanyEntity = QDealerCompanyEntity.dealerCompanyEntity;

		if ( vo.getDealerCompanyName() != null && !"".equals(vo.getDealerCompanyName())) {
			builder.and(dealerCompanyEntity.dealerCompanyName.containsIgnoreCase(vo.getDealerCompanyName())); //java.lang.String
		}
		if ( vo.getDealerCompanyId() != null ) {
			builder.and(dealerCompanyEntity.dealerCompanyId.eq(vo.getDealerCompanyId())); //java.lang.Integer
		}	
		if ( vo.getBusinessNo() != null && !"".equals(vo.getBusinessNo())) {
			builder.and(dealerCompanyEntity.businessNo.containsIgnoreCase(vo.getBusinessNo())); //java.lang.String
		}
		if ( vo.getCollectMoney() != null ) {
			builder.and(dealerCompanyEntity.collectMoney.eq(vo.getCollectMoney())); //java.math.BigDecimal
		}	
		if ( vo.getCompanyAddress() != null && !"".equals(vo.getCompanyAddress())) {
			builder.and(dealerCompanyEntity.companyAddress.containsIgnoreCase(vo.getCompanyAddress())); //java.lang.String
		}
		if ( vo.getMainAmount() != null ) {
			builder.and(dealerCompanyEntity.mainAmount.eq(vo.getMainAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainPercent() != null ) {
			builder.and(dealerCompanyEntity.mainPercent.eq(vo.getMainPercent())); //java.math.BigDecimal
		}	
		if ( vo.getPhone() != null && !"".equals(vo.getPhone())) {
			builder.and(dealerCompanyEntity.phone.containsIgnoreCase(vo.getPhone())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(dealerCompanyEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(dealerCompanyEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(dealerCompanyEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getFax() != null && !"".equals(vo.getFax())) {
			builder.and(dealerCompanyEntity.fax.containsIgnoreCase(vo.getFax())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(dealerCompanyEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getAdditionPercent() != null ) {
			builder.and(dealerCompanyEntity.additionPercent.eq(vo.getAdditionPercent())); //java.math.BigDecimal
		}	
		if ( vo.getCommissionType() != null && !"".equals(vo.getCommissionType())) {
			builder.and(dealerCompanyEntity.commissionType.containsIgnoreCase(vo.getCommissionType())); //java.lang.String
		}
		if ( vo.getEmail() != null && !"".equals(vo.getEmail())) {
			builder.and(dealerCompanyEntity.email.containsIgnoreCase(vo.getEmail())); //java.lang.String
		}
		if ( vo.getStatus() != null ) {
			builder.and(dealerCompanyEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		logger.debug("DealerCompanyRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(dealerCompanyRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<DealerCompanyEntity> searchLikeVo(DealerCompanyEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
