/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
import com.gateweb.charge.repository.*; 
import com.gateweb.charge.model.*;    
import com.gateweb.charge.*;

import com.meshinnovation.db.dao.exception.DaoSystemException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.util.Collection;
import javax.persistence.Query;
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;
import java.util.ArrayList;
import javax.persistence.*;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaQuery;
import org.springframework.stereotype.Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of InvoiceMain
 */
//@Repository("invoiceMainRepositoryCustom")
public class InvoiceMainRepositoryImpl implements InvoiceMainRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	InvoiceMainRepository invoiceMainRepository;
	
	public InvoiceMainRepositoryImpl(){

	}
	

	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchWithVo(InvoiceMainEntity vo) {
		log.debug("InvoiceMainRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceMainEntity invoiceMainEntity = QInvoiceMainEntity.invoiceMainEntity;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(invoiceMainEntity.seller.equalsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getTaxAmount() != null ) {
			builder.and(invoiceMainEntity.taxAmount.eq(vo.getTaxAmount())); //java.math.BigDecimal
		}	
		if ( vo.getDiscountAmount() != null ) {
			builder.and(invoiceMainEntity.discountAmount.eq(vo.getDiscountAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainRemark() != null && !"".equals(vo.getMainRemark())) {
			builder.and(invoiceMainEntity.mainRemark.equalsIgnoreCase(vo.getMainRemark())); //java.lang.String
		}
		if ( vo.getBuyerName() != null && !"".equals(vo.getBuyerName())) {
			builder.and(invoiceMainEntity.buyerName.equalsIgnoreCase(vo.getBuyerName())); //java.lang.String
		}
		if ( vo.getOriginalCurrencyAmount() != null ) {
			builder.and(invoiceMainEntity.originalCurrencyAmount.eq(vo.getOriginalCurrencyAmount())); //java.math.BigDecimal
		}	
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceMainEntity.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceMainEntity.relateNumber.equalsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getCarrierId2() != null && !"".equals(vo.getCarrierId2())) {
			builder.and(invoiceMainEntity.carrierId2.equalsIgnoreCase(vo.getCarrierId2())); //java.lang.String
		}
		if ( vo.getCarrierId1() != null && !"".equals(vo.getCarrierId1())) {
			builder.and(invoiceMainEntity.carrierId1.equalsIgnoreCase(vo.getCarrierId1())); //java.lang.String
		}
		if ( vo.getNpoban() != null && !"".equals(vo.getNpoban())) {
			builder.and(invoiceMainEntity.npoban.equalsIgnoreCase(vo.getNpoban())); //java.lang.String
		}
		if ( vo.getBuyerRoleRemark() != null && !"".equals(vo.getBuyerRoleRemark())) {
			builder.and(invoiceMainEntity.buyerRoleRemark.equalsIgnoreCase(vo.getBuyerRoleRemark())); //java.lang.String
		}
		if ( vo.getAllowanceCount() != null ) {
			builder.and(invoiceMainEntity.allowanceCount.eq(vo.getAllowanceCount())); //java.lang.Integer
		}	
		if ( vo.getCheckNumber() != null && !"".equals(vo.getCheckNumber())) {
			builder.and(invoiceMainEntity.checkNumber.equalsIgnoreCase(vo.getCheckNumber())); //java.lang.String
		}
		if ( vo.getCarrierType() != null && !"".equals(vo.getCarrierType())) {
			builder.and(invoiceMainEntity.carrierType.equalsIgnoreCase(vo.getCarrierType())); //java.lang.String
		}
		if ( vo.getSellerName() != null && !"".equals(vo.getSellerName())) {
			builder.and(invoiceMainEntity.sellerName.equalsIgnoreCase(vo.getSellerName())); //java.lang.String
		}
		if ( vo.getFreeTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.freeTaxSalesAmount.eq(vo.getFreeTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPrinterId() != null ) {
			builder.and(invoiceMainEntity.cPrinterId.eq(vo.getcPrinterId())); //java.lang.Integer
		}	
		if ( vo.getInvoiceId() != null ) {
			builder.and(invoiceMainEntity.invoiceId.eq(vo.getInvoiceId())); //java.lang.Long
		}	
		if ( vo.getSellerFacsimileNumber() != null && !"".equals(vo.getSellerFacsimileNumber())) {
			builder.and(invoiceMainEntity.sellerFacsimileNumber.equalsIgnoreCase(vo.getSellerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getDonateMark() != null && !"".equals(vo.getDonateMark())) {
			builder.and(invoiceMainEntity.donateMark.equalsIgnoreCase(vo.getDonateMark())); //java.lang.String
		}
		if ( vo.getcKey() != null && !"".equals(vo.getcKey())) {
			builder.and(invoiceMainEntity.cKey.equalsIgnoreCase(vo.getcKey())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceMainEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceMainEntity.invoiceNumber.equalsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBondedAreaConfirm() != null && !"".equals(vo.getBondedAreaConfirm())) {
			builder.and(invoiceMainEntity.bondedAreaConfirm.equalsIgnoreCase(vo.getBondedAreaConfirm())); //java.lang.String
		}
		if ( vo.getcMemberNumber() != null && !"".equals(vo.getcMemberNumber())) {
			builder.and(invoiceMainEntity.cMemberNumber.equalsIgnoreCase(vo.getcMemberNumber())); //java.lang.String
		}
		if ( vo.getExchangeRate() != null ) {
			builder.and(invoiceMainEntity.exchangeRate.eq(vo.getExchangeRate())); //java.lang.Float
		}	
		if ( vo.getSellerRoleRemark() != null && !"".equals(vo.getSellerRoleRemark())) {
			builder.and(invoiceMainEntity.sellerRoleRemark.equalsIgnoreCase(vo.getSellerRoleRemark())); //java.lang.String
		}
		if ( vo.getBuyerEmailAddress() != null && !"".equals(vo.getBuyerEmailAddress())) {
			builder.and(invoiceMainEntity.buyerEmailAddress.equalsIgnoreCase(vo.getBuyerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintDate() != null ) {
			builder.and(invoiceMainEntity.syncPrintDate.eq(vo.getSyncPrintDate())); //java.sql.Timestamp
		}	
		if ( vo.getcEmail() != null && !"".equals(vo.getcEmail())) {
			builder.and(invoiceMainEntity.cEmail.equalsIgnoreCase(vo.getcEmail())); //java.lang.String
		}
		if ( vo.getcPhoneCode() != null && !"".equals(vo.getcPhoneCode())) {
			builder.and(invoiceMainEntity.cPhoneCode.equalsIgnoreCase(vo.getcPhoneCode())); //java.lang.String
		}
		if ( vo.getSalesAmount() != null ) {
			builder.and(invoiceMainEntity.salesAmount.eq(vo.getSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcYearMonth() != null && !"".equals(vo.getcYearMonth())) {
			builder.and(invoiceMainEntity.cYearMonth.equalsIgnoreCase(vo.getcYearMonth())); //java.lang.String
		}
		if ( vo.getBuyerFacsimileNumber() != null && !"".equals(vo.getBuyerFacsimileNumber())) {
			builder.and(invoiceMainEntity.buyerFacsimileNumber.equalsIgnoreCase(vo.getBuyerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getMigType() != null && !"".equals(vo.getMigType())) {
			builder.and(invoiceMainEntity.migType.equalsIgnoreCase(vo.getMigType())); //java.lang.String
		}
		if ( vo.getSyncCompanyKey() != null && !"".equals(vo.getSyncCompanyKey())) {
			builder.and(invoiceMainEntity.syncCompanyKey.equalsIgnoreCase(vo.getSyncCompanyKey())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceMainEntity.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getBuyerRemark() != null && !"".equals(vo.getBuyerRemark())) {
			builder.and(invoiceMainEntity.buyerRemark.equalsIgnoreCase(vo.getBuyerRemark())); //java.lang.String
		}
		if ( vo.getcPosRemark2() != null && !"".equals(vo.getcPosRemark2())) {
			builder.and(invoiceMainEntity.cPosRemark2.equalsIgnoreCase(vo.getcPosRemark2())); //java.lang.String
		}
		if ( vo.getcPosRemark1() != null && !"".equals(vo.getcPosRemark1())) {
			builder.and(invoiceMainEntity.cPosRemark1.equalsIgnoreCase(vo.getcPosRemark1())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceMainEntity.taxType.equalsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getTotalAmount() != null ) {
			builder.and(invoiceMainEntity.totalAmount.eq(vo.getTotalAmount())); //java.math.BigDecimal
		}	
		if ( vo.getRandomNumber() != null && !"".equals(vo.getRandomNumber())) {
			builder.and(invoiceMainEntity.randomNumber.equalsIgnoreCase(vo.getRandomNumber())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceMainEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getCustomsClearanceMark() != null && !"".equals(vo.getCustomsClearanceMark())) {
			builder.and(invoiceMainEntity.customsClearanceMark.equalsIgnoreCase(vo.getCustomsClearanceMark())); //java.lang.String
		}
		if ( vo.getSellerEmailAddress() != null && !"".equals(vo.getSellerEmailAddress())) {
			builder.and(invoiceMainEntity.sellerEmailAddress.equalsIgnoreCase(vo.getSellerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintMark() != null ) {
			builder.and(invoiceMainEntity.syncPrintMark.eq(vo.getSyncPrintMark())); //java.lang.Boolean
		}	
		if ( vo.getcNaturalPerson() != null && !"".equals(vo.getcNaturalPerson())) {
			builder.and(invoiceMainEntity.cNaturalPerson.equalsIgnoreCase(vo.getcNaturalPerson())); //java.lang.String
		}
		if ( vo.getBuyerPersonInCharge() != null && !"".equals(vo.getBuyerPersonInCharge())) {
			builder.and(invoiceMainEntity.buyerPersonInCharge.equalsIgnoreCase(vo.getBuyerPersonInCharge())); //java.lang.String
		}
		if ( vo.getcPrinterNo() != null && !"".equals(vo.getcPrinterNo())) {
			builder.and(invoiceMainEntity.cPrinterNo.equalsIgnoreCase(vo.getcPrinterNo())); //java.lang.String
		}
		if ( vo.getInvoiceTime() != null && !"".equals(vo.getInvoiceTime())) {
			builder.and(invoiceMainEntity.invoiceTime.equalsIgnoreCase(vo.getInvoiceTime())); //java.lang.String
		}
		if ( vo.getZeroTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.zeroTaxSalesAmount.eq(vo.getZeroTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPosRemark3() != null && !"".equals(vo.getcPosRemark3())) {
			builder.and(invoiceMainEntity.cPosRemark3.equalsIgnoreCase(vo.getcPosRemark3())); //java.lang.String
		}
		if ( vo.getSyncPrintUser() != null ) {
			builder.and(invoiceMainEntity.syncPrintUser.eq(vo.getSyncPrintUser())); //java.lang.Integer
		}	
		if ( vo.getBuyerTelephoneNumber() != null && !"".equals(vo.getBuyerTelephoneNumber())) {
			builder.and(invoiceMainEntity.buyerTelephoneNumber.equalsIgnoreCase(vo.getBuyerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getcPosRemark4() != null && !"".equals(vo.getcPosRemark4())) {
			builder.and(invoiceMainEntity.cPosRemark4.equalsIgnoreCase(vo.getcPosRemark4())); //java.lang.String
		}
		if ( vo.getBuyerCustomerNumber() != null && !"".equals(vo.getBuyerCustomerNumber())) {
			builder.and(invoiceMainEntity.buyerCustomerNumber.equalsIgnoreCase(vo.getBuyerCustomerNumber())); //java.lang.String
		}
		if ( vo.getInvoiceDate() != null && !"".equals(vo.getInvoiceDate())) {
			builder.and(invoiceMainEntity.invoiceDate.equalsIgnoreCase(vo.getInvoiceDate())); //java.lang.String
		}
		if ( vo.getSellerTelephoneNumber() != null && !"".equals(vo.getSellerTelephoneNumber())) {
			builder.and(invoiceMainEntity.sellerTelephoneNumber.equalsIgnoreCase(vo.getSellerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getInvoiceType() != null && !"".equals(vo.getInvoiceType())) {
			builder.and(invoiceMainEntity.invoiceType.equalsIgnoreCase(vo.getInvoiceType())); //java.lang.String
		}
		if ( vo.getCurrency() != null && !"".equals(vo.getCurrency())) {
			builder.and(invoiceMainEntity.currency.equalsIgnoreCase(vo.getCurrency())); //java.lang.String
		}
		if ( vo.getPrintMark() != null && !"".equals(vo.getPrintMark())) {
			builder.and(invoiceMainEntity.printMark.equalsIgnoreCase(vo.getPrintMark())); //java.lang.String
		}
		if ( vo.getSellerPersonInCharge() != null && !"".equals(vo.getSellerPersonInCharge())) {
			builder.and(invoiceMainEntity.sellerPersonInCharge.equalsIgnoreCase(vo.getSellerPersonInCharge())); //java.lang.String
		}
		if ( vo.getGroupMark() != null && !"".equals(vo.getGroupMark())) {
			builder.and(invoiceMainEntity.groupMark.equalsIgnoreCase(vo.getGroupMark())); //java.lang.String
		}
		if ( vo.getBuyerAddress() != null && !"".equals(vo.getBuyerAddress())) {
			builder.and(invoiceMainEntity.buyerAddress.equalsIgnoreCase(vo.getBuyerAddress())); //java.lang.String
		}
		if ( vo.getAssignId() != null ) {
			builder.and(invoiceMainEntity.assignId.eq(vo.getAssignId())); //java.lang.Integer
		}	
		if ( vo.getB2bFlag() != null && !"".equals(vo.getB2bFlag())) {
			builder.and(invoiceMainEntity.b2bFlag.equalsIgnoreCase(vo.getB2bFlag())); //java.lang.String
		}
		if ( vo.getSellerAddress() != null && !"".equals(vo.getSellerAddress())) {
			builder.and(invoiceMainEntity.sellerAddress.equalsIgnoreCase(vo.getSellerAddress())); //java.lang.String
		}
		if ( vo.getConfirmStatus() != null ) {
			builder.and(invoiceMainEntity.confirmStatus.eq(vo.getConfirmStatus())); //java.lang.Integer
		}	
		if ( vo.getcInvoiceStatus() != null ) {
			builder.and(invoiceMainEntity.cInvoiceStatus.eq(vo.getcInvoiceStatus())); //java.lang.Integer
		}	
		if ( vo.getAcceptStatus() != null ) {
			builder.and(invoiceMainEntity.acceptStatus.eq(vo.getAcceptStatus())); //java.lang.Integer
		}	
		if ( vo.getcMemberType() != null && !"".equals(vo.getcMemberType())) {
			builder.and(invoiceMainEntity.cMemberType.equalsIgnoreCase(vo.getcMemberType())); //java.lang.String
		}
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceMainEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCategory() != null && !"".equals(vo.getCategory())) {
			builder.and(invoiceMainEntity.category.equalsIgnoreCase(vo.getCategory())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceMainEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getSellerCustomerNumber() != null && !"".equals(vo.getSellerCustomerNumber())) {
			builder.and(invoiceMainEntity.sellerCustomerNumber.equalsIgnoreCase(vo.getSellerCustomerNumber())); //java.lang.String
		}
		if ( vo.getUploadStatus() != null && !"".equals(vo.getUploadStatus())) {
			builder.and(invoiceMainEntity.uploadStatus.equalsIgnoreCase(vo.getUploadStatus())); //java.lang.String
		}
		log.debug("InvoiceMainRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceMainRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchWithVo(InvoiceMainEntity vo, Pageable pageable) {
		log.debug("InvoiceMainRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceMainEntity invoiceMainEntity = QInvoiceMainEntity.invoiceMainEntity;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(invoiceMainEntity.seller.equalsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getTaxAmount() != null ) {
			builder.and(invoiceMainEntity.taxAmount.eq(vo.getTaxAmount())); //java.math.BigDecimal
		}	
		if ( vo.getDiscountAmount() != null ) {
			builder.and(invoiceMainEntity.discountAmount.eq(vo.getDiscountAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainRemark() != null && !"".equals(vo.getMainRemark())) {
			builder.and(invoiceMainEntity.mainRemark.equalsIgnoreCase(vo.getMainRemark())); //java.lang.String
		}
		if ( vo.getBuyerName() != null && !"".equals(vo.getBuyerName())) {
			builder.and(invoiceMainEntity.buyerName.equalsIgnoreCase(vo.getBuyerName())); //java.lang.String
		}
		if ( vo.getOriginalCurrencyAmount() != null ) {
			builder.and(invoiceMainEntity.originalCurrencyAmount.eq(vo.getOriginalCurrencyAmount())); //java.math.BigDecimal
		}	
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceMainEntity.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceMainEntity.relateNumber.equalsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getCarrierId2() != null && !"".equals(vo.getCarrierId2())) {
			builder.and(invoiceMainEntity.carrierId2.equalsIgnoreCase(vo.getCarrierId2())); //java.lang.String
		}
		if ( vo.getCarrierId1() != null && !"".equals(vo.getCarrierId1())) {
			builder.and(invoiceMainEntity.carrierId1.equalsIgnoreCase(vo.getCarrierId1())); //java.lang.String
		}
		if ( vo.getNpoban() != null && !"".equals(vo.getNpoban())) {
			builder.and(invoiceMainEntity.npoban.equalsIgnoreCase(vo.getNpoban())); //java.lang.String
		}
		if ( vo.getBuyerRoleRemark() != null && !"".equals(vo.getBuyerRoleRemark())) {
			builder.and(invoiceMainEntity.buyerRoleRemark.equalsIgnoreCase(vo.getBuyerRoleRemark())); //java.lang.String
		}
		if ( vo.getAllowanceCount() != null ) {
			builder.and(invoiceMainEntity.allowanceCount.eq(vo.getAllowanceCount())); //java.lang.Integer
		}	
		if ( vo.getCheckNumber() != null && !"".equals(vo.getCheckNumber())) {
			builder.and(invoiceMainEntity.checkNumber.equalsIgnoreCase(vo.getCheckNumber())); //java.lang.String
		}
		if ( vo.getCarrierType() != null && !"".equals(vo.getCarrierType())) {
			builder.and(invoiceMainEntity.carrierType.equalsIgnoreCase(vo.getCarrierType())); //java.lang.String
		}
		if ( vo.getSellerName() != null && !"".equals(vo.getSellerName())) {
			builder.and(invoiceMainEntity.sellerName.equalsIgnoreCase(vo.getSellerName())); //java.lang.String
		}
		if ( vo.getFreeTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.freeTaxSalesAmount.eq(vo.getFreeTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPrinterId() != null ) {
			builder.and(invoiceMainEntity.cPrinterId.eq(vo.getcPrinterId())); //java.lang.Integer
		}	
		if ( vo.getInvoiceId() != null ) {
			builder.and(invoiceMainEntity.invoiceId.eq(vo.getInvoiceId())); //java.lang.Long
		}	
		if ( vo.getSellerFacsimileNumber() != null && !"".equals(vo.getSellerFacsimileNumber())) {
			builder.and(invoiceMainEntity.sellerFacsimileNumber.equalsIgnoreCase(vo.getSellerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getDonateMark() != null && !"".equals(vo.getDonateMark())) {
			builder.and(invoiceMainEntity.donateMark.equalsIgnoreCase(vo.getDonateMark())); //java.lang.String
		}
		if ( vo.getcKey() != null && !"".equals(vo.getcKey())) {
			builder.and(invoiceMainEntity.cKey.equalsIgnoreCase(vo.getcKey())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceMainEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceMainEntity.invoiceNumber.equalsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBondedAreaConfirm() != null && !"".equals(vo.getBondedAreaConfirm())) {
			builder.and(invoiceMainEntity.bondedAreaConfirm.equalsIgnoreCase(vo.getBondedAreaConfirm())); //java.lang.String
		}
		if ( vo.getcMemberNumber() != null && !"".equals(vo.getcMemberNumber())) {
			builder.and(invoiceMainEntity.cMemberNumber.equalsIgnoreCase(vo.getcMemberNumber())); //java.lang.String
		}
		if ( vo.getExchangeRate() != null ) {
			builder.and(invoiceMainEntity.exchangeRate.eq(vo.getExchangeRate())); //java.lang.Float
		}	
		if ( vo.getSellerRoleRemark() != null && !"".equals(vo.getSellerRoleRemark())) {
			builder.and(invoiceMainEntity.sellerRoleRemark.equalsIgnoreCase(vo.getSellerRoleRemark())); //java.lang.String
		}
		if ( vo.getBuyerEmailAddress() != null && !"".equals(vo.getBuyerEmailAddress())) {
			builder.and(invoiceMainEntity.buyerEmailAddress.equalsIgnoreCase(vo.getBuyerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintDate() != null ) {
			builder.and(invoiceMainEntity.syncPrintDate.eq(vo.getSyncPrintDate())); //java.sql.Timestamp
		}	
		if ( vo.getcEmail() != null && !"".equals(vo.getcEmail())) {
			builder.and(invoiceMainEntity.cEmail.equalsIgnoreCase(vo.getcEmail())); //java.lang.String
		}
		if ( vo.getcPhoneCode() != null && !"".equals(vo.getcPhoneCode())) {
			builder.and(invoiceMainEntity.cPhoneCode.equalsIgnoreCase(vo.getcPhoneCode())); //java.lang.String
		}
		if ( vo.getSalesAmount() != null ) {
			builder.and(invoiceMainEntity.salesAmount.eq(vo.getSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcYearMonth() != null && !"".equals(vo.getcYearMonth())) {
			builder.and(invoiceMainEntity.cYearMonth.equalsIgnoreCase(vo.getcYearMonth())); //java.lang.String
		}
		if ( vo.getBuyerFacsimileNumber() != null && !"".equals(vo.getBuyerFacsimileNumber())) {
			builder.and(invoiceMainEntity.buyerFacsimileNumber.equalsIgnoreCase(vo.getBuyerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getMigType() != null && !"".equals(vo.getMigType())) {
			builder.and(invoiceMainEntity.migType.equalsIgnoreCase(vo.getMigType())); //java.lang.String
		}
		if ( vo.getSyncCompanyKey() != null && !"".equals(vo.getSyncCompanyKey())) {
			builder.and(invoiceMainEntity.syncCompanyKey.equalsIgnoreCase(vo.getSyncCompanyKey())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceMainEntity.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getBuyerRemark() != null && !"".equals(vo.getBuyerRemark())) {
			builder.and(invoiceMainEntity.buyerRemark.equalsIgnoreCase(vo.getBuyerRemark())); //java.lang.String
		}
		if ( vo.getcPosRemark2() != null && !"".equals(vo.getcPosRemark2())) {
			builder.and(invoiceMainEntity.cPosRemark2.equalsIgnoreCase(vo.getcPosRemark2())); //java.lang.String
		}
		if ( vo.getcPosRemark1() != null && !"".equals(vo.getcPosRemark1())) {
			builder.and(invoiceMainEntity.cPosRemark1.equalsIgnoreCase(vo.getcPosRemark1())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceMainEntity.taxType.equalsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getTotalAmount() != null ) {
			builder.and(invoiceMainEntity.totalAmount.eq(vo.getTotalAmount())); //java.math.BigDecimal
		}	
		if ( vo.getRandomNumber() != null && !"".equals(vo.getRandomNumber())) {
			builder.and(invoiceMainEntity.randomNumber.equalsIgnoreCase(vo.getRandomNumber())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceMainEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getCustomsClearanceMark() != null && !"".equals(vo.getCustomsClearanceMark())) {
			builder.and(invoiceMainEntity.customsClearanceMark.equalsIgnoreCase(vo.getCustomsClearanceMark())); //java.lang.String
		}
		if ( vo.getSellerEmailAddress() != null && !"".equals(vo.getSellerEmailAddress())) {
			builder.and(invoiceMainEntity.sellerEmailAddress.equalsIgnoreCase(vo.getSellerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintMark() != null ) {
			builder.and(invoiceMainEntity.syncPrintMark.eq(vo.getSyncPrintMark())); //java.lang.Boolean
		}	
		if ( vo.getcNaturalPerson() != null && !"".equals(vo.getcNaturalPerson())) {
			builder.and(invoiceMainEntity.cNaturalPerson.equalsIgnoreCase(vo.getcNaturalPerson())); //java.lang.String
		}
		if ( vo.getBuyerPersonInCharge() != null && !"".equals(vo.getBuyerPersonInCharge())) {
			builder.and(invoiceMainEntity.buyerPersonInCharge.equalsIgnoreCase(vo.getBuyerPersonInCharge())); //java.lang.String
		}
		if ( vo.getcPrinterNo() != null && !"".equals(vo.getcPrinterNo())) {
			builder.and(invoiceMainEntity.cPrinterNo.equalsIgnoreCase(vo.getcPrinterNo())); //java.lang.String
		}
		if ( vo.getInvoiceTime() != null && !"".equals(vo.getInvoiceTime())) {
			builder.and(invoiceMainEntity.invoiceTime.equalsIgnoreCase(vo.getInvoiceTime())); //java.lang.String
		}
		if ( vo.getZeroTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.zeroTaxSalesAmount.eq(vo.getZeroTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPosRemark3() != null && !"".equals(vo.getcPosRemark3())) {
			builder.and(invoiceMainEntity.cPosRemark3.equalsIgnoreCase(vo.getcPosRemark3())); //java.lang.String
		}
		if ( vo.getSyncPrintUser() != null ) {
			builder.and(invoiceMainEntity.syncPrintUser.eq(vo.getSyncPrintUser())); //java.lang.Integer
		}	
		if ( vo.getBuyerTelephoneNumber() != null && !"".equals(vo.getBuyerTelephoneNumber())) {
			builder.and(invoiceMainEntity.buyerTelephoneNumber.equalsIgnoreCase(vo.getBuyerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getcPosRemark4() != null && !"".equals(vo.getcPosRemark4())) {
			builder.and(invoiceMainEntity.cPosRemark4.equalsIgnoreCase(vo.getcPosRemark4())); //java.lang.String
		}
		if ( vo.getBuyerCustomerNumber() != null && !"".equals(vo.getBuyerCustomerNumber())) {
			builder.and(invoiceMainEntity.buyerCustomerNumber.equalsIgnoreCase(vo.getBuyerCustomerNumber())); //java.lang.String
		}
		if ( vo.getInvoiceDate() != null && !"".equals(vo.getInvoiceDate())) {
			builder.and(invoiceMainEntity.invoiceDate.equalsIgnoreCase(vo.getInvoiceDate())); //java.lang.String
		}
		if ( vo.getSellerTelephoneNumber() != null && !"".equals(vo.getSellerTelephoneNumber())) {
			builder.and(invoiceMainEntity.sellerTelephoneNumber.equalsIgnoreCase(vo.getSellerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getInvoiceType() != null && !"".equals(vo.getInvoiceType())) {
			builder.and(invoiceMainEntity.invoiceType.equalsIgnoreCase(vo.getInvoiceType())); //java.lang.String
		}
		if ( vo.getCurrency() != null && !"".equals(vo.getCurrency())) {
			builder.and(invoiceMainEntity.currency.equalsIgnoreCase(vo.getCurrency())); //java.lang.String
		}
		if ( vo.getPrintMark() != null && !"".equals(vo.getPrintMark())) {
			builder.and(invoiceMainEntity.printMark.equalsIgnoreCase(vo.getPrintMark())); //java.lang.String
		}
		if ( vo.getSellerPersonInCharge() != null && !"".equals(vo.getSellerPersonInCharge())) {
			builder.and(invoiceMainEntity.sellerPersonInCharge.equalsIgnoreCase(vo.getSellerPersonInCharge())); //java.lang.String
		}
		if ( vo.getGroupMark() != null && !"".equals(vo.getGroupMark())) {
			builder.and(invoiceMainEntity.groupMark.equalsIgnoreCase(vo.getGroupMark())); //java.lang.String
		}
		if ( vo.getBuyerAddress() != null && !"".equals(vo.getBuyerAddress())) {
			builder.and(invoiceMainEntity.buyerAddress.equalsIgnoreCase(vo.getBuyerAddress())); //java.lang.String
		}
		if ( vo.getAssignId() != null ) {
			builder.and(invoiceMainEntity.assignId.eq(vo.getAssignId())); //java.lang.Integer
		}	
		if ( vo.getB2bFlag() != null && !"".equals(vo.getB2bFlag())) {
			builder.and(invoiceMainEntity.b2bFlag.equalsIgnoreCase(vo.getB2bFlag())); //java.lang.String
		}
		if ( vo.getSellerAddress() != null && !"".equals(vo.getSellerAddress())) {
			builder.and(invoiceMainEntity.sellerAddress.equalsIgnoreCase(vo.getSellerAddress())); //java.lang.String
		}
		if ( vo.getConfirmStatus() != null ) {
			builder.and(invoiceMainEntity.confirmStatus.eq(vo.getConfirmStatus())); //java.lang.Integer
		}	
		if ( vo.getcInvoiceStatus() != null ) {
			builder.and(invoiceMainEntity.cInvoiceStatus.eq(vo.getcInvoiceStatus())); //java.lang.Integer
		}	
		if ( vo.getAcceptStatus() != null ) {
			builder.and(invoiceMainEntity.acceptStatus.eq(vo.getAcceptStatus())); //java.lang.Integer
		}	
		if ( vo.getcMemberType() != null && !"".equals(vo.getcMemberType())) {
			builder.and(invoiceMainEntity.cMemberType.equalsIgnoreCase(vo.getcMemberType())); //java.lang.String
		}
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceMainEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCategory() != null && !"".equals(vo.getCategory())) {
			builder.and(invoiceMainEntity.category.equalsIgnoreCase(vo.getCategory())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceMainEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getSellerCustomerNumber() != null && !"".equals(vo.getSellerCustomerNumber())) {
			builder.and(invoiceMainEntity.sellerCustomerNumber.equalsIgnoreCase(vo.getSellerCustomerNumber())); //java.lang.String
		}
		if ( vo.getUploadStatus() != null && !"".equals(vo.getUploadStatus())) {
			builder.and(invoiceMainEntity.uploadStatus.equalsIgnoreCase(vo.getUploadStatus())); //java.lang.String
		}
		log.debug("InvoiceMainRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceMainRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchWithVo(InvoiceMainEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchLikeVo(InvoiceMainEntity vo) {
		log.debug("InvoiceMainRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceMainEntity invoiceMainEntity = QInvoiceMainEntity.invoiceMainEntity;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(invoiceMainEntity.seller.containsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getTaxAmount() != null ) {
			builder.and(invoiceMainEntity.taxAmount.eq(vo.getTaxAmount())); //java.math.BigDecimal
		}	
		if ( vo.getDiscountAmount() != null ) {
			builder.and(invoiceMainEntity.discountAmount.eq(vo.getDiscountAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainRemark() != null && !"".equals(vo.getMainRemark())) {
			builder.and(invoiceMainEntity.mainRemark.containsIgnoreCase(vo.getMainRemark())); //java.lang.String
		}
		if ( vo.getBuyerName() != null && !"".equals(vo.getBuyerName())) {
			builder.and(invoiceMainEntity.buyerName.containsIgnoreCase(vo.getBuyerName())); //java.lang.String
		}
		if ( vo.getOriginalCurrencyAmount() != null ) {
			builder.and(invoiceMainEntity.originalCurrencyAmount.eq(vo.getOriginalCurrencyAmount())); //java.math.BigDecimal
		}	
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceMainEntity.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceMainEntity.relateNumber.containsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getCarrierId2() != null && !"".equals(vo.getCarrierId2())) {
			builder.and(invoiceMainEntity.carrierId2.containsIgnoreCase(vo.getCarrierId2())); //java.lang.String
		}
		if ( vo.getCarrierId1() != null && !"".equals(vo.getCarrierId1())) {
			builder.and(invoiceMainEntity.carrierId1.containsIgnoreCase(vo.getCarrierId1())); //java.lang.String
		}
		if ( vo.getNpoban() != null && !"".equals(vo.getNpoban())) {
			builder.and(invoiceMainEntity.npoban.containsIgnoreCase(vo.getNpoban())); //java.lang.String
		}
		if ( vo.getBuyerRoleRemark() != null && !"".equals(vo.getBuyerRoleRemark())) {
			builder.and(invoiceMainEntity.buyerRoleRemark.containsIgnoreCase(vo.getBuyerRoleRemark())); //java.lang.String
		}
		if ( vo.getAllowanceCount() != null ) {
			builder.and(invoiceMainEntity.allowanceCount.eq(vo.getAllowanceCount())); //java.lang.Integer
		}	
		if ( vo.getCheckNumber() != null && !"".equals(vo.getCheckNumber())) {
			builder.and(invoiceMainEntity.checkNumber.containsIgnoreCase(vo.getCheckNumber())); //java.lang.String
		}
		if ( vo.getCarrierType() != null && !"".equals(vo.getCarrierType())) {
			builder.and(invoiceMainEntity.carrierType.containsIgnoreCase(vo.getCarrierType())); //java.lang.String
		}
		if ( vo.getSellerName() != null && !"".equals(vo.getSellerName())) {
			builder.and(invoiceMainEntity.sellerName.containsIgnoreCase(vo.getSellerName())); //java.lang.String
		}
		if ( vo.getFreeTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.freeTaxSalesAmount.eq(vo.getFreeTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPrinterId() != null ) {
			builder.and(invoiceMainEntity.cPrinterId.eq(vo.getcPrinterId())); //java.lang.Integer
		}	
		if ( vo.getInvoiceId() != null ) {
			builder.and(invoiceMainEntity.invoiceId.eq(vo.getInvoiceId())); //java.lang.Long
		}	
		if ( vo.getSellerFacsimileNumber() != null && !"".equals(vo.getSellerFacsimileNumber())) {
			builder.and(invoiceMainEntity.sellerFacsimileNumber.containsIgnoreCase(vo.getSellerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getDonateMark() != null && !"".equals(vo.getDonateMark())) {
			builder.and(invoiceMainEntity.donateMark.containsIgnoreCase(vo.getDonateMark())); //java.lang.String
		}
		if ( vo.getcKey() != null && !"".equals(vo.getcKey())) {
			builder.and(invoiceMainEntity.cKey.containsIgnoreCase(vo.getcKey())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceMainEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceMainEntity.invoiceNumber.containsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBondedAreaConfirm() != null && !"".equals(vo.getBondedAreaConfirm())) {
			builder.and(invoiceMainEntity.bondedAreaConfirm.containsIgnoreCase(vo.getBondedAreaConfirm())); //java.lang.String
		}
		if ( vo.getcMemberNumber() != null && !"".equals(vo.getcMemberNumber())) {
			builder.and(invoiceMainEntity.cMemberNumber.containsIgnoreCase(vo.getcMemberNumber())); //java.lang.String
		}
		if ( vo.getExchangeRate() != null ) {
			builder.and(invoiceMainEntity.exchangeRate.eq(vo.getExchangeRate())); //java.lang.Float
		}	
		if ( vo.getSellerRoleRemark() != null && !"".equals(vo.getSellerRoleRemark())) {
			builder.and(invoiceMainEntity.sellerRoleRemark.containsIgnoreCase(vo.getSellerRoleRemark())); //java.lang.String
		}
		if ( vo.getBuyerEmailAddress() != null && !"".equals(vo.getBuyerEmailAddress())) {
			builder.and(invoiceMainEntity.buyerEmailAddress.containsIgnoreCase(vo.getBuyerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintDate() != null ) {
			builder.and(invoiceMainEntity.syncPrintDate.eq(vo.getSyncPrintDate())); //java.sql.Timestamp
		}	
		if ( vo.getcEmail() != null && !"".equals(vo.getcEmail())) {
			builder.and(invoiceMainEntity.cEmail.containsIgnoreCase(vo.getcEmail())); //java.lang.String
		}
		if ( vo.getcPhoneCode() != null && !"".equals(vo.getcPhoneCode())) {
			builder.and(invoiceMainEntity.cPhoneCode.containsIgnoreCase(vo.getcPhoneCode())); //java.lang.String
		}
		if ( vo.getSalesAmount() != null ) {
			builder.and(invoiceMainEntity.salesAmount.eq(vo.getSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcYearMonth() != null && !"".equals(vo.getcYearMonth())) {
			builder.and(invoiceMainEntity.cYearMonth.containsIgnoreCase(vo.getcYearMonth())); //java.lang.String
		}
		if ( vo.getBuyerFacsimileNumber() != null && !"".equals(vo.getBuyerFacsimileNumber())) {
			builder.and(invoiceMainEntity.buyerFacsimileNumber.containsIgnoreCase(vo.getBuyerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getMigType() != null && !"".equals(vo.getMigType())) {
			builder.and(invoiceMainEntity.migType.containsIgnoreCase(vo.getMigType())); //java.lang.String
		}
		if ( vo.getSyncCompanyKey() != null && !"".equals(vo.getSyncCompanyKey())) {
			builder.and(invoiceMainEntity.syncCompanyKey.containsIgnoreCase(vo.getSyncCompanyKey())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceMainEntity.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getBuyerRemark() != null && !"".equals(vo.getBuyerRemark())) {
			builder.and(invoiceMainEntity.buyerRemark.containsIgnoreCase(vo.getBuyerRemark())); //java.lang.String
		}
		if ( vo.getcPosRemark2() != null && !"".equals(vo.getcPosRemark2())) {
			builder.and(invoiceMainEntity.cPosRemark2.containsIgnoreCase(vo.getcPosRemark2())); //java.lang.String
		}
		if ( vo.getcPosRemark1() != null && !"".equals(vo.getcPosRemark1())) {
			builder.and(invoiceMainEntity.cPosRemark1.containsIgnoreCase(vo.getcPosRemark1())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceMainEntity.taxType.containsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getTotalAmount() != null ) {
			builder.and(invoiceMainEntity.totalAmount.eq(vo.getTotalAmount())); //java.math.BigDecimal
		}	
		if ( vo.getRandomNumber() != null && !"".equals(vo.getRandomNumber())) {
			builder.and(invoiceMainEntity.randomNumber.containsIgnoreCase(vo.getRandomNumber())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceMainEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getCustomsClearanceMark() != null && !"".equals(vo.getCustomsClearanceMark())) {
			builder.and(invoiceMainEntity.customsClearanceMark.containsIgnoreCase(vo.getCustomsClearanceMark())); //java.lang.String
		}
		if ( vo.getSellerEmailAddress() != null && !"".equals(vo.getSellerEmailAddress())) {
			builder.and(invoiceMainEntity.sellerEmailAddress.containsIgnoreCase(vo.getSellerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintMark() != null ) {
			builder.and(invoiceMainEntity.syncPrintMark.eq(vo.getSyncPrintMark())); //java.lang.Boolean
		}	
		if ( vo.getcNaturalPerson() != null && !"".equals(vo.getcNaturalPerson())) {
			builder.and(invoiceMainEntity.cNaturalPerson.containsIgnoreCase(vo.getcNaturalPerson())); //java.lang.String
		}
		if ( vo.getBuyerPersonInCharge() != null && !"".equals(vo.getBuyerPersonInCharge())) {
			builder.and(invoiceMainEntity.buyerPersonInCharge.containsIgnoreCase(vo.getBuyerPersonInCharge())); //java.lang.String
		}
		if ( vo.getcPrinterNo() != null && !"".equals(vo.getcPrinterNo())) {
			builder.and(invoiceMainEntity.cPrinterNo.containsIgnoreCase(vo.getcPrinterNo())); //java.lang.String
		}
		if ( vo.getInvoiceTime() != null && !"".equals(vo.getInvoiceTime())) {
			builder.and(invoiceMainEntity.invoiceTime.containsIgnoreCase(vo.getInvoiceTime())); //java.lang.String
		}
		if ( vo.getZeroTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.zeroTaxSalesAmount.eq(vo.getZeroTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPosRemark3() != null && !"".equals(vo.getcPosRemark3())) {
			builder.and(invoiceMainEntity.cPosRemark3.containsIgnoreCase(vo.getcPosRemark3())); //java.lang.String
		}
		if ( vo.getSyncPrintUser() != null ) {
			builder.and(invoiceMainEntity.syncPrintUser.eq(vo.getSyncPrintUser())); //java.lang.Integer
		}	
		if ( vo.getBuyerTelephoneNumber() != null && !"".equals(vo.getBuyerTelephoneNumber())) {
			builder.and(invoiceMainEntity.buyerTelephoneNumber.containsIgnoreCase(vo.getBuyerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getcPosRemark4() != null && !"".equals(vo.getcPosRemark4())) {
			builder.and(invoiceMainEntity.cPosRemark4.containsIgnoreCase(vo.getcPosRemark4())); //java.lang.String
		}
		if ( vo.getBuyerCustomerNumber() != null && !"".equals(vo.getBuyerCustomerNumber())) {
			builder.and(invoiceMainEntity.buyerCustomerNumber.containsIgnoreCase(vo.getBuyerCustomerNumber())); //java.lang.String
		}
		if ( vo.getInvoiceDate() != null && !"".equals(vo.getInvoiceDate())) {
			builder.and(invoiceMainEntity.invoiceDate.containsIgnoreCase(vo.getInvoiceDate())); //java.lang.String
		}
		if ( vo.getSellerTelephoneNumber() != null && !"".equals(vo.getSellerTelephoneNumber())) {
			builder.and(invoiceMainEntity.sellerTelephoneNumber.containsIgnoreCase(vo.getSellerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getInvoiceType() != null && !"".equals(vo.getInvoiceType())) {
			builder.and(invoiceMainEntity.invoiceType.containsIgnoreCase(vo.getInvoiceType())); //java.lang.String
		}
		if ( vo.getCurrency() != null && !"".equals(vo.getCurrency())) {
			builder.and(invoiceMainEntity.currency.containsIgnoreCase(vo.getCurrency())); //java.lang.String
		}
		if ( vo.getPrintMark() != null && !"".equals(vo.getPrintMark())) {
			builder.and(invoiceMainEntity.printMark.containsIgnoreCase(vo.getPrintMark())); //java.lang.String
		}
		if ( vo.getSellerPersonInCharge() != null && !"".equals(vo.getSellerPersonInCharge())) {
			builder.and(invoiceMainEntity.sellerPersonInCharge.containsIgnoreCase(vo.getSellerPersonInCharge())); //java.lang.String
		}
		if ( vo.getGroupMark() != null && !"".equals(vo.getGroupMark())) {
			builder.and(invoiceMainEntity.groupMark.containsIgnoreCase(vo.getGroupMark())); //java.lang.String
		}
		if ( vo.getBuyerAddress() != null && !"".equals(vo.getBuyerAddress())) {
			builder.and(invoiceMainEntity.buyerAddress.containsIgnoreCase(vo.getBuyerAddress())); //java.lang.String
		}
		if ( vo.getAssignId() != null ) {
			builder.and(invoiceMainEntity.assignId.eq(vo.getAssignId())); //java.lang.Integer
		}	
		if ( vo.getB2bFlag() != null && !"".equals(vo.getB2bFlag())) {
			builder.and(invoiceMainEntity.b2bFlag.containsIgnoreCase(vo.getB2bFlag())); //java.lang.String
		}
		if ( vo.getSellerAddress() != null && !"".equals(vo.getSellerAddress())) {
			builder.and(invoiceMainEntity.sellerAddress.containsIgnoreCase(vo.getSellerAddress())); //java.lang.String
		}
		if ( vo.getConfirmStatus() != null ) {
			builder.and(invoiceMainEntity.confirmStatus.eq(vo.getConfirmStatus())); //java.lang.Integer
		}	
		if ( vo.getcInvoiceStatus() != null ) {
			builder.and(invoiceMainEntity.cInvoiceStatus.eq(vo.getcInvoiceStatus())); //java.lang.Integer
		}	
		if ( vo.getAcceptStatus() != null ) {
			builder.and(invoiceMainEntity.acceptStatus.eq(vo.getAcceptStatus())); //java.lang.Integer
		}	
		if ( vo.getcMemberType() != null && !"".equals(vo.getcMemberType())) {
			builder.and(invoiceMainEntity.cMemberType.containsIgnoreCase(vo.getcMemberType())); //java.lang.String
		}
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceMainEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCategory() != null && !"".equals(vo.getCategory())) {
			builder.and(invoiceMainEntity.category.containsIgnoreCase(vo.getCategory())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceMainEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getSellerCustomerNumber() != null && !"".equals(vo.getSellerCustomerNumber())) {
			builder.and(invoiceMainEntity.sellerCustomerNumber.containsIgnoreCase(vo.getSellerCustomerNumber())); //java.lang.String
		}
		if ( vo.getUploadStatus() != null && !"".equals(vo.getUploadStatus())) {
			builder.and(invoiceMainEntity.uploadStatus.containsIgnoreCase(vo.getUploadStatus())); //java.lang.String
		}
		log.debug("InvoiceMainRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceMainRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchLikeVo(InvoiceMainEntity vo, Pageable pageable) {
		log.debug("InvoiceMainRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceMainEntity invoiceMainEntity = QInvoiceMainEntity.invoiceMainEntity;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(invoiceMainEntity.seller.containsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getTaxAmount() != null ) {
			builder.and(invoiceMainEntity.taxAmount.eq(vo.getTaxAmount())); //java.math.BigDecimal
		}	
		if ( vo.getDiscountAmount() != null ) {
			builder.and(invoiceMainEntity.discountAmount.eq(vo.getDiscountAmount())); //java.math.BigDecimal
		}	
		if ( vo.getMainRemark() != null && !"".equals(vo.getMainRemark())) {
			builder.and(invoiceMainEntity.mainRemark.containsIgnoreCase(vo.getMainRemark())); //java.lang.String
		}
		if ( vo.getBuyerName() != null && !"".equals(vo.getBuyerName())) {
			builder.and(invoiceMainEntity.buyerName.containsIgnoreCase(vo.getBuyerName())); //java.lang.String
		}
		if ( vo.getOriginalCurrencyAmount() != null ) {
			builder.and(invoiceMainEntity.originalCurrencyAmount.eq(vo.getOriginalCurrencyAmount())); //java.math.BigDecimal
		}	
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceMainEntity.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceMainEntity.relateNumber.containsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getCarrierId2() != null && !"".equals(vo.getCarrierId2())) {
			builder.and(invoiceMainEntity.carrierId2.containsIgnoreCase(vo.getCarrierId2())); //java.lang.String
		}
		if ( vo.getCarrierId1() != null && !"".equals(vo.getCarrierId1())) {
			builder.and(invoiceMainEntity.carrierId1.containsIgnoreCase(vo.getCarrierId1())); //java.lang.String
		}
		if ( vo.getNpoban() != null && !"".equals(vo.getNpoban())) {
			builder.and(invoiceMainEntity.npoban.containsIgnoreCase(vo.getNpoban())); //java.lang.String
		}
		if ( vo.getBuyerRoleRemark() != null && !"".equals(vo.getBuyerRoleRemark())) {
			builder.and(invoiceMainEntity.buyerRoleRemark.containsIgnoreCase(vo.getBuyerRoleRemark())); //java.lang.String
		}
		if ( vo.getAllowanceCount() != null ) {
			builder.and(invoiceMainEntity.allowanceCount.eq(vo.getAllowanceCount())); //java.lang.Integer
		}	
		if ( vo.getCheckNumber() != null && !"".equals(vo.getCheckNumber())) {
			builder.and(invoiceMainEntity.checkNumber.containsIgnoreCase(vo.getCheckNumber())); //java.lang.String
		}
		if ( vo.getCarrierType() != null && !"".equals(vo.getCarrierType())) {
			builder.and(invoiceMainEntity.carrierType.containsIgnoreCase(vo.getCarrierType())); //java.lang.String
		}
		if ( vo.getSellerName() != null && !"".equals(vo.getSellerName())) {
			builder.and(invoiceMainEntity.sellerName.containsIgnoreCase(vo.getSellerName())); //java.lang.String
		}
		if ( vo.getFreeTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.freeTaxSalesAmount.eq(vo.getFreeTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPrinterId() != null ) {
			builder.and(invoiceMainEntity.cPrinterId.eq(vo.getcPrinterId())); //java.lang.Integer
		}	
		if ( vo.getInvoiceId() != null ) {
			builder.and(invoiceMainEntity.invoiceId.eq(vo.getInvoiceId())); //java.lang.Long
		}	
		if ( vo.getSellerFacsimileNumber() != null && !"".equals(vo.getSellerFacsimileNumber())) {
			builder.and(invoiceMainEntity.sellerFacsimileNumber.containsIgnoreCase(vo.getSellerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getDonateMark() != null && !"".equals(vo.getDonateMark())) {
			builder.and(invoiceMainEntity.donateMark.containsIgnoreCase(vo.getDonateMark())); //java.lang.String
		}
		if ( vo.getcKey() != null && !"".equals(vo.getcKey())) {
			builder.and(invoiceMainEntity.cKey.containsIgnoreCase(vo.getcKey())); //java.lang.String
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceMainEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceMainEntity.invoiceNumber.containsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBondedAreaConfirm() != null && !"".equals(vo.getBondedAreaConfirm())) {
			builder.and(invoiceMainEntity.bondedAreaConfirm.containsIgnoreCase(vo.getBondedAreaConfirm())); //java.lang.String
		}
		if ( vo.getcMemberNumber() != null && !"".equals(vo.getcMemberNumber())) {
			builder.and(invoiceMainEntity.cMemberNumber.containsIgnoreCase(vo.getcMemberNumber())); //java.lang.String
		}
		if ( vo.getExchangeRate() != null ) {
			builder.and(invoiceMainEntity.exchangeRate.eq(vo.getExchangeRate())); //java.lang.Float
		}	
		if ( vo.getSellerRoleRemark() != null && !"".equals(vo.getSellerRoleRemark())) {
			builder.and(invoiceMainEntity.sellerRoleRemark.containsIgnoreCase(vo.getSellerRoleRemark())); //java.lang.String
		}
		if ( vo.getBuyerEmailAddress() != null && !"".equals(vo.getBuyerEmailAddress())) {
			builder.and(invoiceMainEntity.buyerEmailAddress.containsIgnoreCase(vo.getBuyerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintDate() != null ) {
			builder.and(invoiceMainEntity.syncPrintDate.eq(vo.getSyncPrintDate())); //java.sql.Timestamp
		}	
		if ( vo.getcEmail() != null && !"".equals(vo.getcEmail())) {
			builder.and(invoiceMainEntity.cEmail.containsIgnoreCase(vo.getcEmail())); //java.lang.String
		}
		if ( vo.getcPhoneCode() != null && !"".equals(vo.getcPhoneCode())) {
			builder.and(invoiceMainEntity.cPhoneCode.containsIgnoreCase(vo.getcPhoneCode())); //java.lang.String
		}
		if ( vo.getSalesAmount() != null ) {
			builder.and(invoiceMainEntity.salesAmount.eq(vo.getSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcYearMonth() != null && !"".equals(vo.getcYearMonth())) {
			builder.and(invoiceMainEntity.cYearMonth.containsIgnoreCase(vo.getcYearMonth())); //java.lang.String
		}
		if ( vo.getBuyerFacsimileNumber() != null && !"".equals(vo.getBuyerFacsimileNumber())) {
			builder.and(invoiceMainEntity.buyerFacsimileNumber.containsIgnoreCase(vo.getBuyerFacsimileNumber())); //java.lang.String
		}
		if ( vo.getMigType() != null && !"".equals(vo.getMigType())) {
			builder.and(invoiceMainEntity.migType.containsIgnoreCase(vo.getMigType())); //java.lang.String
		}
		if ( vo.getSyncCompanyKey() != null && !"".equals(vo.getSyncCompanyKey())) {
			builder.and(invoiceMainEntity.syncCompanyKey.containsIgnoreCase(vo.getSyncCompanyKey())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceMainEntity.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getBuyerRemark() != null && !"".equals(vo.getBuyerRemark())) {
			builder.and(invoiceMainEntity.buyerRemark.containsIgnoreCase(vo.getBuyerRemark())); //java.lang.String
		}
		if ( vo.getcPosRemark2() != null && !"".equals(vo.getcPosRemark2())) {
			builder.and(invoiceMainEntity.cPosRemark2.containsIgnoreCase(vo.getcPosRemark2())); //java.lang.String
		}
		if ( vo.getcPosRemark1() != null && !"".equals(vo.getcPosRemark1())) {
			builder.and(invoiceMainEntity.cPosRemark1.containsIgnoreCase(vo.getcPosRemark1())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceMainEntity.taxType.containsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getTotalAmount() != null ) {
			builder.and(invoiceMainEntity.totalAmount.eq(vo.getTotalAmount())); //java.math.BigDecimal
		}	
		if ( vo.getRandomNumber() != null && !"".equals(vo.getRandomNumber())) {
			builder.and(invoiceMainEntity.randomNumber.containsIgnoreCase(vo.getRandomNumber())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceMainEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getCustomsClearanceMark() != null && !"".equals(vo.getCustomsClearanceMark())) {
			builder.and(invoiceMainEntity.customsClearanceMark.containsIgnoreCase(vo.getCustomsClearanceMark())); //java.lang.String
		}
		if ( vo.getSellerEmailAddress() != null && !"".equals(vo.getSellerEmailAddress())) {
			builder.and(invoiceMainEntity.sellerEmailAddress.containsIgnoreCase(vo.getSellerEmailAddress())); //java.lang.String
		}
		if ( vo.getSyncPrintMark() != null ) {
			builder.and(invoiceMainEntity.syncPrintMark.eq(vo.getSyncPrintMark())); //java.lang.Boolean
		}	
		if ( vo.getcNaturalPerson() != null && !"".equals(vo.getcNaturalPerson())) {
			builder.and(invoiceMainEntity.cNaturalPerson.containsIgnoreCase(vo.getcNaturalPerson())); //java.lang.String
		}
		if ( vo.getBuyerPersonInCharge() != null && !"".equals(vo.getBuyerPersonInCharge())) {
			builder.and(invoiceMainEntity.buyerPersonInCharge.containsIgnoreCase(vo.getBuyerPersonInCharge())); //java.lang.String
		}
		if ( vo.getcPrinterNo() != null && !"".equals(vo.getcPrinterNo())) {
			builder.and(invoiceMainEntity.cPrinterNo.containsIgnoreCase(vo.getcPrinterNo())); //java.lang.String
		}
		if ( vo.getInvoiceTime() != null && !"".equals(vo.getInvoiceTime())) {
			builder.and(invoiceMainEntity.invoiceTime.containsIgnoreCase(vo.getInvoiceTime())); //java.lang.String
		}
		if ( vo.getZeroTaxSalesAmount() != null ) {
			builder.and(invoiceMainEntity.zeroTaxSalesAmount.eq(vo.getZeroTaxSalesAmount())); //java.math.BigDecimal
		}	
		if ( vo.getcPosRemark3() != null && !"".equals(vo.getcPosRemark3())) {
			builder.and(invoiceMainEntity.cPosRemark3.containsIgnoreCase(vo.getcPosRemark3())); //java.lang.String
		}
		if ( vo.getSyncPrintUser() != null ) {
			builder.and(invoiceMainEntity.syncPrintUser.eq(vo.getSyncPrintUser())); //java.lang.Integer
		}	
		if ( vo.getBuyerTelephoneNumber() != null && !"".equals(vo.getBuyerTelephoneNumber())) {
			builder.and(invoiceMainEntity.buyerTelephoneNumber.containsIgnoreCase(vo.getBuyerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getcPosRemark4() != null && !"".equals(vo.getcPosRemark4())) {
			builder.and(invoiceMainEntity.cPosRemark4.containsIgnoreCase(vo.getcPosRemark4())); //java.lang.String
		}
		if ( vo.getBuyerCustomerNumber() != null && !"".equals(vo.getBuyerCustomerNumber())) {
			builder.and(invoiceMainEntity.buyerCustomerNumber.containsIgnoreCase(vo.getBuyerCustomerNumber())); //java.lang.String
		}
		if ( vo.getInvoiceDate() != null && !"".equals(vo.getInvoiceDate())) {
			builder.and(invoiceMainEntity.invoiceDate.containsIgnoreCase(vo.getInvoiceDate())); //java.lang.String
		}
		if ( vo.getSellerTelephoneNumber() != null && !"".equals(vo.getSellerTelephoneNumber())) {
			builder.and(invoiceMainEntity.sellerTelephoneNumber.containsIgnoreCase(vo.getSellerTelephoneNumber())); //java.lang.String
		}
		if ( vo.getInvoiceType() != null && !"".equals(vo.getInvoiceType())) {
			builder.and(invoiceMainEntity.invoiceType.containsIgnoreCase(vo.getInvoiceType())); //java.lang.String
		}
		if ( vo.getCurrency() != null && !"".equals(vo.getCurrency())) {
			builder.and(invoiceMainEntity.currency.containsIgnoreCase(vo.getCurrency())); //java.lang.String
		}
		if ( vo.getPrintMark() != null && !"".equals(vo.getPrintMark())) {
			builder.and(invoiceMainEntity.printMark.containsIgnoreCase(vo.getPrintMark())); //java.lang.String
		}
		if ( vo.getSellerPersonInCharge() != null && !"".equals(vo.getSellerPersonInCharge())) {
			builder.and(invoiceMainEntity.sellerPersonInCharge.containsIgnoreCase(vo.getSellerPersonInCharge())); //java.lang.String
		}
		if ( vo.getGroupMark() != null && !"".equals(vo.getGroupMark())) {
			builder.and(invoiceMainEntity.groupMark.containsIgnoreCase(vo.getGroupMark())); //java.lang.String
		}
		if ( vo.getBuyerAddress() != null && !"".equals(vo.getBuyerAddress())) {
			builder.and(invoiceMainEntity.buyerAddress.containsIgnoreCase(vo.getBuyerAddress())); //java.lang.String
		}
		if ( vo.getAssignId() != null ) {
			builder.and(invoiceMainEntity.assignId.eq(vo.getAssignId())); //java.lang.Integer
		}	
		if ( vo.getB2bFlag() != null && !"".equals(vo.getB2bFlag())) {
			builder.and(invoiceMainEntity.b2bFlag.containsIgnoreCase(vo.getB2bFlag())); //java.lang.String
		}
		if ( vo.getSellerAddress() != null && !"".equals(vo.getSellerAddress())) {
			builder.and(invoiceMainEntity.sellerAddress.containsIgnoreCase(vo.getSellerAddress())); //java.lang.String
		}
		if ( vo.getConfirmStatus() != null ) {
			builder.and(invoiceMainEntity.confirmStatus.eq(vo.getConfirmStatus())); //java.lang.Integer
		}	
		if ( vo.getcInvoiceStatus() != null ) {
			builder.and(invoiceMainEntity.cInvoiceStatus.eq(vo.getcInvoiceStatus())); //java.lang.Integer
		}	
		if ( vo.getAcceptStatus() != null ) {
			builder.and(invoiceMainEntity.acceptStatus.eq(vo.getAcceptStatus())); //java.lang.Integer
		}	
		if ( vo.getcMemberType() != null && !"".equals(vo.getcMemberType())) {
			builder.and(invoiceMainEntity.cMemberType.containsIgnoreCase(vo.getcMemberType())); //java.lang.String
		}
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceMainEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getCategory() != null && !"".equals(vo.getCategory())) {
			builder.and(invoiceMainEntity.category.containsIgnoreCase(vo.getCategory())); //java.lang.String
		}
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceMainEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getSellerCustomerNumber() != null && !"".equals(vo.getSellerCustomerNumber())) {
			builder.and(invoiceMainEntity.sellerCustomerNumber.containsIgnoreCase(vo.getSellerCustomerNumber())); //java.lang.String
		}
		if ( vo.getUploadStatus() != null && !"".equals(vo.getUploadStatus())) {
			builder.and(invoiceMainEntity.uploadStatus.containsIgnoreCase(vo.getUploadStatus())); //java.lang.String
		}
		log.debug("InvoiceMainRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceMainRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<InvoiceMainEntity> searchLikeVo(InvoiceMainEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
