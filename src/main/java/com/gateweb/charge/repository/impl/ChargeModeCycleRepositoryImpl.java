/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
import com.gateweb.charge.repository.*; 
import com.gateweb.charge.model.*;    
import com.gateweb.charge.*;

import com.meshinnovation.db.dao.exception.DaoSystemException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.util.Collection;
import javax.persistence.Query;
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;
import java.util.ArrayList;
import javax.persistence.*;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaQuery;
import org.springframework.stereotype.Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of ChargeModeCycle
 */
//@Repository("chargeModeCycleRepositoryCustom")
public class ChargeModeCycleRepositoryImpl implements ChargeModeCycleRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	ChargeModeCycleRepository chargeModeCycleRepository;
	
	public ChargeModeCycleRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchWithVo(ChargeModeCycleEntity vo) {
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleEntity chargeModeCycleEntity = QChargeModeCycleEntity.chargeModeCycleEntity;

		if ( vo.getBaseQuantity() != null ) {
			builder.and(chargeModeCycleEntity.baseQuantity.eq(vo.getBaseQuantity())); //java.lang.Integer
		}	
		if ( vo.getChargeCycle() != null ) {
			builder.and(chargeModeCycleEntity.chargeCycle.eq(vo.getChargeCycle())); //java.lang.Integer
		}	
		if ( vo.getPrePayment() != null ) {
			builder.and(chargeModeCycleEntity.prePayment.eq(vo.getPrePayment())); //java.lang.Integer
		}	
		if ( vo.getFreeQuantity() != null ) {
			builder.and(chargeModeCycleEntity.freeQuantity.eq(vo.getFreeQuantity())); //java.lang.Integer
		}	
		if ( vo.getSinglePrice() != null ) {
			builder.and(chargeModeCycleEntity.singlePrice.eq(vo.getSinglePrice())); //java.math.BigDecimal
		}	
		if ( vo.getMaxPrice() != null ) {
			builder.and(chargeModeCycleEntity.maxPrice.eq(vo.getMaxPrice())); //java.lang.Integer
		}	
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getChargeId() != null ) {
			builder.and(chargeModeCycleEntity.chargeId.eq(vo.getChargeId())); //java.lang.Integer
		}	
		if ( vo.getFeePeriod() != null ) {
			builder.and(chargeModeCycleEntity.feePeriod.eq(vo.getFeePeriod())); //java.lang.Integer
		}	
		if ( vo.getPackageName() != null && !"".equals(vo.getPackageName())) {
			builder.and(chargeModeCycleEntity.packageName.equalsIgnoreCase(vo.getPackageName())); //java.lang.String
		}
		if ( vo.getSalesPrice() != null ) {
			builder.and(chargeModeCycleEntity.salesPrice.eq(vo.getSalesPrice())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getContractLimit() != null ) {
			builder.and(chargeModeCycleEntity.contractLimit.eq(vo.getContractLimit())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getPrepaidAdditionEnable() != null ) {
			builder.and(chargeModeCycleEntity.prepaidAdditionEnable.eq(vo.getPrepaidAdditionEnable())); //java.lang.Integer
		}	
		if ( vo.getStatus() != null ) {
			builder.and(chargeModeCycleEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchWithVo(ChargeModeCycleEntity vo, Pageable pageable) {
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleEntity chargeModeCycleEntity = QChargeModeCycleEntity.chargeModeCycleEntity;

		if ( vo.getBaseQuantity() != null ) {
			builder.and(chargeModeCycleEntity.baseQuantity.eq(vo.getBaseQuantity())); //java.lang.Integer
		}	
		if ( vo.getChargeCycle() != null ) {
			builder.and(chargeModeCycleEntity.chargeCycle.eq(vo.getChargeCycle())); //java.lang.Integer
		}	
		if ( vo.getPrePayment() != null ) {
			builder.and(chargeModeCycleEntity.prePayment.eq(vo.getPrePayment())); //java.lang.Integer
		}	
		if ( vo.getFreeQuantity() != null ) {
			builder.and(chargeModeCycleEntity.freeQuantity.eq(vo.getFreeQuantity())); //java.lang.Integer
		}	
		if ( vo.getSinglePrice() != null ) {
			builder.and(chargeModeCycleEntity.singlePrice.eq(vo.getSinglePrice())); //java.math.BigDecimal
		}	
		if ( vo.getMaxPrice() != null ) {
			builder.and(chargeModeCycleEntity.maxPrice.eq(vo.getMaxPrice())); //java.lang.Integer
		}	
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getChargeId() != null ) {
			builder.and(chargeModeCycleEntity.chargeId.eq(vo.getChargeId())); //java.lang.Integer
		}	
		if ( vo.getFeePeriod() != null ) {
			builder.and(chargeModeCycleEntity.feePeriod.eq(vo.getFeePeriod())); //java.lang.Integer
		}	
		if ( vo.getPackageName() != null && !"".equals(vo.getPackageName())) {
			builder.and(chargeModeCycleEntity.packageName.equalsIgnoreCase(vo.getPackageName())); //java.lang.String
		}
		if ( vo.getSalesPrice() != null ) {
			builder.and(chargeModeCycleEntity.salesPrice.eq(vo.getSalesPrice())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getContractLimit() != null ) {
			builder.and(chargeModeCycleEntity.contractLimit.eq(vo.getContractLimit())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getPrepaidAdditionEnable() != null ) {
			builder.and(chargeModeCycleEntity.prepaidAdditionEnable.eq(vo.getPrepaidAdditionEnable())); //java.lang.Integer
		}	
		if ( vo.getStatus() != null ) {
			builder.and(chargeModeCycleEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchWithVo(ChargeModeCycleEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchLikeVo(ChargeModeCycleEntity vo) {
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleEntity chargeModeCycleEntity = QChargeModeCycleEntity.chargeModeCycleEntity;

		if ( vo.getBaseQuantity() != null ) {
			builder.and(chargeModeCycleEntity.baseQuantity.eq(vo.getBaseQuantity())); //java.lang.Integer
		}	
		if ( vo.getChargeCycle() != null ) {
			builder.and(chargeModeCycleEntity.chargeCycle.eq(vo.getChargeCycle())); //java.lang.Integer
		}	
		if ( vo.getPrePayment() != null ) {
			builder.and(chargeModeCycleEntity.prePayment.eq(vo.getPrePayment())); //java.lang.Integer
		}	
		if ( vo.getFreeQuantity() != null ) {
			builder.and(chargeModeCycleEntity.freeQuantity.eq(vo.getFreeQuantity())); //java.lang.Integer
		}	
		if ( vo.getSinglePrice() != null ) {
			builder.and(chargeModeCycleEntity.singlePrice.eq(vo.getSinglePrice())); //java.math.BigDecimal
		}	
		if ( vo.getMaxPrice() != null ) {
			builder.and(chargeModeCycleEntity.maxPrice.eq(vo.getMaxPrice())); //java.lang.Integer
		}	
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getChargeId() != null ) {
			builder.and(chargeModeCycleEntity.chargeId.eq(vo.getChargeId())); //java.lang.Integer
		}	
		if ( vo.getFeePeriod() != null ) {
			builder.and(chargeModeCycleEntity.feePeriod.eq(vo.getFeePeriod())); //java.lang.Integer
		}	
		if ( vo.getPackageName() != null && !"".equals(vo.getPackageName())) {
			builder.and(chargeModeCycleEntity.packageName.containsIgnoreCase(vo.getPackageName())); //java.lang.String
		}
		if ( vo.getSalesPrice() != null ) {
			builder.and(chargeModeCycleEntity.salesPrice.eq(vo.getSalesPrice())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getContractLimit() != null ) {
			builder.and(chargeModeCycleEntity.contractLimit.eq(vo.getContractLimit())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getPrepaidAdditionEnable() != null ) {
			builder.and(chargeModeCycleEntity.prepaidAdditionEnable.eq(vo.getPrepaidAdditionEnable())); //java.lang.Integer
		}	
		if ( vo.getStatus() != null ) {
			builder.and(chargeModeCycleEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchLikeVo(ChargeModeCycleEntity vo, Pageable pageable) {
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleEntity chargeModeCycleEntity = QChargeModeCycleEntity.chargeModeCycleEntity;

		if ( vo.getBaseQuantity() != null ) {
			builder.and(chargeModeCycleEntity.baseQuantity.eq(vo.getBaseQuantity())); //java.lang.Integer
		}	
		if ( vo.getChargeCycle() != null ) {
			builder.and(chargeModeCycleEntity.chargeCycle.eq(vo.getChargeCycle())); //java.lang.Integer
		}	
		if ( vo.getPrePayment() != null ) {
			builder.and(chargeModeCycleEntity.prePayment.eq(vo.getPrePayment())); //java.lang.Integer
		}	
		if ( vo.getFreeQuantity() != null ) {
			builder.and(chargeModeCycleEntity.freeQuantity.eq(vo.getFreeQuantity())); //java.lang.Integer
		}	
		if ( vo.getSinglePrice() != null ) {
			builder.and(chargeModeCycleEntity.singlePrice.eq(vo.getSinglePrice())); //java.math.BigDecimal
		}	
		if ( vo.getMaxPrice() != null ) {
			builder.and(chargeModeCycleEntity.maxPrice.eq(vo.getMaxPrice())); //java.lang.Integer
		}	
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getChargeId() != null ) {
			builder.and(chargeModeCycleEntity.chargeId.eq(vo.getChargeId())); //java.lang.Integer
		}	
		if ( vo.getFeePeriod() != null ) {
			builder.and(chargeModeCycleEntity.feePeriod.eq(vo.getFeePeriod())); //java.lang.Integer
		}	
		if ( vo.getPackageName() != null && !"".equals(vo.getPackageName())) {
			builder.and(chargeModeCycleEntity.packageName.containsIgnoreCase(vo.getPackageName())); //java.lang.String
		}
		if ( vo.getSalesPrice() != null ) {
			builder.and(chargeModeCycleEntity.salesPrice.eq(vo.getSalesPrice())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getContractLimit() != null ) {
			builder.and(chargeModeCycleEntity.contractLimit.eq(vo.getContractLimit())); //java.lang.Integer
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getPrepaidAdditionEnable() != null ) {
			builder.and(chargeModeCycleEntity.prepaidAdditionEnable.eq(vo.getPrepaidAdditionEnable())); //java.lang.Integer
		}	
		if ( vo.getStatus() != null ) {
			builder.and(chargeModeCycleEntity.status.eq(vo.getStatus())); //java.lang.Integer
		}	
		log.debug("ChargeModeCycleRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleEntity> searchLikeVo(ChargeModeCycleEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
