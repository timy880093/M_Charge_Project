/*
 * $Header: $
 * This java source file is generated by pkliu on Tue Jan 30 14:38:14 CST 2018
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.charge.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.charge.model.ChargeModeCycleAddEntity;
import com.gateweb.charge.model.QChargeModeCycleAddEntity;
import com.gateweb.charge.repository.ChargeModeCycleAddRepository;
import com.gateweb.charge.repository.ChargeModeCycleAddRepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of ChargeModeCycleAdd
 */
//@Repository("chargeModeCycleAddRepositoryCustom")
public class ChargeModeCycleAddRepositoryImpl implements ChargeModeCycleAddRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	ChargeModeCycleAddRepository chargeModeCycleAddRepository;
	
	public ChargeModeCycleAddRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchWithVo(ChargeModeCycleAddEntity vo) {
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleAddEntity chargeModeCycleAddEntity = QChargeModeCycleAddEntity.chargeModeCycleAddEntity;

		if ( vo.getAdditionId() != null ) {
			builder.and(chargeModeCycleAddEntity.additionId.eq(vo.getAdditionId())); //java.lang.Integer
		}	
		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(chargeModeCycleAddEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getRealStartDate() != null && !"".equals(vo.getRealStartDate())) {
			builder.and(chargeModeCycleAddEntity.realStartDate.eq(vo.getRealStartDate())); //java.util.Date
		}
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleAddEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getAdditionQuantity() != null ) {
			builder.and(chargeModeCycleAddEntity.additionQuantity.eq(vo.getAdditionQuantity())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleAddEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleAddEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getRealEndDate() != null && !"".equals(vo.getRealEndDate())) {
			builder.and(chargeModeCycleAddEntity.realEndDate.eq(vo.getRealEndDate())); //java.util.Date
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleAddEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleAddEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getGiftPrice() != null ) {
			builder.and(chargeModeCycleAddEntity.giftPrice.eq(vo.getGiftPrice())); //java.math.BigDecimal
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(chargeModeCycleAddEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleAddRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchWithVo(ChargeModeCycleAddEntity vo, Pageable pageable) {
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleAddEntity chargeModeCycleAddEntity = QChargeModeCycleAddEntity.chargeModeCycleAddEntity;

		if ( vo.getAdditionId() != null ) {
			builder.and(chargeModeCycleAddEntity.additionId.eq(vo.getAdditionId())); //java.lang.Integer
		}	
		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(chargeModeCycleAddEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getRealStartDate() != null && !"".equals(vo.getRealStartDate())) {
			builder.and(chargeModeCycleAddEntity.realStartDate.eq(vo.getRealStartDate())); //java.util.Date
		}
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleAddEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getAdditionQuantity() != null ) {
			builder.and(chargeModeCycleAddEntity.additionQuantity.eq(vo.getAdditionQuantity())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleAddEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleAddEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getRealEndDate() != null && !"".equals(vo.getRealEndDate())) {
			builder.and(chargeModeCycleAddEntity.realEndDate.eq(vo.getRealEndDate())); //java.util.Date
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleAddEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleAddEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getGiftPrice() != null ) {
			builder.and(chargeModeCycleAddEntity.giftPrice.eq(vo.getGiftPrice())); //java.math.BigDecimal
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(chargeModeCycleAddEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleAddRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchWithVo(ChargeModeCycleAddEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchLikeVo(ChargeModeCycleAddEntity vo) {
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleAddEntity chargeModeCycleAddEntity = QChargeModeCycleAddEntity.chargeModeCycleAddEntity;

		if ( vo.getAdditionId() != null ) {
			builder.and(chargeModeCycleAddEntity.additionId.eq(vo.getAdditionId())); //java.lang.Integer
		}	
		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(chargeModeCycleAddEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getRealStartDate() != null && !"".equals(vo.getRealStartDate())) {
			builder.and(chargeModeCycleAddEntity.realStartDate.eq(vo.getRealStartDate())); //java.util.Date
		}
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleAddEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getAdditionQuantity() != null ) {
			builder.and(chargeModeCycleAddEntity.additionQuantity.eq(vo.getAdditionQuantity())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleAddEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleAddEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getRealEndDate() != null && !"".equals(vo.getRealEndDate())) {
			builder.and(chargeModeCycleAddEntity.realEndDate.eq(vo.getRealEndDate())); //java.util.Date
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleAddEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleAddEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getGiftPrice() != null ) {
			builder.and(chargeModeCycleAddEntity.giftPrice.eq(vo.getGiftPrice())); //java.math.BigDecimal
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(chargeModeCycleAddEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleAddRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchLikeVo(ChargeModeCycleAddEntity vo, Pageable pageable) {
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QChargeModeCycleAddEntity chargeModeCycleAddEntity = QChargeModeCycleAddEntity.chargeModeCycleAddEntity;

		if ( vo.getAdditionId() != null ) {
			builder.and(chargeModeCycleAddEntity.additionId.eq(vo.getAdditionId())); //java.lang.Integer
		}	
		if ( vo.getEndDate() != null && !"".equals(vo.getEndDate())) {
			builder.and(chargeModeCycleAddEntity.endDate.eq(vo.getEndDate())); //java.util.Date
		}
		if ( vo.getRealStartDate() != null && !"".equals(vo.getRealStartDate())) {
			builder.and(chargeModeCycleAddEntity.realStartDate.eq(vo.getRealStartDate())); //java.util.Date
		}
		if ( vo.getFreeMonth() != null ) {
			builder.and(chargeModeCycleAddEntity.freeMonth.eq(vo.getFreeMonth())); //java.lang.Integer
		}	
		if ( vo.getAdditionQuantity() != null ) {
			builder.and(chargeModeCycleAddEntity.additionQuantity.eq(vo.getAdditionQuantity())); //java.lang.Integer
		}	
		if ( vo.getCreatorId() != null ) {
			builder.and(chargeModeCycleAddEntity.creatorId.eq(vo.getCreatorId())); //java.lang.Integer
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(chargeModeCycleAddEntity.modifierId.eq(vo.getModifierId())); //java.lang.Integer
		}	
		if ( vo.getRealEndDate() != null && !"".equals(vo.getRealEndDate())) {
			builder.and(chargeModeCycleAddEntity.realEndDate.eq(vo.getRealEndDate())); //java.util.Date
		}
		if ( vo.getCreateDate() != null ) {
			builder.and(chargeModeCycleAddEntity.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(chargeModeCycleAddEntity.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		if ( vo.getGiftPrice() != null ) {
			builder.and(chargeModeCycleAddEntity.giftPrice.eq(vo.getGiftPrice())); //java.math.BigDecimal
		}	
		if ( vo.getStartDate() != null && !"".equals(vo.getStartDate())) {
			builder.and(chargeModeCycleAddEntity.startDate.eq(vo.getStartDate())); //java.util.Date
		}
		log.debug("ChargeModeCycleAddRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(chargeModeCycleAddRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<ChargeModeCycleAddEntity> searchLikeVo(ChargeModeCycleAddEntity vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
