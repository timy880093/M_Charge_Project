/*
 * $Header: $
 * This java source file is generated by pkliu on Fri Aug 11 14:13:12 CST 2017
 * For more information, please contact pkliu@meshinnovation.com
 */
package com.gateweb.turnkey.service.impl;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gateweb.einv.service.EinvFacade;
import com.gateweb.turnkey.exception.TurnkeySysException;
import com.gateweb.turnkey.model.Archivedfile;
import com.gateweb.turnkey.model.ArchivedfileKeys;
import com.gateweb.turnkey.model.FromConfig;
import com.gateweb.turnkey.model.Incominginvoice;
import com.gateweb.turnkey.model.Outgoinginvoice;
import com.gateweb.turnkey.model.ScheduleConfig;
import com.gateweb.turnkey.model.SignConfig;
import com.gateweb.turnkey.model.TaskConfig;
import com.gateweb.turnkey.model.TaskConfigKeys;
import com.gateweb.turnkey.model.ToConfig;
import com.gateweb.turnkey.model.ToConfigKeys;
import com.gateweb.turnkey.model.TurnkeyMessageLog;
import com.gateweb.turnkey.model.TurnkeyMessageLogDetail;
import com.gateweb.turnkey.model.TurnkeyMessageLogDetailKeys;
import com.gateweb.turnkey.model.TurnkeyMessageLogKeys;
import com.gateweb.turnkey.model.TurnkeySequence;
import com.gateweb.turnkey.model.TurnkeySyseventLog;
import com.gateweb.turnkey.model.TurnkeyTransportConfig;
import com.gateweb.turnkey.model.TurnkeyUserProfile;
import com.gateweb.turnkey.repository.ArchivedfileRepository;
import com.gateweb.turnkey.repository.FromConfigRepository;
import com.gateweb.turnkey.repository.IncominginvoiceRepository;
import com.gateweb.turnkey.repository.OutgoinginvoiceRepository;
import com.gateweb.turnkey.repository.ScheduleConfigRepository;
import com.gateweb.turnkey.repository.SignConfigRepository;
import com.gateweb.turnkey.repository.TaskConfigRepository;
import com.gateweb.turnkey.repository.ToConfigRepository;
import com.gateweb.turnkey.repository.TurnkeyMessageLogDetailRepository;
import com.gateweb.turnkey.repository.TurnkeyMessageLogRepository;
import com.gateweb.turnkey.repository.TurnkeySequenceRepository;
import com.gateweb.turnkey.repository.TurnkeySyseventLogRepository;
import com.gateweb.turnkey.repository.TurnkeyTransportConfigRepository;
import com.gateweb.turnkey.repository.TurnkeyUserProfileRepository;
import com.gateweb.turnkey.service.TurnkeyFacade;

/**
 * @author pkliu
 *
 */
@Service("turnkeyFacade") 
public class TurnkeyFacadeImpl implements TurnkeyFacade {

	/**
	* <p><code>Log</code> instance for this application. </p>
	*/
	private Log log = LogFactory.getLog(this.getClass().getName());
	
	
	@Autowired
	private EinvFacade einvFacade;
	
	/**
	 * ToConfigRepository
	 */
	@Autowired
	private ToConfigRepository toConfigRepository = null;
	
	
	/**
	 * ScheduleConfigRepository
	 */
	@Autowired
	private ScheduleConfigRepository scheduleConfigRepository = null;
	
	
	/**
	 * TurnkeySequenceRepository
	 */
	@Autowired
	private TurnkeySequenceRepository turnkeySequenceRepository = null;
	
	
	/**
	 * IncominginvoiceRepository
	 */
	@Autowired
	private IncominginvoiceRepository incominginvoiceRepository = null;
	
	
	/**
	 * FromConfigRepository
	 */
	@Autowired
	private FromConfigRepository fromConfigRepository = null;
	
	
	/**
	 * OutgoinginvoiceRepository
	 */
	@Autowired
	private OutgoinginvoiceRepository outgoinginvoiceRepository = null;
	
	
	/**
	 * TurnkeyMessageLogDetailRepository
	 */
	@Autowired
	private TurnkeyMessageLogDetailRepository turnkeyMessageLogDetailRepository = null;
	
	
	/**
	 * TurnkeySyseventLogRepository
	 */
	@Autowired
	private TurnkeySyseventLogRepository turnkeySyseventLogRepository = null;
	
	
	/**
	 * ArchivedfileRepository
	 */
	@Autowired
	private ArchivedfileRepository archivedfileRepository = null;
	
	
	/**
	 * TurnkeyTransportConfigRepository
	 */
	@Autowired
	private TurnkeyTransportConfigRepository turnkeyTransportConfigRepository = null;
	
	
	/**
	 * SignConfigRepository
	 */
	@Autowired
	private SignConfigRepository signConfigRepository = null;
	
	
	/**
	 * TaskConfigRepository
	 */
	@Autowired
	private TaskConfigRepository taskConfigRepository = null;
	
	
	/**
	 * TurnkeyUserProfileRepository
	 */
	@Autowired
	private TurnkeyUserProfileRepository turnkeyUserProfileRepository = null;
	
	
	/**
	 * TurnkeyMessageLogRepository
	 */
	@Autowired
	private TurnkeyMessageLogRepository turnkeyMessageLogRepository = null;
	

	/**
	 *
	 */
	public void setToConfigRepository(ToConfigRepository setRepository){
		this.toConfigRepository = setRepository;
	}
	
	/*
	public ToConfigRepository getToConfigRepository(){
		return this.toConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setScheduleConfigRepository(ScheduleConfigRepository setRepository){
		this.scheduleConfigRepository = setRepository;
	}
	
	/*
	public ScheduleConfigRepository getScheduleConfigRepository(){
		return this.scheduleConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeySequenceRepository(TurnkeySequenceRepository setRepository){
		this.turnkeySequenceRepository = setRepository;
	}
	
	/*
	public TurnkeySequenceRepository getTurnkeySequenceRepository(){
		return this.turnkeySequenceRepository;
	}	
	 */
	/**
	 *
	 */
	public void setIncominginvoiceRepository(IncominginvoiceRepository setRepository){
		this.incominginvoiceRepository = setRepository;
	}
	
	/*
	public IncominginvoiceRepository getIncominginvoiceRepository(){
		return this.incominginvoiceRepository;
	}	
	 */
	/**
	 *
	 */
	public void setFromConfigRepository(FromConfigRepository setRepository){
		this.fromConfigRepository = setRepository;
	}
	
	/*
	public FromConfigRepository getFromConfigRepository(){
		return this.fromConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setOutgoinginvoiceRepository(OutgoinginvoiceRepository setRepository){
		this.outgoinginvoiceRepository = setRepository;
	}
	
	/*
	public OutgoinginvoiceRepository getOutgoinginvoiceRepository(){
		return this.outgoinginvoiceRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeyMessageLogDetailRepository(TurnkeyMessageLogDetailRepository setRepository){
		this.turnkeyMessageLogDetailRepository = setRepository;
	}
	
	/*
	public TurnkeyMessageLogDetailRepository getTurnkeyMessageLogDetailRepository(){
		return this.turnkeyMessageLogDetailRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeySyseventLogRepository(TurnkeySyseventLogRepository setRepository){
		this.turnkeySyseventLogRepository = setRepository;
	}
	
	/*
	public TurnkeySyseventLogRepository getTurnkeySyseventLogRepository(){
		return this.turnkeySyseventLogRepository;
	}	
	 */
	/**
	 *
	 */
	public void setArchivedfileRepository(ArchivedfileRepository setRepository){
		this.archivedfileRepository = setRepository;
	}
	
	/*
	public ArchivedfileRepository getArchivedfileRepository(){
		return this.archivedfileRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeyTransportConfigRepository(TurnkeyTransportConfigRepository setRepository){
		this.turnkeyTransportConfigRepository = setRepository;
	}
	
	/*
	public TurnkeyTransportConfigRepository getTurnkeyTransportConfigRepository(){
		return this.turnkeyTransportConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setSignConfigRepository(SignConfigRepository setRepository){
		this.signConfigRepository = setRepository;
	}
	
	/*
	public SignConfigRepository getSignConfigRepository(){
		return this.signConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTaskConfigRepository(TaskConfigRepository setRepository){
		this.taskConfigRepository = setRepository;
	}
	
	/*
	public TaskConfigRepository getTaskConfigRepository(){
		return this.taskConfigRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeyUserProfileRepository(TurnkeyUserProfileRepository setRepository){
		this.turnkeyUserProfileRepository = setRepository;
	}
	
	/*
	public TurnkeyUserProfileRepository getTurnkeyUserProfileRepository(){
		return this.turnkeyUserProfileRepository;
	}	
	 */
	/**
	 *
	 */
	public void setTurnkeyMessageLogRepository(TurnkeyMessageLogRepository setRepository){
		this.turnkeyMessageLogRepository = setRepository;
	}
	
	/*
	public TurnkeyMessageLogRepository getTurnkeyMessageLogRepository(){
		return this.turnkeyMessageLogRepository;
	}	
	 */
	/**
	 *
	 *
	 */
	public TurnkeyFacadeImpl(){
	}

    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public ToConfig save(ToConfig bean) {

		log.debug("EinvFacadeImpl create ToConfig  before dao save ToConfig :  "+bean);	
		return toConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create ToConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public ToConfig findToConfigById(
		java.lang.String partyId 
,		java.lang.String fromPartyId 
	) {
		
		return findToConfigById(new ToConfigKeys(partyId, fromPartyId));
	}
	
	/**
     * Retrieve a record from Database.
     * @param	id
     */
	public ToConfig findToConfigById(
					ToConfigKeys id
	) {
		ToConfig data = null;
			log.debug("EinvFacadeImpl findToConfigById   findToConfigById :" 
				+"partyId = "+ id.getPartyId()
  				+"fromPartyId = "+ id.getFromPartyId()
			);	
			data = toConfigRepository.findOne(id);			
		log.debug("EinvFacadeImpl searchToConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<ToConfig> findToConfigAll() {
		log.debug("EinvFacadeImpl searchToConfigAll  before dao get all ");	

		List<ToConfig> results = null;
		results = toConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchToConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public ToConfig update(ToConfig bean) {
		log.debug("EinvFacadeImpl update ToConfig   before dao update : bean "+bean);	
		return toConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update ToConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteToConfig(
		java.lang.String partyId 
, 		java.lang.String fromPartyId 
	) {

		deleteToConfig(new ToConfigKeys(partyId, fromPartyId));
	} 
	
    /**
     * Delete a new record in Database.
     */
	public void deleteToConfig(ToConfigKeys id) {

			log.debug("EinvFacadeImpl deleteToConfig   delete :" 
				+"partyId = "+ id.getPartyId()
  				+"fromPartyId = "+ id.getFromPartyId()
			);			
			toConfigRepository.delete(
				id
			);
			 
		log.debug("EinvFacadeImpl deleteToConfig   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<ToConfig> searchBy(ToConfig bean) {
		log.debug("EinvFacadeImpl searchWith ToConfig   before dao searchWith : bean "+bean);	
		List<ToConfig> results = null;
		results = toConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithToConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<ToConfig> searchLike(ToConfig bean) {
		log.debug("EinvFacadeImpl searchLike ToConfig   before dao searchLike : bean "+bean);	
		List<ToConfig> results = null;
		results = toConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeToConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public ScheduleConfig save(ScheduleConfig bean) {

		log.debug("EinvFacadeImpl create ScheduleConfig  before dao save ScheduleConfig :  "+bean);	
		return scheduleConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create ScheduleConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public ScheduleConfig findScheduleConfigById(
		java.lang.String task 
	) {
		ScheduleConfig data = null;
			log.debug("EinvFacadeImpl findScheduleConfigById   findScheduleConfigById :" 
				+"task = "+ task
			);	
			data = scheduleConfigRepository.findOne(
				task 
			);			
		log.debug("EinvFacadeImpl searchScheduleConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<ScheduleConfig> findScheduleConfigAll() {
		log.debug("EinvFacadeImpl searchScheduleConfigAll  before dao get all ");	

		List<ScheduleConfig> results = null;
		results = scheduleConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchScheduleConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public ScheduleConfig update(ScheduleConfig bean) {
		log.debug("EinvFacadeImpl update ScheduleConfig   before dao update : bean "+bean);	
		return scheduleConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update ScheduleConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteScheduleConfig(
		java.lang.String task 
	) {

			log.debug("EinvFacadeImpl deleteScheduleConfig   delete :" 
				+"task = "+ task
			);			
			scheduleConfigRepository.delete(
				task 
			);
			 
		log.debug("EinvFacadeImpl deleteScheduleConfig   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<ScheduleConfig> searchBy(ScheduleConfig bean) {
		log.debug("EinvFacadeImpl searchWith ScheduleConfig   before dao searchWith : bean "+bean);	
		List<ScheduleConfig> results = null;
		results = scheduleConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithScheduleConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<ScheduleConfig> searchLike(ScheduleConfig bean) {
		log.debug("EinvFacadeImpl searchLike ScheduleConfig   before dao searchLike : bean "+bean);	
		List<ScheduleConfig> results = null;
		results = scheduleConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeScheduleConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeySequence save(TurnkeySequence bean) {

		log.debug("EinvFacadeImpl create TurnkeySequence  before dao save TurnkeySequence :  "+bean);	
		return turnkeySequenceRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeySequence   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeySequence findTurnkeySequenceById(
		java.lang.String sequence 
	) {
		TurnkeySequence data = null;
			log.debug("EinvFacadeImpl findTurnkeySequenceById   findTurnkeySequenceById :" 
				+"sequence = "+ sequence
			);	
			data = turnkeySequenceRepository.findOne(
				sequence 
			);			
		log.debug("EinvFacadeImpl searchTurnkeySequenceByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeySequence> findTurnkeySequenceAll() {
		log.debug("EinvFacadeImpl searchTurnkeySequenceAll  before dao get all ");	

		List<TurnkeySequence> results = null;
		results = turnkeySequenceRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeySequenceAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeySequence update(TurnkeySequence bean) {
		log.debug("EinvFacadeImpl update TurnkeySequence   before dao update : bean "+bean);	
		return turnkeySequenceRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeySequence    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeySequence(
		java.lang.String sequence 
	) {

			log.debug("EinvFacadeImpl deleteTurnkeySequence   delete :" 
				+"sequence = "+ sequence
			);			
			turnkeySequenceRepository.delete(
				sequence 
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeySequence   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeySequence> searchBy(TurnkeySequence bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeySequence   before dao searchWith : bean "+bean);	
		List<TurnkeySequence> results = null;
		results = turnkeySequenceRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeySequence   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeySequence> searchLike(TurnkeySequence bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeySequence   before dao searchLike : bean "+bean);	
		List<TurnkeySequence> results = null;
		results = turnkeySequenceRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeySequence   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public Incominginvoice save(Incominginvoice bean) {

		log.debug("EinvFacadeImpl create Incominginvoice  before dao save Incominginvoice :  "+bean);	
		return incominginvoiceRepository.save(bean); 
		//log.debug("EinvFacadeImpl create Incominginvoice   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public Incominginvoice findIncominginvoiceById(
		java.lang.String invoiceid 
	) {
		Incominginvoice data = null;
			log.debug("EinvFacadeImpl findIncominginvoiceById   findIncominginvoiceById :" 
				+"invoiceid = "+ invoiceid
			);	
			data = incominginvoiceRepository.findOne(
				invoiceid 
			);			
		log.debug("EinvFacadeImpl searchIncominginvoiceByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<Incominginvoice> findIncominginvoiceAll() {
		log.debug("EinvFacadeImpl searchIncominginvoiceAll  before dao get all ");	

		List<Incominginvoice> results = null;
		results = incominginvoiceRepository.findAll();
		log.debug("EinvFacadeImpl searchIncominginvoiceAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public Incominginvoice update(Incominginvoice bean) {
		log.debug("EinvFacadeImpl update Incominginvoice   before dao update : bean "+bean);	
		return incominginvoiceRepository.save(bean);
		//log.debug("EinvFacadeImpl update Incominginvoice    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteIncominginvoice(
		java.lang.String invoiceid 
	) {

			log.debug("EinvFacadeImpl deleteIncominginvoice   delete :" 
				+"invoiceid = "+ invoiceid
			);			
			incominginvoiceRepository.delete(
				invoiceid 
			);
			 
		log.debug("EinvFacadeImpl deleteIncominginvoice   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Incominginvoice> searchBy(Incominginvoice bean) {
		log.debug("EinvFacadeImpl searchWith Incominginvoice   before dao searchWith : bean "+bean);	
		List<Incominginvoice> results = null;
		results = incominginvoiceRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithIncominginvoice   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Incominginvoice> searchLike(Incominginvoice bean) {
		log.debug("EinvFacadeImpl searchLike Incominginvoice   before dao searchLike : bean "+bean);	
		List<Incominginvoice> results = null;
		results = incominginvoiceRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeIncominginvoice   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public FromConfig save(FromConfig bean) {

		log.debug("EinvFacadeImpl create FromConfig  before dao save FromConfig :  "+bean);	
		return fromConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create FromConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public FromConfig findFromConfigById(
		java.lang.String partyId 
	) {
		FromConfig data = null;
			log.debug("EinvFacadeImpl findFromConfigById   findFromConfigById :" 
				+"partyId = "+ partyId
			);	
			data = fromConfigRepository.findOne(
				partyId 
			);			
		log.debug("EinvFacadeImpl searchFromConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<FromConfig> findFromConfigAll() {
		log.debug("EinvFacadeImpl searchFromConfigAll  before dao get all ");	

		List<FromConfig> results = null;
		results = fromConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchFromConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public FromConfig update(FromConfig bean) {
		log.debug("EinvFacadeImpl update FromConfig   before dao update : bean "+bean);	
		return fromConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update FromConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteFromConfig(
		java.lang.String partyId 
	) {

			log.debug("EinvFacadeImpl deleteFromConfig   delete :" 
				+"partyId = "+ partyId
			);			
			fromConfigRepository.delete(
				partyId 
			);
			 
		log.debug("EinvFacadeImpl deleteFromConfig   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<FromConfig> searchBy(FromConfig bean) {
		log.debug("EinvFacadeImpl searchWith FromConfig   before dao searchWith : bean "+bean);	
		List<FromConfig> results = null;
		results = fromConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithFromConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<FromConfig> searchLike(FromConfig bean) {
		log.debug("EinvFacadeImpl searchLike FromConfig   before dao searchLike : bean "+bean);	
		List<FromConfig> results = null;
		results = fromConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeFromConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public Outgoinginvoice save(Outgoinginvoice bean) {

		log.debug("EinvFacadeImpl create Outgoinginvoice  before dao save Outgoinginvoice :  "+bean);	
		return outgoinginvoiceRepository.save(bean); 
		//log.debug("EinvFacadeImpl create Outgoinginvoice   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public Outgoinginvoice findOutgoinginvoiceById(
		java.lang.String invoiceid 
	) {
		Outgoinginvoice data = null;
			log.debug("EinvFacadeImpl findOutgoinginvoiceById   findOutgoinginvoiceById :" 
				+"invoiceid = "+ invoiceid
			);	
			data = outgoinginvoiceRepository.findOne(
				invoiceid 
			);			
		log.debug("EinvFacadeImpl searchOutgoinginvoiceByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<Outgoinginvoice> findOutgoinginvoiceAll() {
		log.debug("EinvFacadeImpl searchOutgoinginvoiceAll  before dao get all ");	

		List<Outgoinginvoice> results = null;
		results = outgoinginvoiceRepository.findAll();
		log.debug("EinvFacadeImpl searchOutgoinginvoiceAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public Outgoinginvoice update(Outgoinginvoice bean) {
		log.debug("EinvFacadeImpl update Outgoinginvoice   before dao update : bean "+bean);	
		return outgoinginvoiceRepository.save(bean);
		//log.debug("EinvFacadeImpl update Outgoinginvoice    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteOutgoinginvoice(
		java.lang.String invoiceid 
	) {

			log.debug("EinvFacadeImpl deleteOutgoinginvoice   delete :" 
				+"invoiceid = "+ invoiceid
			);			
			outgoinginvoiceRepository.delete(
				invoiceid 
			);
			 
		log.debug("EinvFacadeImpl deleteOutgoinginvoice   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Outgoinginvoice> searchBy(Outgoinginvoice bean) {
		log.debug("EinvFacadeImpl searchWith Outgoinginvoice   before dao searchWith : bean "+bean);	
		List<Outgoinginvoice> results = null;
		results = outgoinginvoiceRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithOutgoinginvoice   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Outgoinginvoice> searchLike(Outgoinginvoice bean) {
		log.debug("EinvFacadeImpl searchLike Outgoinginvoice   before dao searchLike : bean "+bean);	
		List<Outgoinginvoice> results = null;
		results = outgoinginvoiceRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeOutgoinginvoice   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeyMessageLogDetail save(TurnkeyMessageLogDetail bean) {

		log.debug("EinvFacadeImpl create TurnkeyMessageLogDetail  before dao save TurnkeyMessageLogDetail :  "+bean);	
		return turnkeyMessageLogDetailRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeyMessageLogDetail   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyMessageLogDetail findTurnkeyMessageLogDetailById(
		java.lang.String task 
,		java.lang.String seqno 
,		java.lang.String subseqno 
	) {			
		return findTurnkeyMessageLogDetailById(task,seqno,subseqno);
	}
	
    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyMessageLogDetail findTurnkeyMessageLogDetailById(
					TurnkeyMessageLogDetailKeys id
	) {
		TurnkeyMessageLogDetail data = null;
			log.debug("EinvFacadeImpl findTurnkeyMessageLogDetailById   findTurnkeyMessageLogDetailById :" 
				+"task = "+ id.getTask()
  				+"seqno = "+ id.getSeqno()
  				+"subseqno = "+ id.getSubseqno()
			);	
			data = turnkeyMessageLogDetailRepository.findOne(
				id
			);			
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogDetailByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeyMessageLogDetail> findTurnkeyMessageLogDetailAll() {
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogDetailAll  before dao get all ");	

		List<TurnkeyMessageLogDetail> results = null;
		results = turnkeyMessageLogDetailRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogDetailAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeyMessageLogDetail update(TurnkeyMessageLogDetail bean) {
		log.debug("EinvFacadeImpl update TurnkeyMessageLogDetail   before dao update : bean "+bean);	
		return turnkeyMessageLogDetailRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeyMessageLogDetail    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyMessageLogDetail(
		java.lang.String task 
, 		java.lang.String seqno 
, 		java.lang.String subseqno 
	) {

		deleteTurnkeyMessageLogDetail(new TurnkeyMessageLogDetailKeys(task, seqno, subseqno));
	} 
	
    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyMessageLogDetail(
		TurnkeyMessageLogDetailKeys id
	) {

			log.debug("EinvFacadeImpl deleteTurnkeyMessageLogDetail   delete :" 
				+"task = "+ id.getTask()
  				+"seqno = "+ id.getSeqno()
  				+"subseqno = "+ id.getSubseqno()
			);			
			turnkeyMessageLogDetailRepository.delete(
				id
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeyMessageLogDetail   successfully. ");	
	} 


    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyMessageLogDetail> searchBy(TurnkeyMessageLogDetail bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeyMessageLogDetail   before dao searchWith : bean "+bean);	
		List<TurnkeyMessageLogDetail> results = null;
		results = turnkeyMessageLogDetailRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeyMessageLogDetail   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyMessageLogDetail> searchLike(TurnkeyMessageLogDetail bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeyMessageLogDetail   before dao searchLike : bean "+bean);	
		List<TurnkeyMessageLogDetail> results = null;
		results = turnkeyMessageLogDetailRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeyMessageLogDetail   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeySyseventLog save(TurnkeySyseventLog bean) {

		log.debug("EinvFacadeImpl create TurnkeySyseventLog  before dao save TurnkeySyseventLog :  "+bean);	
		return turnkeySyseventLogRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeySyseventLog   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeySyseventLog findTurnkeySyseventLogById(
		java.lang.String eventdts 
	) {
		TurnkeySyseventLog data = null;
			log.debug("EinvFacadeImpl findTurnkeySyseventLogById   findTurnkeySyseventLogById :" 
				+"eventdts = "+ eventdts
			);	
			data = turnkeySyseventLogRepository.findOne(
				eventdts 
			);			
		log.debug("EinvFacadeImpl searchTurnkeySyseventLogByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeySyseventLog> findTurnkeySyseventLogAll() {
		log.debug("EinvFacadeImpl searchTurnkeySyseventLogAll  before dao get all ");	

		List<TurnkeySyseventLog> results = null;
		results = turnkeySyseventLogRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeySyseventLogAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeySyseventLog update(TurnkeySyseventLog bean) {
		log.debug("EinvFacadeImpl update TurnkeySyseventLog   before dao update : bean "+bean);	
		return turnkeySyseventLogRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeySyseventLog    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeySyseventLog(
		java.lang.String eventdts 
	) {

			log.debug("EinvFacadeImpl deleteTurnkeySyseventLog   delete :" 
				+"eventdts = "+ eventdts
			);			
			turnkeySyseventLogRepository.delete(
				eventdts 
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeySyseventLog   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeySyseventLog> searchBy(TurnkeySyseventLog bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeySyseventLog   before dao searchWith : bean "+bean);	
		List<TurnkeySyseventLog> results = null;
		results = turnkeySyseventLogRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeySyseventLog   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeySyseventLog> searchLike(TurnkeySyseventLog bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeySyseventLog   before dao searchLike : bean "+bean);	
		List<TurnkeySyseventLog> results = null;
		results = turnkeySyseventLogRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeySyseventLog   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public Archivedfile save(Archivedfile bean) {

		log.debug("EinvFacadeImpl create Archivedfile  before dao save Archivedfile :  "+bean);	
		return archivedfileRepository.save(bean); 
		//log.debug("EinvFacadeImpl create Archivedfile   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public Archivedfile findArchivedfileById(
		java.lang.String filetype 
,		java.lang.String fileid 
	) {
		Archivedfile data = null;
			log.debug("EinvFacadeImpl findArchivedfileById   findArchivedfileById :" 
				+"filetype = "+ filetype
  				+"fileid = "+ fileid
			);	
			data = archivedfileRepository.findOne(
				new ArchivedfileKeys(filetype, fileid)
			);			
		log.debug("EinvFacadeImpl searchArchivedfileByKey   successfully.");	
		return data;
	}
	
    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public Archivedfile findArchivedfileById(
		ArchivedfileKeys id
	) {
		Archivedfile data = null;
			log.debug("EinvFacadeImpl findArchivedfileById   findArchivedfileById :" 
				+"filetype = "+ id.getFiletype()
  				+"fileid = "+ id.getFileid()
			);	
			data = archivedfileRepository.findOne(
				id			);			
		log.debug("EinvFacadeImpl searchArchivedfileByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<Archivedfile> findArchivedfileAll() {
		log.debug("EinvFacadeImpl searchArchivedfileAll  before dao get all ");	

		List<Archivedfile> results = null;
		results = archivedfileRepository.findAll();
		log.debug("EinvFacadeImpl searchArchivedfileAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public Archivedfile update(Archivedfile bean) {
		log.debug("EinvFacadeImpl update Archivedfile   before dao update : bean "+bean);	
		return archivedfileRepository.save(bean);
		//log.debug("EinvFacadeImpl update Archivedfile    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteArchivedfile(
		java.lang.String filetype 
, 		java.lang.String fileid 
	) {

			log.debug("EinvFacadeImpl deleteArchivedfile   delete :" 
				+"filetype = "+ filetype
  				+"fileid = "+ fileid
			);			
			archivedfileRepository.deleteById(
				new ArchivedfileKeys(filetype , fileid) 
			);
			 
		log.debug("EinvFacadeImpl deleteArchivedfile   successfully. ");	
	} 
	
    /**
     * Delete a new record in Database.
     */
	public void deleteArchivedfile(ArchivedfileKeys id) {

			log.debug("EinvFacadeImpl deleteArchivedfile   delete :" 
				+"filetype = "+ id.getFiletype()
  				+"fileid = "+ id.getFileid()
			);			
			archivedfileRepository.deleteById(
				id
			);
			 
		log.debug("EinvFacadeImpl deleteArchivedfile   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Archivedfile> searchBy(Archivedfile bean) {
		log.debug("EinvFacadeImpl searchWith Archivedfile   before dao searchWith : bean "+bean);	
		List<Archivedfile> results = null;
		results = archivedfileRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithArchivedfile   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Archivedfile> searchLike(Archivedfile bean) {
		log.debug("EinvFacadeImpl searchLike Archivedfile   before dao searchLike : bean "+bean);	
		List<Archivedfile> results = null;
		results = archivedfileRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeArchivedfile   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeyTransportConfig save(TurnkeyTransportConfig bean) {

		log.debug("EinvFacadeImpl create TurnkeyTransportConfig  before dao save TurnkeyTransportConfig :  "+bean);	
		return turnkeyTransportConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeyTransportConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyTransportConfig findTurnkeyTransportConfigById(
		java.lang.String transportId 
	) {
		TurnkeyTransportConfig data = null;
			log.debug("EinvFacadeImpl findTurnkeyTransportConfigById   findTurnkeyTransportConfigById :" 
				+"transportId = "+ transportId
			);	
			data = turnkeyTransportConfigRepository.findOne(
				transportId 
			);			
		log.debug("EinvFacadeImpl searchTurnkeyTransportConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeyTransportConfig> findTurnkeyTransportConfigAll() {
		log.debug("EinvFacadeImpl searchTurnkeyTransportConfigAll  before dao get all ");	

		List<TurnkeyTransportConfig> results = null;
		results = turnkeyTransportConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeyTransportConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeyTransportConfig update(TurnkeyTransportConfig bean) {
		log.debug("EinvFacadeImpl update TurnkeyTransportConfig   before dao update : bean "+bean);	
		return turnkeyTransportConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeyTransportConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyTransportConfig(
		java.lang.String transportId 
	) {

			log.debug("EinvFacadeImpl deleteTurnkeyTransportConfig   delete :" 
				+"transportId = "+ transportId
			);			
			turnkeyTransportConfigRepository.delete(
				transportId 
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeyTransportConfig   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyTransportConfig> searchBy(TurnkeyTransportConfig bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeyTransportConfig   before dao searchWith : bean "+bean);	
		List<TurnkeyTransportConfig> results = null;
		results = turnkeyTransportConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeyTransportConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyTransportConfig> searchLike(TurnkeyTransportConfig bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeyTransportConfig   before dao searchLike : bean "+bean);	
		List<TurnkeyTransportConfig> results = null;
		results = turnkeyTransportConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeyTransportConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public SignConfig save(SignConfig bean) {

		log.debug("EinvFacadeImpl create SignConfig  before dao save SignConfig :  "+bean);	
		return signConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create SignConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public SignConfig findSignConfigById(
		java.lang.String signId 
	) {
		SignConfig data = null;
			log.debug("EinvFacadeImpl findSignConfigById   findSignConfigById :" 
				+"signId = "+ signId
			);	
			data = signConfigRepository.findOne(
				signId 
			);			
		log.debug("EinvFacadeImpl searchSignConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<SignConfig> findSignConfigAll() {
		log.debug("EinvFacadeImpl searchSignConfigAll  before dao get all ");	

		List<SignConfig> results = null;
		results = signConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchSignConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public SignConfig update(SignConfig bean) {
		log.debug("EinvFacadeImpl update SignConfig   before dao update : bean "+bean);	
		return signConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update SignConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteSignConfig(
		java.lang.String signId 
	) {

			log.debug("EinvFacadeImpl deleteSignConfig   delete :" 
				+"signId = "+ signId
			);			
			signConfigRepository.delete(
				signId 
			);
			 
		log.debug("EinvFacadeImpl deleteSignConfig   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<SignConfig> searchBy(SignConfig bean) {
		log.debug("EinvFacadeImpl searchWith SignConfig   before dao searchWith : bean "+bean);	
		List<SignConfig> results = null;
		results = signConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithSignConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<SignConfig> searchLike(SignConfig bean) {
		log.debug("EinvFacadeImpl searchLike SignConfig   before dao searchLike : bean "+bean);	
		List<SignConfig> results = null;
		results = signConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeSignConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TaskConfig save(TaskConfig bean) {

		log.debug("EinvFacadeImpl create TaskConfig  before dao save TaskConfig :  "+bean);	
		return taskConfigRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TaskConfig   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TaskConfig findTaskConfigById(
		java.lang.String task 
,		java.lang.String categoryType 
,		java.lang.String processType 
	) {
		
		return findTaskConfigById(new TaskConfigKeys(task, categoryType, processType));
	}
	
    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TaskConfig findTaskConfigById(TaskConfigKeys id
	) {
		TaskConfig data = null;
			log.debug("EinvFacadeImpl findTaskConfigById   findTaskConfigById :" 
				+"task = "+ id.getTask()
  				+"categoryType = "+ id.getCategoryType()
  				+"processType = "+ id.getProcessType()
			);	
			data = taskConfigRepository.findOne(
				id
			);			
		log.debug("EinvFacadeImpl searchTaskConfigByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TaskConfig> findTaskConfigAll() {
		log.debug("EinvFacadeImpl searchTaskConfigAll  before dao get all ");	

		List<TaskConfig> results = null;
		results = taskConfigRepository.findAll();
		log.debug("EinvFacadeImpl searchTaskConfigAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TaskConfig update(TaskConfig bean) {
		log.debug("EinvFacadeImpl update TaskConfig   before dao update : bean "+bean);	
		return taskConfigRepository.save(bean);
		//log.debug("EinvFacadeImpl update TaskConfig    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTaskConfig(
		java.lang.String task 
, 		java.lang.String categoryType 
, 		java.lang.String processType 
	) {

			
		deleteTaskConfig(new TaskConfigKeys(task, categoryType, processType ));
	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTaskConfig(
		TaskConfigKeys id
	) {

			log.debug("EinvFacadeImpl deleteTaskConfig   delete :" 
				+"task = "+ id.getTask()
  				+"categoryType = "+ id.getCategoryType()
  				+"processType = "+ id.getProcessType()
			);			
			taskConfigRepository.delete(
				id
			);
			 
		log.debug("EinvFacadeImpl deleteTaskConfig   successfully. ");	
	} 	
	
    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TaskConfig> searchBy(TaskConfig bean) {
		log.debug("EinvFacadeImpl searchWith TaskConfig   before dao searchWith : bean "+bean);	
		List<TaskConfig> results = null;
		results = taskConfigRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTaskConfig   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TaskConfig> searchLike(TaskConfig bean) {
		log.debug("EinvFacadeImpl searchLike TaskConfig   before dao searchLike : bean "+bean);	
		List<TaskConfig> results = null;
		results = taskConfigRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTaskConfig   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeyUserProfile save(TurnkeyUserProfile bean) {

		log.debug("EinvFacadeImpl create TurnkeyUserProfile  before dao save TurnkeyUserProfile :  "+bean);	
		return turnkeyUserProfileRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeyUserProfile   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyUserProfile findTurnkeyUserProfileById(
		java.lang.String userId 
	) {
		TurnkeyUserProfile data = null;
			log.debug("EinvFacadeImpl findTurnkeyUserProfileById   findTurnkeyUserProfileById :" 
				+"userId = "+ userId
			);	
			data = turnkeyUserProfileRepository.findOne(
				userId 
			);			
		log.debug("EinvFacadeImpl searchTurnkeyUserProfileByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeyUserProfile> findTurnkeyUserProfileAll() {
		log.debug("EinvFacadeImpl searchTurnkeyUserProfileAll  before dao get all ");	

		List<TurnkeyUserProfile> results = null;
		results = turnkeyUserProfileRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeyUserProfileAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeyUserProfile update(TurnkeyUserProfile bean) {
		log.debug("EinvFacadeImpl update TurnkeyUserProfile   before dao update : bean "+bean);	
		return turnkeyUserProfileRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeyUserProfile    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyUserProfile(
		java.lang.String userId 
	) {

			log.debug("EinvFacadeImpl deleteTurnkeyUserProfile   delete :" 
				+"userId = "+ userId
			);			
			turnkeyUserProfileRepository.delete(
				userId 
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeyUserProfile   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyUserProfile> searchBy(TurnkeyUserProfile bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeyUserProfile   before dao searchWith : bean "+bean);	
		List<TurnkeyUserProfile> results = null;
		results = turnkeyUserProfileRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeyUserProfile   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyUserProfile> searchLike(TurnkeyUserProfile bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeyUserProfile   before dao searchLike : bean "+bean);	
		List<TurnkeyUserProfile> results = null;
		results = turnkeyUserProfileRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeyUserProfile   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    TurnkeySysException if something is wrong.
     */
	public TurnkeyMessageLog save(TurnkeyMessageLog bean) {

		log.debug("EinvFacadeImpl create TurnkeyMessageLog  before dao save TurnkeyMessageLog :  "+bean);	
		return turnkeyMessageLogRepository.save(bean); 
		//log.debug("EinvFacadeImpl create TurnkeyMessageLog   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyMessageLog findTurnkeyMessageLogById(
		java.lang.String seqno 
		, java.lang.String subseqno 
	) {
		return findTurnkeyMessageLogById(new TurnkeyMessageLogKeys(seqno, subseqno));
	}
	
    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public TurnkeyMessageLog findTurnkeyMessageLogById(
		TurnkeyMessageLogKeys id
	) {
		TurnkeyMessageLog data = null;
			log.debug("EinvFacadeImpl findTurnkeyMessageLogById   findTurnkeyMessageLogById :" 
				+"seqno = "+ id.getSeqno()
  				+"subseqno = "+ id.getSubseqno()
			);	
			data = turnkeyMessageLogRepository.findOne(
				id
			);			
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       TurnkeySysException if something is wrong.
     */
    public List<TurnkeyMessageLog> findTurnkeyMessageLogAll() {
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogAll  before dao get all ");	

		List<TurnkeyMessageLog> results = null;
		results = turnkeyMessageLogRepository.findAll();
		log.debug("EinvFacadeImpl searchTurnkeyMessageLogAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    TurnkeySysException if something is wrong.
     */
    public TurnkeyMessageLog update(TurnkeyMessageLog bean) {
		log.debug("EinvFacadeImpl update TurnkeyMessageLog   before dao update : bean "+bean);	
		return turnkeyMessageLogRepository.save(bean);
		//log.debug("EinvFacadeImpl update TurnkeyMessageLog    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyMessageLog(
		java.lang.String seqno 
, 		java.lang.String subseqno 
	) {

			log.debug("EinvFacadeImpl deleteTurnkeyMessageLog   delete :" 
				+"seqno = "+ seqno
  				+"subseqno = "+ subseqno
			);			
			deleteTurnkeyMessageLog(new TurnkeyMessageLogKeys(seqno, subseqno));
			 
		log.debug("EinvFacadeImpl deleteTurnkeyMessageLog   successfully. ");	
	} 

    /**
     * Delete a new record in Database.
     */
	public void deleteTurnkeyMessageLog(
			TurnkeyMessageLogKeys id
	) {

			log.debug("EinvFacadeImpl deleteTurnkeyMessageLog   delete :" 
				+"seqno = "+ id.getSeqno()
  				+"subseqno = "+ id.getSubseqno()
			);			
			turnkeyMessageLogRepository.delete(
				id
			);
			 
		log.debug("EinvFacadeImpl deleteTurnkeyMessageLog   successfully. ");	
	} 
	
    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyMessageLog> searchBy(TurnkeyMessageLog bean) {
		log.debug("EinvFacadeImpl searchWith TurnkeyMessageLog   before dao searchWith : bean "+bean);	
		List<TurnkeyMessageLog> results = null;
		results = turnkeyMessageLogRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithTurnkeyMessageLog   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyMessageLog> searchLike(TurnkeyMessageLog bean) {
		log.debug("EinvFacadeImpl searchLike TurnkeyMessageLog   before dao searchLike : bean "+bean);	
		List<TurnkeyMessageLog> results = null;
		results = turnkeyMessageLogRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeTurnkeyMessageLog   successfully. ");	
		return results;
    }
    
    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<TurnkeyMessageLog> searchLikeTurnkeyMessageLogTop100() {
		log.debug("EinvFacadeImpl searchLike searchLikeTurnkeyMessageLogTop100   before dao searchLike Top 100");	
		List<TurnkeyMessageLog> results = null;
		results = turnkeyMessageLogRepository.findTop100();
		log.debug("EinvFacadeImpl searchLikeTurnkeyMessageLogTop100   successfully. ");	
		return results;
    }
    

    
}
