/*
 * $Header: $
 * This java source file is generated by pkliu on Fri Aug 11 14:13:12 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.turnkey.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.ManyToOne;
import javax.persistence.JoinColumn;
import static javax.persistence.GenerationType.IDENTITY;
import static javax.persistence.GenerationType.AUTO;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import com.meshinnovation.db.model.BaseObject;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 *
 * @author pkliu
 *
 */
@Entity
@Table(name = "to_config")
public class ToConfig extends BaseObject{

//long serialVersionUID jdk tool: serialver.exe 
	
	@EmbeddedId
    private ToConfigKeys id;

	/**
	 * routing_description
	 */
	@Column(name = "routing_description")
	protected java.lang.String routingDescription;
	
    
	
	/**
	 * party_description
	 */
	@Column(name = "party_description")
	protected java.lang.String partyDescription;
	
	/**
	 * routing_id
	 */
	@Column(name = "routing_id")
	protected java.lang.String routingId;
	
    
	/**
	 * @return the id
	 */
	public ToConfigKeys getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(ToConfigKeys id) {
		this.id = id;
	}

	/**
	 * 002
	 * @return java.lang.String routingDescription
	 */
	public java.lang.String getRoutingDescription() {
		return this.routingDescription;
	}
	
	/** 0001
	 * @param data Set the routingDescription
	 */	
	public void setRoutingDescription(java.lang.String data) {
		this.routingDescription = data;
	}	
	
	/**
	 * 002
	 * @return java.lang.String partyDescription
	 */
	public java.lang.String getPartyDescription() {
		return this.partyDescription;
	}
	
	/** 0001
	 * @param data Set the partyDescription
	 */	
	public void setPartyDescription(java.lang.String data) {
		this.partyDescription = data;
	}	
	/**
	 * 002
	 * @return java.lang.String routingId
	 */
	public java.lang.String getRoutingId() {
		return this.routingId;
	}
	
	/** 0001
	 * @param data Set the routingId
	 */	
	public void setRoutingId(java.lang.String data) {
		this.routingId = data;
	}	

	/**
	 *
	 */
	public ToConfig(){
	}

	/**
	 * full constructor 
	 * @param routingDescription 
	 * @param partyId 
	 * @param partyDescription 
	 * @param routingId 
	 * @param fromPartyId 
	 */
	public ToConfig (
		 java.lang.String routingDescription 
		, java.lang.String partyDescription 
		, java.lang.String routingId 
		, ToConfigKeys id
        ) {
		this.setRoutingDescription(routingDescription);
		this.setId(id);
		this.setPartyDescription(partyDescription);
		this.setRoutingId(routingId);
    }

	
	@Override
	public int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

	@Override
	public String toString() {
		 //return ToStringBuilder.reflectionToString(this , ToStringStyle.MULTI_LINE_STYLE);  
		 return new ToStringBuilder(this)
		.append("routingDescription", this.routingDescription)
		.append("partyId", this.id.partyId)
		.append("partyDescription", this.partyDescription)
		.append("routingId", this.routingId)
		.append("fromPartyId", this.id.fromPartyId)
		.toString();
	}	 

	/*
    @Override
	public boolean equals(Object object) {
		if (object == null || !(object instanceof ToConfig))
			return false;
		EqualsBuilder builder = new EqualsBuilder();
		builder.append(this.id, ((ToConfig) object).id);
		return builder.isEquals();
	}*/
	
	/**
	 * Indicates whether some other object is "equal to" this one.
	 * @return true is equal, false is not equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;

		if (obj == null || !(obj instanceof ToConfig))
			return false;

		ToConfig key = (ToConfig) obj;
		if (this.id.partyId != key.id.partyId ) 
        	return false;
		if (this.id.fromPartyId != key.id.fromPartyId ) 
        	return false;

		return true;
    }

}