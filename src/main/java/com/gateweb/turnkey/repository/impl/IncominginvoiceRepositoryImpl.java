/*
 * $Header: $
 * This java source file is generated by pkliu on Fri Aug 11 14:13:12 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.turnkey.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.turnkey.model.Incominginvoice;
import com.gateweb.turnkey.model.QIncominginvoice;
import com.gateweb.turnkey.repository.IncominginvoiceRepository;
import com.gateweb.turnkey.repository.IncominginvoiceRepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of Incominginvoice
 */
//@Repository("incominginvoiceRepositoryCustom")
public class IncominginvoiceRepositoryImpl implements IncominginvoiceRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	IncominginvoiceRepository incominginvoiceRepository;
	
	public IncominginvoiceRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchWithVo(Incominginvoice vo) {
		log.debug("IncominginvoiceRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QIncominginvoice incominginvoice = QIncominginvoice.incominginvoice;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(incominginvoice.seller.equalsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getEbxmlmsgfileid() != null && !"".equals(vo.getEbxmlmsgfileid())) {
			builder.and(incominginvoice.ebxmlmsgfileid.equalsIgnoreCase(vo.getEbxmlmsgfileid())); //java.lang.String
		}
		if ( vo.getInserttime() != null ) {
			builder.and(incominginvoice.inserttime.eq(vo.getInserttime())); //java.sql.Timestamp
		}	
		if ( vo.getLocktime() != null ) {
			builder.and(incominginvoice.locktime.eq(vo.getLocktime())); //java.sql.Timestamp
		}	
		if ( vo.getConversationid() != null && !"".equals(vo.getConversationid())) {
			builder.and(incominginvoice.conversationid.equalsIgnoreCase(vo.getConversationid())); //java.lang.String
		}
		if ( vo.getCompletetime() != null ) {
			builder.and(incominginvoice.completetime.eq(vo.getCompletetime())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceid() != null && !"".equals(vo.getInvoiceid())) {
			builder.and(incominginvoice.invoiceid.equalsIgnoreCase(vo.getInvoiceid())); //java.lang.String
		}
		if ( vo.getInvoicenumber() != null && !"".equals(vo.getInvoicenumber())) {
			builder.and(incominginvoice.invoicenumber.equalsIgnoreCase(vo.getInvoicenumber())); //java.lang.String
		}
		if ( vo.getContenttype() != null && !"".equals(vo.getContenttype())) {
			builder.and(incominginvoice.contenttype.equalsIgnoreCase(vo.getContenttype())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(incominginvoice.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getStatus() != null && !"".equals(vo.getStatus())) {
			builder.and(incominginvoice.status.equalsIgnoreCase(vo.getStatus())); //java.lang.String
		}
		log.debug("IncominginvoiceRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(incominginvoiceRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchWithVo(Incominginvoice vo, Pageable pageable) {
		log.debug("IncominginvoiceRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QIncominginvoice incominginvoice = QIncominginvoice.incominginvoice;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(incominginvoice.seller.equalsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getEbxmlmsgfileid() != null && !"".equals(vo.getEbxmlmsgfileid())) {
			builder.and(incominginvoice.ebxmlmsgfileid.equalsIgnoreCase(vo.getEbxmlmsgfileid())); //java.lang.String
		}
		if ( vo.getInserttime() != null ) {
			builder.and(incominginvoice.inserttime.eq(vo.getInserttime())); //java.sql.Timestamp
		}	
		if ( vo.getLocktime() != null ) {
			builder.and(incominginvoice.locktime.eq(vo.getLocktime())); //java.sql.Timestamp
		}	
		if ( vo.getConversationid() != null && !"".equals(vo.getConversationid())) {
			builder.and(incominginvoice.conversationid.equalsIgnoreCase(vo.getConversationid())); //java.lang.String
		}
		if ( vo.getCompletetime() != null ) {
			builder.and(incominginvoice.completetime.eq(vo.getCompletetime())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceid() != null && !"".equals(vo.getInvoiceid())) {
			builder.and(incominginvoice.invoiceid.equalsIgnoreCase(vo.getInvoiceid())); //java.lang.String
		}
		if ( vo.getInvoicenumber() != null && !"".equals(vo.getInvoicenumber())) {
			builder.and(incominginvoice.invoicenumber.equalsIgnoreCase(vo.getInvoicenumber())); //java.lang.String
		}
		if ( vo.getContenttype() != null && !"".equals(vo.getContenttype())) {
			builder.and(incominginvoice.contenttype.equalsIgnoreCase(vo.getContenttype())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(incominginvoice.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getStatus() != null && !"".equals(vo.getStatus())) {
			builder.and(incominginvoice.status.equalsIgnoreCase(vo.getStatus())); //java.lang.String
		}
		log.debug("IncominginvoiceRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(incominginvoiceRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchWithVo(Incominginvoice vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchLikeVo(Incominginvoice vo) {
		log.debug("IncominginvoiceRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QIncominginvoice incominginvoice = QIncominginvoice.incominginvoice;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(incominginvoice.seller.containsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getEbxmlmsgfileid() != null && !"".equals(vo.getEbxmlmsgfileid())) {
			builder.and(incominginvoice.ebxmlmsgfileid.containsIgnoreCase(vo.getEbxmlmsgfileid())); //java.lang.String
		}
		if ( vo.getInserttime() != null ) {
			builder.and(incominginvoice.inserttime.eq(vo.getInserttime())); //java.sql.Timestamp
		}	
		if ( vo.getLocktime() != null ) {
			builder.and(incominginvoice.locktime.eq(vo.getLocktime())); //java.sql.Timestamp
		}	
		if ( vo.getConversationid() != null && !"".equals(vo.getConversationid())) {
			builder.and(incominginvoice.conversationid.containsIgnoreCase(vo.getConversationid())); //java.lang.String
		}
		if ( vo.getCompletetime() != null ) {
			builder.and(incominginvoice.completetime.eq(vo.getCompletetime())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceid() != null && !"".equals(vo.getInvoiceid())) {
			builder.and(incominginvoice.invoiceid.containsIgnoreCase(vo.getInvoiceid())); //java.lang.String
		}
		if ( vo.getInvoicenumber() != null && !"".equals(vo.getInvoicenumber())) {
			builder.and(incominginvoice.invoicenumber.containsIgnoreCase(vo.getInvoicenumber())); //java.lang.String
		}
		if ( vo.getContenttype() != null && !"".equals(vo.getContenttype())) {
			builder.and(incominginvoice.contenttype.containsIgnoreCase(vo.getContenttype())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(incominginvoice.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getStatus() != null && !"".equals(vo.getStatus())) {
			builder.and(incominginvoice.status.containsIgnoreCase(vo.getStatus())); //java.lang.String
		}
		log.debug("IncominginvoiceRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(incominginvoiceRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchLikeVo(Incominginvoice vo, Pageable pageable) {
		log.debug("IncominginvoiceRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QIncominginvoice incominginvoice = QIncominginvoice.incominginvoice;

		if ( vo.getSeller() != null && !"".equals(vo.getSeller())) {
			builder.and(incominginvoice.seller.containsIgnoreCase(vo.getSeller())); //java.lang.String
		}
		if ( vo.getEbxmlmsgfileid() != null && !"".equals(vo.getEbxmlmsgfileid())) {
			builder.and(incominginvoice.ebxmlmsgfileid.containsIgnoreCase(vo.getEbxmlmsgfileid())); //java.lang.String
		}
		if ( vo.getInserttime() != null ) {
			builder.and(incominginvoice.inserttime.eq(vo.getInserttime())); //java.sql.Timestamp
		}	
		if ( vo.getLocktime() != null ) {
			builder.and(incominginvoice.locktime.eq(vo.getLocktime())); //java.sql.Timestamp
		}	
		if ( vo.getConversationid() != null && !"".equals(vo.getConversationid())) {
			builder.and(incominginvoice.conversationid.containsIgnoreCase(vo.getConversationid())); //java.lang.String
		}
		if ( vo.getCompletetime() != null ) {
			builder.and(incominginvoice.completetime.eq(vo.getCompletetime())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceid() != null && !"".equals(vo.getInvoiceid())) {
			builder.and(incominginvoice.invoiceid.containsIgnoreCase(vo.getInvoiceid())); //java.lang.String
		}
		if ( vo.getInvoicenumber() != null && !"".equals(vo.getInvoicenumber())) {
			builder.and(incominginvoice.invoicenumber.containsIgnoreCase(vo.getInvoicenumber())); //java.lang.String
		}
		if ( vo.getContenttype() != null && !"".equals(vo.getContenttype())) {
			builder.and(incominginvoice.contenttype.containsIgnoreCase(vo.getContenttype())); //java.lang.String
		}
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(incominginvoice.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getStatus() != null && !"".equals(vo.getStatus())) {
			builder.and(incominginvoice.status.containsIgnoreCase(vo.getStatus())); //java.lang.String
		}
		log.debug("IncominginvoiceRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(incominginvoiceRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<Incominginvoice> searchLikeVo(Incominginvoice vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
