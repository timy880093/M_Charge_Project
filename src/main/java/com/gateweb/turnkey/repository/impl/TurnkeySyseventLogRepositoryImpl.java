/*
 * $Header: $
 * This java source file is generated by pkliu on Fri Aug 11 14:13:12 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.turnkey.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.turnkey.model.QTurnkeySyseventLog;
import com.gateweb.turnkey.model.TurnkeySyseventLog;
import com.gateweb.turnkey.repository.TurnkeySyseventLogRepository;
import com.gateweb.turnkey.repository.TurnkeySyseventLogRepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of TurnkeySyseventLog
 */
//@Repository("turnkeySyseventLogRepositoryCustom")
public class TurnkeySyseventLogRepositoryImpl implements TurnkeySyseventLogRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	TurnkeySyseventLogRepository turnkeySyseventLogRepository;
	
	public TurnkeySyseventLogRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchWithVo(TurnkeySyseventLog vo) {
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QTurnkeySyseventLog turnkeySyseventLog = QTurnkeySyseventLog.turnkeySyseventLog;

		if ( vo.getSeqno() != null && !"".equals(vo.getSeqno())) {
			builder.and(turnkeySyseventLog.seqno.equalsIgnoreCase(vo.getSeqno())); //java.lang.String
		}
		if ( vo.getUuid() != null && !"".equals(vo.getUuid())) {
			builder.and(turnkeySyseventLog.uuid.equalsIgnoreCase(vo.getUuid())); //java.lang.String
		}
		if ( vo.getPartyId() != null && !"".equals(vo.getPartyId())) {
			builder.and(turnkeySyseventLog.partyId.equalsIgnoreCase(vo.getPartyId())); //java.lang.String
		}
		if ( vo.getMessage4() != null && !"".equals(vo.getMessage4())) {
			builder.and(turnkeySyseventLog.message4.equalsIgnoreCase(vo.getMessage4())); //java.lang.String
		}
		if ( vo.getMessage3() != null && !"".equals(vo.getMessage3())) {
			builder.and(turnkeySyseventLog.message3.equalsIgnoreCase(vo.getMessage3())); //java.lang.String
		}
		if ( vo.getEventdts() != null && !"".equals(vo.getEventdts())) {
			builder.and(turnkeySyseventLog.eventdts.equalsIgnoreCase(vo.getEventdts())); //java.lang.String
		}
		if ( vo.getMessage6() != null && !"".equals(vo.getMessage6())) {
			builder.and(turnkeySyseventLog.message6.equalsIgnoreCase(vo.getMessage6())); //java.lang.String
		}
		if ( vo.getMessage5() != null && !"".equals(vo.getMessage5())) {
			builder.and(turnkeySyseventLog.message5.equalsIgnoreCase(vo.getMessage5())); //java.lang.String
		}
		if ( vo.getInformation1() != null && !"".equals(vo.getInformation1())) {
			builder.and(turnkeySyseventLog.information1.equalsIgnoreCase(vo.getInformation1())); //java.lang.String
		}
		if ( vo.getErrorcode() != null && !"".equals(vo.getErrorcode())) {
			builder.and(turnkeySyseventLog.errorcode.equalsIgnoreCase(vo.getErrorcode())); //java.lang.String
		}
		if ( vo.getInformation2() != null && !"".equals(vo.getInformation2())) {
			builder.and(turnkeySyseventLog.information2.equalsIgnoreCase(vo.getInformation2())); //java.lang.String
		}
		if ( vo.getMessage2() != null && !"".equals(vo.getMessage2())) {
			builder.and(turnkeySyseventLog.message2.equalsIgnoreCase(vo.getMessage2())); //java.lang.String
		}
		if ( vo.getSubseqno() != null && !"".equals(vo.getSubseqno())) {
			builder.and(turnkeySyseventLog.subseqno.equalsIgnoreCase(vo.getSubseqno())); //java.lang.String
		}
		if ( vo.getInformation3() != null && !"".equals(vo.getInformation3())) {
			builder.and(turnkeySyseventLog.information3.equalsIgnoreCase(vo.getInformation3())); //java.lang.String
		}
		if ( vo.getMessage1() != null && !"".equals(vo.getMessage1())) {
			builder.and(turnkeySyseventLog.message1.equalsIgnoreCase(vo.getMessage1())); //java.lang.String
		}
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(turnkeySyseventLogRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchWithVo(TurnkeySyseventLog vo, Pageable pageable) {
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QTurnkeySyseventLog turnkeySyseventLog = QTurnkeySyseventLog.turnkeySyseventLog;

		if ( vo.getSeqno() != null && !"".equals(vo.getSeqno())) {
			builder.and(turnkeySyseventLog.seqno.equalsIgnoreCase(vo.getSeqno())); //java.lang.String
		}
		if ( vo.getUuid() != null && !"".equals(vo.getUuid())) {
			builder.and(turnkeySyseventLog.uuid.equalsIgnoreCase(vo.getUuid())); //java.lang.String
		}
		if ( vo.getPartyId() != null && !"".equals(vo.getPartyId())) {
			builder.and(turnkeySyseventLog.partyId.equalsIgnoreCase(vo.getPartyId())); //java.lang.String
		}
		if ( vo.getMessage4() != null && !"".equals(vo.getMessage4())) {
			builder.and(turnkeySyseventLog.message4.equalsIgnoreCase(vo.getMessage4())); //java.lang.String
		}
		if ( vo.getMessage3() != null && !"".equals(vo.getMessage3())) {
			builder.and(turnkeySyseventLog.message3.equalsIgnoreCase(vo.getMessage3())); //java.lang.String
		}
		if ( vo.getEventdts() != null && !"".equals(vo.getEventdts())) {
			builder.and(turnkeySyseventLog.eventdts.equalsIgnoreCase(vo.getEventdts())); //java.lang.String
		}
		if ( vo.getMessage6() != null && !"".equals(vo.getMessage6())) {
			builder.and(turnkeySyseventLog.message6.equalsIgnoreCase(vo.getMessage6())); //java.lang.String
		}
		if ( vo.getMessage5() != null && !"".equals(vo.getMessage5())) {
			builder.and(turnkeySyseventLog.message5.equalsIgnoreCase(vo.getMessage5())); //java.lang.String
		}
		if ( vo.getInformation1() != null && !"".equals(vo.getInformation1())) {
			builder.and(turnkeySyseventLog.information1.equalsIgnoreCase(vo.getInformation1())); //java.lang.String
		}
		if ( vo.getErrorcode() != null && !"".equals(vo.getErrorcode())) {
			builder.and(turnkeySyseventLog.errorcode.equalsIgnoreCase(vo.getErrorcode())); //java.lang.String
		}
		if ( vo.getInformation2() != null && !"".equals(vo.getInformation2())) {
			builder.and(turnkeySyseventLog.information2.equalsIgnoreCase(vo.getInformation2())); //java.lang.String
		}
		if ( vo.getMessage2() != null && !"".equals(vo.getMessage2())) {
			builder.and(turnkeySyseventLog.message2.equalsIgnoreCase(vo.getMessage2())); //java.lang.String
		}
		if ( vo.getSubseqno() != null && !"".equals(vo.getSubseqno())) {
			builder.and(turnkeySyseventLog.subseqno.equalsIgnoreCase(vo.getSubseqno())); //java.lang.String
		}
		if ( vo.getInformation3() != null && !"".equals(vo.getInformation3())) {
			builder.and(turnkeySyseventLog.information3.equalsIgnoreCase(vo.getInformation3())); //java.lang.String
		}
		if ( vo.getMessage1() != null && !"".equals(vo.getMessage1())) {
			builder.and(turnkeySyseventLog.message1.equalsIgnoreCase(vo.getMessage1())); //java.lang.String
		}
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(turnkeySyseventLogRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchWithVo(TurnkeySyseventLog vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchLikeVo(TurnkeySyseventLog vo) {
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QTurnkeySyseventLog turnkeySyseventLog = QTurnkeySyseventLog.turnkeySyseventLog;

		if ( vo.getSeqno() != null && !"".equals(vo.getSeqno())) {
			builder.and(turnkeySyseventLog.seqno.containsIgnoreCase(vo.getSeqno())); //java.lang.String
		}
		if ( vo.getUuid() != null && !"".equals(vo.getUuid())) {
			builder.and(turnkeySyseventLog.uuid.containsIgnoreCase(vo.getUuid())); //java.lang.String
		}
		if ( vo.getPartyId() != null && !"".equals(vo.getPartyId())) {
			builder.and(turnkeySyseventLog.partyId.containsIgnoreCase(vo.getPartyId())); //java.lang.String
		}
		if ( vo.getMessage4() != null && !"".equals(vo.getMessage4())) {
			builder.and(turnkeySyseventLog.message4.containsIgnoreCase(vo.getMessage4())); //java.lang.String
		}
		if ( vo.getMessage3() != null && !"".equals(vo.getMessage3())) {
			builder.and(turnkeySyseventLog.message3.containsIgnoreCase(vo.getMessage3())); //java.lang.String
		}
		if ( vo.getEventdts() != null && !"".equals(vo.getEventdts())) {
			builder.and(turnkeySyseventLog.eventdts.containsIgnoreCase(vo.getEventdts())); //java.lang.String
		}
		if ( vo.getMessage6() != null && !"".equals(vo.getMessage6())) {
			builder.and(turnkeySyseventLog.message6.containsIgnoreCase(vo.getMessage6())); //java.lang.String
		}
		if ( vo.getMessage5() != null && !"".equals(vo.getMessage5())) {
			builder.and(turnkeySyseventLog.message5.containsIgnoreCase(vo.getMessage5())); //java.lang.String
		}
		if ( vo.getInformation1() != null && !"".equals(vo.getInformation1())) {
			builder.and(turnkeySyseventLog.information1.containsIgnoreCase(vo.getInformation1())); //java.lang.String
		}
		if ( vo.getErrorcode() != null && !"".equals(vo.getErrorcode())) {
			builder.and(turnkeySyseventLog.errorcode.containsIgnoreCase(vo.getErrorcode())); //java.lang.String
		}
		if ( vo.getInformation2() != null && !"".equals(vo.getInformation2())) {
			builder.and(turnkeySyseventLog.information2.containsIgnoreCase(vo.getInformation2())); //java.lang.String
		}
		if ( vo.getMessage2() != null && !"".equals(vo.getMessage2())) {
			builder.and(turnkeySyseventLog.message2.containsIgnoreCase(vo.getMessage2())); //java.lang.String
		}
		if ( vo.getSubseqno() != null && !"".equals(vo.getSubseqno())) {
			builder.and(turnkeySyseventLog.subseqno.containsIgnoreCase(vo.getSubseqno())); //java.lang.String
		}
		if ( vo.getInformation3() != null && !"".equals(vo.getInformation3())) {
			builder.and(turnkeySyseventLog.information3.containsIgnoreCase(vo.getInformation3())); //java.lang.String
		}
		if ( vo.getMessage1() != null && !"".equals(vo.getMessage1())) {
			builder.and(turnkeySyseventLog.message1.containsIgnoreCase(vo.getMessage1())); //java.lang.String
		}
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(turnkeySyseventLogRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchLikeVo(TurnkeySyseventLog vo, Pageable pageable) {
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QTurnkeySyseventLog turnkeySyseventLog = QTurnkeySyseventLog.turnkeySyseventLog;

		if ( vo.getSeqno() != null && !"".equals(vo.getSeqno())) {
			builder.and(turnkeySyseventLog.seqno.containsIgnoreCase(vo.getSeqno())); //java.lang.String
		}
		if ( vo.getUuid() != null && !"".equals(vo.getUuid())) {
			builder.and(turnkeySyseventLog.uuid.containsIgnoreCase(vo.getUuid())); //java.lang.String
		}
		if ( vo.getPartyId() != null && !"".equals(vo.getPartyId())) {
			builder.and(turnkeySyseventLog.partyId.containsIgnoreCase(vo.getPartyId())); //java.lang.String
		}
		if ( vo.getMessage4() != null && !"".equals(vo.getMessage4())) {
			builder.and(turnkeySyseventLog.message4.containsIgnoreCase(vo.getMessage4())); //java.lang.String
		}
		if ( vo.getMessage3() != null && !"".equals(vo.getMessage3())) {
			builder.and(turnkeySyseventLog.message3.containsIgnoreCase(vo.getMessage3())); //java.lang.String
		}
		if ( vo.getEventdts() != null && !"".equals(vo.getEventdts())) {
			builder.and(turnkeySyseventLog.eventdts.containsIgnoreCase(vo.getEventdts())); //java.lang.String
		}
		if ( vo.getMessage6() != null && !"".equals(vo.getMessage6())) {
			builder.and(turnkeySyseventLog.message6.containsIgnoreCase(vo.getMessage6())); //java.lang.String
		}
		if ( vo.getMessage5() != null && !"".equals(vo.getMessage5())) {
			builder.and(turnkeySyseventLog.message5.containsIgnoreCase(vo.getMessage5())); //java.lang.String
		}
		if ( vo.getInformation1() != null && !"".equals(vo.getInformation1())) {
			builder.and(turnkeySyseventLog.information1.containsIgnoreCase(vo.getInformation1())); //java.lang.String
		}
		if ( vo.getErrorcode() != null && !"".equals(vo.getErrorcode())) {
			builder.and(turnkeySyseventLog.errorcode.containsIgnoreCase(vo.getErrorcode())); //java.lang.String
		}
		if ( vo.getInformation2() != null && !"".equals(vo.getInformation2())) {
			builder.and(turnkeySyseventLog.information2.containsIgnoreCase(vo.getInformation2())); //java.lang.String
		}
		if ( vo.getMessage2() != null && !"".equals(vo.getMessage2())) {
			builder.and(turnkeySyseventLog.message2.containsIgnoreCase(vo.getMessage2())); //java.lang.String
		}
		if ( vo.getSubseqno() != null && !"".equals(vo.getSubseqno())) {
			builder.and(turnkeySyseventLog.subseqno.containsIgnoreCase(vo.getSubseqno())); //java.lang.String
		}
		if ( vo.getInformation3() != null && !"".equals(vo.getInformation3())) {
			builder.and(turnkeySyseventLog.information3.containsIgnoreCase(vo.getInformation3())); //java.lang.String
		}
		if ( vo.getMessage1() != null && !"".equals(vo.getMessage1())) {
			builder.and(turnkeySyseventLog.message1.containsIgnoreCase(vo.getMessage1())); //java.lang.String
		}
		log.debug("TurnkeySyseventLogRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(turnkeySyseventLogRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<TurnkeySyseventLog> searchLikeVo(TurnkeySyseventLog vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
