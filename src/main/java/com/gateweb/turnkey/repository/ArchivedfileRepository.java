/*
 * $Header: $
 * This java source file is generated by pkliu on Fri Aug 11 14:13:12 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.turnkey.repository; 
    
import java.sql.SQLException;
import java.util.Collection;
import com.gateweb.turnkey.*;
import com.gateweb.turnkey.model.*;
import com.meshinnovation.db.dao.exception.DaoSystemException;
import java.io.Serializable;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.querydsl.QueryDslPredicateExecutor;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of Archivedfile
 */
@Repository("archivedfileRepository")
public interface ArchivedfileRepository extends JpaRepository<Archivedfile, ArchivedfileKeys>
	, QueryDslPredicateExecutor<Archivedfile> ,ArchivedfileRepositoryCustom {
	
	 /**
	  * 
	  * @param id
	  * @throws DaoSystemException
	  */
	void deleteById(ArchivedfileKeys id) throws DaoSystemException;
	
	Long deleteByIdFileid(String fileid);
	
	Long deleteByIdFiletype(String filetype);

	public Archivedfile findById(ArchivedfileKeys id);
	
	public Page<Archivedfile> findById(ArchivedfileKeys id, Pageable pageable);
	
	public boolean exists(ArchivedfileKeys id);
	
	public List<Archivedfile> findAll();
	
	@Query(value="select * from Archivedfile LIMIT 100", nativeQuery=true)
	public List<Archivedfile> findArchivedfileTop100();
	
	//findByIdFileid  EmbeddedKey: Id , fileid is the attribute of embeddedKey  
	public List<Archivedfile> findByIdFileid(String fileid);
	
    @Query("FROM Archivedfile a WHERE a.id.filetype = :filetype ORDER BY a.id.filetype DESC")
	public List<Archivedfile> findByIdFiletype(@Param("filetype") String filetype);
	
	public List<Archivedfile> findTop100ByIdFileid(String fileid);
	
	public List<Archivedfile> findTop100ByIdFiletype(String filetype);
	
	
	
	public long count();

			
}

	