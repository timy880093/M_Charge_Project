/*
 * $Header: $
 * This java source file is generated by pkliu on Thu Aug 03 11:22:57 CST 2017
 * For more information, please contact pkliu@meshinnovation.com
 */
package com.gateweb.einv.service.impl;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.gateweb.einv.exception.EinvSysException;
import com.gateweb.einv.model.AccountReference;
import com.gateweb.einv.model.Company;
import com.gateweb.einv.model.InvoiceDetails;
import com.gateweb.einv.model.InvoiceMain;
import com.gateweb.einv.model.User;
import com.gateweb.einv.repository.AccountReferenceRepository;
import com.gateweb.einv.repository.CompanyRepository;
import com.gateweb.einv.repository.InvoiceDetailsRepository;
import com.gateweb.einv.repository.InvoiceMainRepository;
import com.gateweb.einv.repository.UserRepository;
import com.gateweb.einv.service.EinvFacade;
/**
 * @author pkliu
 *
 */
@Service("einvFacade") 
public class EinvFacadeImpl implements EinvFacade {

	/**
	* <p><code>Log</code> instance for this application. </p>
	*/
	private Log log = LogFactory.getLog(this.getClass().getName());
	
	
	/**
	 * InvoiceMainRepository
	 */
	@Autowired
	//@Qualifier("invoiceMainRepository")
	private InvoiceMainRepository invoiceMainRepository = null;
	
	
	/**
	 * CompanyRepository
	 */
	@Autowired
	//@Qualifier("companyRepository")
	private CompanyRepository companyRepository = null;
	
	
	/**
	 * UserRepository
	 */
	@Autowired
	//@Qualifier("userRepository")
	private UserRepository userRepository = null;
	
	
	/**
	 * InvoiceDetailsRepository
	 */
	@Autowired
	//@Qualifier("invoiceDetailsRepository")
	private InvoiceDetailsRepository invoiceDetailsRepository = null;
	


	/**
	 *
	 */
	public void setInvoiceMainRepository(InvoiceMainRepository setRepository){
		this.invoiceMainRepository = setRepository;
	}
	
	/*
	public InvoiceMainRepository getInvoiceMainRepository(){
		return this.invoiceMainRepository;
	}	
	 */
	/**
	 *
	 */
	public void setCompanyRepository(CompanyRepository setRepository){
		this.companyRepository = setRepository;
	}
	
	/*
	public CompanyRepository getCompanyRepository(){
		return this.companyRepository;
	}	
	 */
	/**
	 *
	 */
	public void setUserRepository(UserRepository setRepository){
		this.userRepository = setRepository;
	}
	
	/*
	public UserRepository getUserRepository(){
		return this.userRepository;
	}	
	 */
	/**
	 *
	 */
	public void setInvoiceDetailsRepository(InvoiceDetailsRepository setRepository){
		this.invoiceDetailsRepository = setRepository;
	}
	
	/*
	public InvoiceDetailsRepository getInvoiceDetailsRepository(){
		return this.invoiceDetailsRepository;
	}	
	 */
	/**
	 *
	 *
	 */
	public EinvFacadeImpl(){
	}

    /**
     * Create a new record in Database.
     * @exception    EinvSysException if something is wrong.
     */
	public InvoiceMain save(InvoiceMain bean) {

		log.debug("EinvFacadeImpl create InvoiceMain  before dao save InvoiceMain :  "+bean);	
		return invoiceMainRepository.save(bean); 
		//log.debug("EinvFacadeImpl create InvoiceMain   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public InvoiceMain findInvoiceMainById(
		java.lang.Long invoiceId 
	) {
		InvoiceMain data = null;
			log.debug("EinvFacadeImpl findInvoiceMainById   findInvoiceMainById :" 
				+"invoiceId = "+ invoiceId
			);	
			data = invoiceMainRepository.findOne(
				invoiceId 
			);			
		log.debug("EinvFacadeImpl searchInvoiceMainByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       EinvSysException if something is wrong.
     */
    public List<InvoiceMain> findInvoiceMainAll() {
		log.debug("EinvFacadeImpl searchInvoiceMainAll  before dao get all ");	

		List<InvoiceMain> results = null;
		results = invoiceMainRepository.findAll();
		log.debug("EinvFacadeImpl searchInvoiceMainAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    EinvSysException if something is wrong.
     */
    public InvoiceMain update(InvoiceMain bean) {
		log.debug("EinvFacadeImpl update InvoiceMain   before dao update : bean "+bean);	
		return invoiceMainRepository.save(bean);
		//log.debug("EinvFacadeImpl update InvoiceMain    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteInvoiceMain(
		java.lang.Long invoiceId 
	) {

			log.debug("EinvFacadeImpl deleteInvoiceMain   delete :" 
				+"invoiceId = "+ invoiceId
			);			
			invoiceMainRepository.delete(
				invoiceId 
			);
			 
		log.debug("EinvFacadeImpl deleteInvoiceMain   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<InvoiceMain> searchBy(InvoiceMain bean) {
		log.debug("EinvFacadeImpl searchWith InvoiceMain   before dao searchWith : bean "+bean);	
		List<InvoiceMain> results = null;
		results = invoiceMainRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithInvoiceMain   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<InvoiceMain> searchLike(InvoiceMain bean) {
		log.debug("EinvFacadeImpl searchLike InvoiceMain   before dao searchLike : bean "+bean);	
		List<InvoiceMain> results = null;
		results = invoiceMainRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeInvoiceMain   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    EinvSysException if something is wrong.
     */
	public Company save(Company bean) {

		log.debug("EinvFacadeImpl create Company  before dao save Company :  "+bean);	
		return companyRepository.save(bean); 
		//log.debug("EinvFacadeImpl create Company   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public Company findCompanyById(
		java.lang.Long companyId 
	) {
		Company data = null;
			log.debug("EinvFacadeImpl findCompanyById   findCompanyById :" 
				+"companyId = "+ companyId
			);	
			data = companyRepository.findOne(
				companyId 
			);			
		log.debug("EinvFacadeImpl searchCompanyByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       EinvSysException if something is wrong.
     */
    public List<Company> findCompanyAll() {
		log.debug("EinvFacadeImpl searchCompanyAll  before dao get all ");	

		List<Company> results = null;
		results = companyRepository.findAll();
		log.debug("EinvFacadeImpl searchCompanyAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    EinvSysException if something is wrong.
     */
    public Company update(Company bean) {
		log.debug("EinvFacadeImpl update Company   before dao update : bean "+bean);	
		return companyRepository.save(bean);
		//log.debug("EinvFacadeImpl update Company    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteCompany(
		java.lang.Long companyId 
	) {

			log.debug("EinvFacadeImpl deleteCompany   delete :" 
				+"companyId = "+ companyId
			);			
			companyRepository.delete(
				companyId 
			);
			 
		log.debug("EinvFacadeImpl deleteCompany   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Company> searchBy(Company bean) {
		log.debug("EinvFacadeImpl searchWith Company   before dao searchWith : bean "+bean);	
		List<Company> results = null;
		results = companyRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithCompany   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<Company> searchLike(Company bean) {
		log.debug("EinvFacadeImpl searchLike Company   before dao searchLike : bean "+bean);	
		List<Company> results = null;
		results = companyRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeCompany   successfully. ");	
		return results;
    }
    /**
     * Create a new record in Database.
     * @exception    EinvSysException if something is wrong.
     */
	public User save(User bean) {

		log.debug("EinvFacadeImpl create User  before dao save User :  "+bean);	
		return userRepository.save(bean); 
		//log.debug("EinvFacadeImpl create User   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public User findUserById(
		java.lang.Long userId 
	) {
		User data = null;
			log.debug("EinvFacadeImpl findUserById   findUserById :" 
				+"userId = "+ userId
			);	
			data = userRepository.findOne(
				userId 
			);			
		log.debug("EinvFacadeImpl searchUserByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       EinvSysException if something is wrong.
     */
    public List<User> findUserAll() {
		log.debug("EinvFacadeImpl searchUserAll  before dao get all ");	

		List<User> results = null;
		results = userRepository.findAll();
		log.debug("EinvFacadeImpl searchUserAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    EinvSysException if something is wrong.
     */
    public User update(User bean) {
		log.debug("EinvFacadeImpl update User   before dao update : bean "+bean);	
		return userRepository.save(bean);
		//log.debug("EinvFacadeImpl update User    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteUser(
		java.lang.Long userId 
	) {

			log.debug("EinvFacadeImpl deleteUser   delete :" 
				+"userId = "+ userId
			);			
			userRepository.delete(
				userId 
			);
			 
		log.debug("EinvFacadeImpl deleteUser   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<User> searchBy(User bean) {
		log.debug("EinvFacadeImpl searchWith User   before dao searchWith : bean "+bean);	
		List<User> results = null;
		results = userRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithUser   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<User> searchLike(User bean) {
		log.debug("EinvFacadeImpl searchLike User   before dao searchLike : bean "+bean);	
		List<User> results = null;
		results = userRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeUser   successfully. ");	
		return results;
    }

    /**
     * Create a new record in Database.
     * @exception    EinvSysException if something is wrong.
     */
	public InvoiceDetails save(InvoiceDetails bean) {

		log.debug("EinvFacadeImpl create InvoiceDetails  before dao save InvoiceDetails :  "+bean);	
		return invoiceDetailsRepository.save(bean); 
		//log.debug("EinvFacadeImpl create InvoiceDetails   successfully.");		
	}

    /**
     * Retrieve a record from Database.
     * @param	id
     */
	public InvoiceDetails findInvoiceDetailsById(
		java.lang.Long invoiceDetailsId 
	) {
		InvoiceDetails data = null;
			log.debug("EinvFacadeImpl findInvoiceDetailsById   findInvoiceDetailsById :" 
				+"invoiceDetailsId = "+ invoiceDetailsId
			);	
			data = invoiceDetailsRepository.findOne(
				invoiceDetailsId 
			);			
		log.debug("EinvFacadeImpl searchInvoiceDetailsByKey   successfully.");	
		return data;
	}

    /**
     * Retrieve all records from Database.
     * @exception       EinvSysException if something is wrong.
     */
    public List<InvoiceDetails> findInvoiceDetailsAll() {
		log.debug("EinvFacadeImpl searchInvoiceDetailsAll  before dao get all ");	

		List<InvoiceDetails> results = null;
		results = invoiceDetailsRepository.findAll();
		log.debug("EinvFacadeImpl searchInvoiceDetailsAll   successfully.");	
		return results;
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @exception    EinvSysException if something is wrong.
     */
    public InvoiceDetails update(InvoiceDetails bean) {
		log.debug("EinvFacadeImpl update InvoiceDetails   before dao update : bean "+bean);	
		return invoiceDetailsRepository.save(bean);
		//log.debug("EinvFacadeImpl update InvoiceDetails    successfully.");	

	}

    /**
     * Delete a new record in Database.
     */
	public void deleteInvoiceDetails(
		java.lang.Long invoiceDetailsId 
	) {

			log.debug("EinvFacadeImpl deleteInvoiceDetails   delete :" 
				+"invoiceDetailsId = "+ invoiceDetailsId
			);			
			invoiceDetailsRepository.delete(
				invoiceDetailsId 
			);
			 
		log.debug("EinvFacadeImpl deleteInvoiceDetails   successfully. ");	
	} 

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<InvoiceDetails> searchBy(InvoiceDetails bean) {
		log.debug("EinvFacadeImpl searchWith InvoiceDetails   before dao searchWith : bean "+bean);	
		List<InvoiceDetails> results = null;
		results = invoiceDetailsRepository.searchWithVo(bean);	
		log.debug("EinvFacadeImpl searchWithInvoiceDetails   successfully. ");	
		return results;
    }

    /**
     * search records from Database.
     * @param bean   The Object search criteria
     */
    public List<InvoiceDetails> searchLike(InvoiceDetails bean) {
		log.debug("EinvFacadeImpl searchLike InvoiceDetails   before dao searchLike : bean "+bean);	
		List<InvoiceDetails> results = null;
		results = invoiceDetailsRepository.searchLikeVo(bean);
		log.debug("EinvFacadeImpl searchLikeInvoiceDetails   successfully. ");	
		return results;
    }
    
 
}
