/*
 * $Header: $
 * This java source file is generated by pkliu on Thu Aug 03 11:22:57 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.einv.repository.impl; 
//import org.springframework.orm.ObjectRetrievalFailureException;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.gateweb.einv.model.InvoiceDetails;
import com.gateweb.einv.model.QInvoiceDetails;
import com.gateweb.einv.repository.InvoiceDetailsRepository;
import com.gateweb.einv.repository.InvoiceDetailsRepositoryCustom;
import com.google.common.collect.Lists;
import com.querydsl.core.BooleanBuilder;


/**
 * 
 * @author pkliu
 *
 * This class provides methods to populate DB Table of InvoiceDetails
 */
//@Repository("invoiceDetailsRepositoryCustom")
public class InvoiceDetailsRepositoryImpl implements InvoiceDetailsRepositoryCustom {
	
	/**
	 * <p>
	 * <code>Log</code> instance for this application.
	 * </p>
	 */
	protected final Log log = LogFactory.getLog(getClass());
	
	/*	@PersistenceContext
	private EntityManager em;

	public void setEntityManager(EntityManager em) {
		this.em = em;
	}*/

	@Autowired
	InvoiceDetailsRepository invoiceDetailsRepository;
	
	public InvoiceDetailsRepositoryImpl(){
	}
	

	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchWithVo(InvoiceDetails vo) {
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceDetails invoiceDetails = QInvoiceDetails.invoiceDetails;

		if ( vo.getCRemark1() != null && !"".equals(vo.getCRemark1())) {
			builder.and(invoiceDetails.cRemark1.equalsIgnoreCase(vo.getCRemark1())); //java.lang.String
		}
		if ( vo.getCRemark2() != null && !"".equals(vo.getCRemark2())) {
			builder.and(invoiceDetails.cRemark2.equalsIgnoreCase(vo.getCRemark2())); //java.lang.String
		}
		if ( vo.getDescription() != null && !"".equals(vo.getDescription())) {
			builder.and(invoiceDetails.description.equalsIgnoreCase(vo.getDescription())); //java.lang.String
		}
		if ( vo.getNotTaxInclusivePrice() != null ) {
			builder.and(invoiceDetails.notTaxInclusivePrice.eq(vo.getNotTaxInclusivePrice())); //java.math.BigDecimal
		}	
		if ( vo.getRemark() != null && !"".equals(vo.getRemark())) {
			builder.and(invoiceDetails.remark.equalsIgnoreCase(vo.getRemark())); //java.lang.String
		}
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceDetails.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceDetails.relateNumber.equalsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getItemNo() != null && !"".equals(vo.getItemNo())) {
			builder.and(invoiceDetails.itemNo.equalsIgnoreCase(vo.getItemNo())); //java.lang.String
		}
		if ( vo.getInvoiceDetailsId() != null ) {
			builder.and(invoiceDetails.invoiceDetailsId.eq(vo.getInvoiceDetailsId())); //java.lang.Long
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceDetails.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceDetails.invoiceNumber.equalsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBarcode() != null && !"".equals(vo.getBarcode())) {
			builder.and(invoiceDetails.barcode.equalsIgnoreCase(vo.getBarcode())); //java.lang.String
		}
		if ( vo.getAllowanceTax() != null ) {
			builder.and(invoiceDetails.allowanceTax.eq(vo.getAllowanceTax())); //java.lang.Long
		}	
		if ( vo.getAmount() != null ) {
			builder.and(invoiceDetails.amount.eq(vo.getAmount())); //java.math.BigDecimal
		}	
		if ( vo.getQuantity() != null ) {
			builder.and(invoiceDetails.quantity.eq(vo.getQuantity())); //java.math.BigDecimal
		}	
		if ( vo.getAllowanceAmount() != null ) {
			builder.and(invoiceDetails.allowanceAmount.eq(vo.getAllowanceAmount())); //java.lang.Long
		}	
		if ( vo.getCYearMonth() != null && !"".equals(vo.getCYearMonth())) {
			builder.and(invoiceDetails.cYearMonth.equalsIgnoreCase(vo.getCYearMonth())); //java.lang.String
		}
		if ( vo.getUnitPrice() != null ) {
			builder.and(invoiceDetails.unitPrice.eq(vo.getUnitPrice())); //java.math.BigDecimal
		}	
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceDetails.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getSequenceNumber() != null ) {
			builder.and(invoiceDetails.sequenceNumber.eq(vo.getSequenceNumber())); //java.lang.Long
		}	
		if ( vo.getUnit() != null && !"".equals(vo.getUnit())) {
			builder.and(invoiceDetails.unit.equalsIgnoreCase(vo.getUnit())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceDetails.taxType.equalsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceDetails.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceDetails.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getAllowanceQuantity() != null ) {
			builder.and(invoiceDetails.allowanceQuantity.eq(vo.getAllowanceQuantity())); //java.lang.Long
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceDetails.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceDetailsRepository.findAll(builder.getValue()));	
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchWithVo(InvoiceDetails vo, Pageable pageable) {
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceDetails invoiceDetails = QInvoiceDetails.invoiceDetails;

		if ( vo.getCRemark1() != null && !"".equals(vo.getCRemark1())) {
			builder.and(invoiceDetails.cRemark1.equalsIgnoreCase(vo.getCRemark1())); //java.lang.String
		}
		if ( vo.getCRemark2() != null && !"".equals(vo.getCRemark2())) {
			builder.and(invoiceDetails.cRemark2.equalsIgnoreCase(vo.getCRemark2())); //java.lang.String
		}
		if ( vo.getDescription() != null && !"".equals(vo.getDescription())) {
			builder.and(invoiceDetails.description.equalsIgnoreCase(vo.getDescription())); //java.lang.String
		}
		if ( vo.getNotTaxInclusivePrice() != null ) {
			builder.and(invoiceDetails.notTaxInclusivePrice.eq(vo.getNotTaxInclusivePrice())); //java.math.BigDecimal
		}	
		if ( vo.getRemark() != null && !"".equals(vo.getRemark())) {
			builder.and(invoiceDetails.remark.equalsIgnoreCase(vo.getRemark())); //java.lang.String
		}
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceDetails.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceDetails.relateNumber.equalsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getItemNo() != null && !"".equals(vo.getItemNo())) {
			builder.and(invoiceDetails.itemNo.equalsIgnoreCase(vo.getItemNo())); //java.lang.String
		}
		if ( vo.getInvoiceDetailsId() != null ) {
			builder.and(invoiceDetails.invoiceDetailsId.eq(vo.getInvoiceDetailsId())); //java.lang.Long
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceDetails.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceDetails.invoiceNumber.equalsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBarcode() != null && !"".equals(vo.getBarcode())) {
			builder.and(invoiceDetails.barcode.equalsIgnoreCase(vo.getBarcode())); //java.lang.String
		}
		if ( vo.getAllowanceTax() != null ) {
			builder.and(invoiceDetails.allowanceTax.eq(vo.getAllowanceTax())); //java.lang.Long
		}	
		if ( vo.getAmount() != null ) {
			builder.and(invoiceDetails.amount.eq(vo.getAmount())); //java.math.BigDecimal
		}	
		if ( vo.getQuantity() != null ) {
			builder.and(invoiceDetails.quantity.eq(vo.getQuantity())); //java.math.BigDecimal
		}	
		if ( vo.getAllowanceAmount() != null ) {
			builder.and(invoiceDetails.allowanceAmount.eq(vo.getAllowanceAmount())); //java.lang.Long
		}	
		if ( vo.getCYearMonth() != null && !"".equals(vo.getCYearMonth())) {
			builder.and(invoiceDetails.cYearMonth.equalsIgnoreCase(vo.getCYearMonth())); //java.lang.String
		}
		if ( vo.getUnitPrice() != null ) {
			builder.and(invoiceDetails.unitPrice.eq(vo.getUnitPrice())); //java.math.BigDecimal
		}	
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceDetails.buyer.equalsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getSequenceNumber() != null ) {
			builder.and(invoiceDetails.sequenceNumber.eq(vo.getSequenceNumber())); //java.lang.Long
		}	
		if ( vo.getUnit() != null && !"".equals(vo.getUnit())) {
			builder.and(invoiceDetails.unit.equalsIgnoreCase(vo.getUnit())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceDetails.taxType.equalsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceDetails.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceDetails.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getAllowanceQuantity() != null ) {
			builder.and(invoiceDetails.allowanceQuantity.eq(vo.getAllowanceQuantity())); //java.lang.Long
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceDetails.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceDetailsRepository.findAll(builder.getValue(), pageable));	
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchWithVo(InvoiceDetails vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchWithVo(vo, pageable);
	}
	
	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchLikeVo(InvoiceDetails vo) {
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceDetails invoiceDetails = QInvoiceDetails.invoiceDetails;

		if ( vo.getCRemark1() != null && !"".equals(vo.getCRemark1())) {
			builder.and(invoiceDetails.cRemark1.containsIgnoreCase(vo.getCRemark1())); //java.lang.String
		}
		if ( vo.getCRemark2() != null && !"".equals(vo.getCRemark2())) {
			builder.and(invoiceDetails.cRemark2.containsIgnoreCase(vo.getCRemark2())); //java.lang.String
		}
		if ( vo.getDescription() != null && !"".equals(vo.getDescription())) {
			builder.and(invoiceDetails.description.containsIgnoreCase(vo.getDescription())); //java.lang.String
		}
		if ( vo.getNotTaxInclusivePrice() != null ) {
			builder.and(invoiceDetails.notTaxInclusivePrice.eq(vo.getNotTaxInclusivePrice())); //java.math.BigDecimal
		}	
		if ( vo.getRemark() != null && !"".equals(vo.getRemark())) {
			builder.and(invoiceDetails.remark.containsIgnoreCase(vo.getRemark())); //java.lang.String
		}
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceDetails.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceDetails.relateNumber.containsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getItemNo() != null && !"".equals(vo.getItemNo())) {
			builder.and(invoiceDetails.itemNo.containsIgnoreCase(vo.getItemNo())); //java.lang.String
		}
		if ( vo.getInvoiceDetailsId() != null ) {
			builder.and(invoiceDetails.invoiceDetailsId.eq(vo.getInvoiceDetailsId())); //java.lang.Long
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceDetails.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceDetails.invoiceNumber.containsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBarcode() != null && !"".equals(vo.getBarcode())) {
			builder.and(invoiceDetails.barcode.containsIgnoreCase(vo.getBarcode())); //java.lang.String
		}
		if ( vo.getAllowanceTax() != null ) {
			builder.and(invoiceDetails.allowanceTax.eq(vo.getAllowanceTax())); //java.lang.Long
		}	
		if ( vo.getAmount() != null ) {
			builder.and(invoiceDetails.amount.eq(vo.getAmount())); //java.math.BigDecimal
		}	
		if ( vo.getQuantity() != null ) {
			builder.and(invoiceDetails.quantity.eq(vo.getQuantity())); //java.math.BigDecimal
		}	
		if ( vo.getAllowanceAmount() != null ) {
			builder.and(invoiceDetails.allowanceAmount.eq(vo.getAllowanceAmount())); //java.lang.Long
		}	
		if ( vo.getCYearMonth() != null && !"".equals(vo.getCYearMonth())) {
			builder.and(invoiceDetails.cYearMonth.containsIgnoreCase(vo.getCYearMonth())); //java.lang.String
		}
		if ( vo.getUnitPrice() != null ) {
			builder.and(invoiceDetails.unitPrice.eq(vo.getUnitPrice())); //java.math.BigDecimal
		}	
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceDetails.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getSequenceNumber() != null ) {
			builder.and(invoiceDetails.sequenceNumber.eq(vo.getSequenceNumber())); //java.lang.Long
		}	
		if ( vo.getUnit() != null && !"".equals(vo.getUnit())) {
			builder.and(invoiceDetails.unit.containsIgnoreCase(vo.getUnit())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceDetails.taxType.containsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceDetails.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceDetails.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getAllowanceQuantity() != null ) {
			builder.and(invoiceDetails.allowanceQuantity.eq(vo.getAllowanceQuantity())); //java.lang.Long
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceDetails.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceDetailsRepository.findAll(builder.getValue()));
	}		
	
	

	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchLikeVo(InvoiceDetails vo, Pageable pageable) {
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo vo: " + vo);
		BooleanBuilder builder = new BooleanBuilder();
		QInvoiceDetails invoiceDetails = QInvoiceDetails.invoiceDetails;

		if ( vo.getCRemark1() != null && !"".equals(vo.getCRemark1())) {
			builder.and(invoiceDetails.cRemark1.containsIgnoreCase(vo.getCRemark1())); //java.lang.String
		}
		if ( vo.getCRemark2() != null && !"".equals(vo.getCRemark2())) {
			builder.and(invoiceDetails.cRemark2.containsIgnoreCase(vo.getCRemark2())); //java.lang.String
		}
		if ( vo.getDescription() != null && !"".equals(vo.getDescription())) {
			builder.and(invoiceDetails.description.containsIgnoreCase(vo.getDescription())); //java.lang.String
		}
		if ( vo.getNotTaxInclusivePrice() != null ) {
			builder.and(invoiceDetails.notTaxInclusivePrice.eq(vo.getNotTaxInclusivePrice())); //java.math.BigDecimal
		}	
		if ( vo.getRemark() != null && !"".equals(vo.getRemark())) {
			builder.and(invoiceDetails.remark.containsIgnoreCase(vo.getRemark())); //java.lang.String
		}
		if ( vo.getTaxRate() != null ) {
			builder.and(invoiceDetails.taxRate.eq(vo.getTaxRate())); //java.lang.Float
		}	
		if ( vo.getRelateNumber() != null && !"".equals(vo.getRelateNumber())) {
			builder.and(invoiceDetails.relateNumber.containsIgnoreCase(vo.getRelateNumber())); //java.lang.String
		}
		if ( vo.getItemNo() != null && !"".equals(vo.getItemNo())) {
			builder.and(invoiceDetails.itemNo.containsIgnoreCase(vo.getItemNo())); //java.lang.String
		}
		if ( vo.getInvoiceDetailsId() != null ) {
			builder.and(invoiceDetails.invoiceDetailsId.eq(vo.getInvoiceDetailsId())); //java.lang.Long
		}	
		if ( vo.getCreateDate() != null ) {
			builder.and(invoiceDetails.createDate.eq(vo.getCreateDate())); //java.sql.Timestamp
		}	
		if ( vo.getInvoiceNumber() != null && !"".equals(vo.getInvoiceNumber())) {
			builder.and(invoiceDetails.invoiceNumber.containsIgnoreCase(vo.getInvoiceNumber())); //java.lang.String
		}
		if ( vo.getBarcode() != null && !"".equals(vo.getBarcode())) {
			builder.and(invoiceDetails.barcode.containsIgnoreCase(vo.getBarcode())); //java.lang.String
		}
		if ( vo.getAllowanceTax() != null ) {
			builder.and(invoiceDetails.allowanceTax.eq(vo.getAllowanceTax())); //java.lang.Long
		}	
		if ( vo.getAmount() != null ) {
			builder.and(invoiceDetails.amount.eq(vo.getAmount())); //java.math.BigDecimal
		}	
		if ( vo.getQuantity() != null ) {
			builder.and(invoiceDetails.quantity.eq(vo.getQuantity())); //java.math.BigDecimal
		}	
		if ( vo.getAllowanceAmount() != null ) {
			builder.and(invoiceDetails.allowanceAmount.eq(vo.getAllowanceAmount())); //java.lang.Long
		}	
		if ( vo.getCYearMonth() != null && !"".equals(vo.getCYearMonth())) {
			builder.and(invoiceDetails.cYearMonth.containsIgnoreCase(vo.getCYearMonth())); //java.lang.String
		}
		if ( vo.getUnitPrice() != null ) {
			builder.and(invoiceDetails.unitPrice.eq(vo.getUnitPrice())); //java.math.BigDecimal
		}	
		if ( vo.getBuyer() != null && !"".equals(vo.getBuyer())) {
			builder.and(invoiceDetails.buyer.containsIgnoreCase(vo.getBuyer())); //java.lang.String
		}
		if ( vo.getSequenceNumber() != null ) {
			builder.and(invoiceDetails.sequenceNumber.eq(vo.getSequenceNumber())); //java.lang.Long
		}	
		if ( vo.getUnit() != null && !"".equals(vo.getUnit())) {
			builder.and(invoiceDetails.unit.containsIgnoreCase(vo.getUnit())); //java.lang.String
		}
		if ( vo.getTaxType() != null && !"".equals(vo.getTaxType())) {
			builder.and(invoiceDetails.taxType.containsIgnoreCase(vo.getTaxType())); //java.lang.String
		}
		if ( vo.getCreatorId() != null ) {
			builder.and(invoiceDetails.creatorId.eq(vo.getCreatorId())); //java.lang.Long
		}	
		if ( vo.getModifierId() != null ) {
			builder.and(invoiceDetails.modifierId.eq(vo.getModifierId())); //java.lang.Long
		}	
		if ( vo.getAllowanceQuantity() != null ) {
			builder.and(invoiceDetails.allowanceQuantity.eq(vo.getAllowanceQuantity())); //java.lang.Long
		}	
		if ( vo.getModifyDate() != null ) {
			builder.and(invoiceDetails.modifyDate.eq(vo.getModifyDate())); //java.sql.Timestamp
		}	
		log.debug("InvoiceDetailsRepositoryImpl searchWithVo predicate  " + builder.getValue());
		return Lists.newArrayList(invoiceDetailsRepository.findAll(builder.getValue(), pageable));
	}	
	
	@SuppressWarnings("unchecked")
	public List<InvoiceDetails> searchLikeVo(InvoiceDetails vo, int pageOffset, int pageSize) {
		Pageable pageable = new PageRequest(pageOffset, pageSize);
		return searchLikeVo(vo, pageable);
	}
	
}
